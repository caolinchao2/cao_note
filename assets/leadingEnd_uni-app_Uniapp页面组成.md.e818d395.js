import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.b5309610.js";const b=JSON.parse('{"title":"Uniapp页面组成","description":"","frontmatter":{},"headers":[],"relativePath":"leadingEnd/uni-app/Uniapp页面组成.md","filePath":"leadingEnd/uni-app/Uniapp页面组成.md","lastUpdated":1730456661000}'),t={name:"leadingEnd/uni-app/Uniapp页面组成.md"},e=l(`<h1 id="uniapp页面组成" tabindex="-1">Uniapp页面组成 <a class="header-anchor" href="#uniapp页面组成" aria-label="Permalink to &quot;Uniapp页面组成&quot;">​</a></h1><h3 id="页面简介" tabindex="-1">页面简介 <a class="header-anchor" href="#页面简介" aria-label="Permalink to &quot;页面简介&quot;">​</a></h3><p><code>uni-app</code>项目中，一个页面就是一个符合<code>Vue SFC</code>规范的<code>.vue</code>文件或<code>.nvue</code>文件。</p><p><code>.vue</code>页面和<code>.nvue</code>页面，均全平台支持，差异在于当uni-app发行到App平台时，<code>.vue</code>文件会使用<code>webview</code>进行渲染，<code>.nvue</code>会使用原生进行渲染</p><h3 id="新建页面" tabindex="-1">新建页面 <a class="header-anchor" href="#新建页面" aria-label="Permalink to &quot;新建页面&quot;">​</a></h3><p>uni-app中的页面，通常会保存在工程根目录下的pages目录下。</p><p>每次新建页面，均需在pages.json中配置pages列表；未在pages.json -&gt; pages 中配置的页面，uni-app会在编译阶段进行忽略</p><p>通过HBuilderX开发 uni-app 项目时，在 uni-app 项目上右键“新建页面”，HBuilderX会自动在pages.json中完成页面注册，开发更方便。</p><p>同时，HBuilderX 还内置了常用的页面模板（如图文列表、商品列表等），选择这些模板，可以大幅提升你的开发效率。</p><h3 id="删除页面" tabindex="-1">删除页面 <a class="header-anchor" href="#删除页面" aria-label="Permalink to &quot;删除页面&quot;">​</a></h3><p>删除页面时，需做两件工作：</p><ul><li>删除<code>.vue</code>文件或.nvue文件</li><li>删除<code>pages.json</code> -&gt; pages列表项中的配置</li></ul><h3 id="应用首页" tabindex="-1">应用首页 <a class="header-anchor" href="#应用首页" aria-label="Permalink to &quot;应用首页&quot;">​</a></h3><p>uni-app会将pages.json -&gt; pages配置项中的第一个页面，作为当前工程的首页（启动页）</p><h3 id="页面生命周期" tabindex="-1">页面生命周期 <a class="header-anchor" href="#页面生命周期" aria-label="Permalink to &quot;页面生命周期&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">函数名</th><th style="text-align:left;">说明</th><th style="text-align:left;">平台差异说明</th><th style="text-align:left;">最低版本</th></tr></thead><tbody><tr><td style="text-align:left;">onInit</td><td style="text-align:left;">监听页面初始化，其参数同 onLoad 参数，为上个页面传递的数据，参数类型为 Object（用于页面传参），触发时机早于 onLoad</td><td style="text-align:left;">百度小程序</td><td style="text-align:left;">3.1.0+</td></tr><tr><td style="text-align:left;">onLoad</td><td style="text-align:left;">监听页面加载，其参数为上个页面传递的数据，参数类型为 Object（用于页面传参），参考<a href="https://uniapp.dcloud.net.cn/api/router#navigateto" target="_blank" rel="noreferrer">示例(opens new window)</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onShow</td><td style="text-align:left;">监听页面显示。页面每次出现在屏幕上都触发，包括从下级页面点返回露出当前页面</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onReady</td><td style="text-align:left;">监听页面初次渲染完成。注意如果渲染速度快，会在页面进入动画完成前触发</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onHide</td><td style="text-align:left;">监听页面隐藏</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onUnload</td><td style="text-align:left;">监听页面卸载</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onResize</td><td style="text-align:left;">监听窗口尺寸变化</td><td style="text-align:left;">App、微信小程序、快手小程序</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onPullDownRefresh</td><td style="text-align:left;">监听用户下拉动作，一般用于下拉刷新，参考<a href="https://uniapp.dcloud.net.cn/api/ui/pulldown" target="_blank" rel="noreferrer">示例(opens new window)</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onReachBottom</td><td style="text-align:left;">页面滚动到底部的事件（不是scroll-view滚到底），常用于下拉下一页数据。具体见下方注意事项</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onTabItemTap</td><td style="text-align:left;">点击 tab 时触发，参数为Object，具体见下方注意事项</td><td style="text-align:left;">微信小程序、QQ小程序、支付宝小程序、百度小程序、H5、App、快手小程序、京东小程序</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onShareAppMessage</td><td style="text-align:left;">用户点击右上角分享</td><td style="text-align:left;">微信小程序、QQ小程序、支付宝小程序、字节小程序、飞书小程序、快手小程序、京东小程序</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onPageScroll</td><td style="text-align:left;">监听页面滚动，参数为Object</td><td style="text-align:left;">nvue暂不支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onNavigationBarButtonTap</td><td style="text-align:left;">监听原生标题栏按钮点击事件，参数为Object</td><td style="text-align:left;">App、H5</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onBackPress</td><td style="text-align:left;">监听页面返回，返回 event = {from:backbutton、 navigateBack} ，backbutton 表示来源是左上角返回按钮或 android 返回键；navigateBack表示来源是 uni.navigateBack ；详细说明及使用：<a href="http://ask.dcloud.net.cn/article/35120" target="_blank" rel="noreferrer">onBackPress 详解 (opens new window)</a>。支付宝小程序只有真机能触发，只能监听非navigateBack引起的返回，不可阻止默认行为。</td><td style="text-align:left;">app、H5、支付宝小程序</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onNavigationBarSearchInputChanged</td><td style="text-align:left;">监听原生标题栏搜索输入框输入内容变化事件</td><td style="text-align:left;">App、H5</td><td style="text-align:left;">1.6.0</td></tr><tr><td style="text-align:left;">onNavigationBarSearchInputConfirmed</td><td style="text-align:left;">监听原生标题栏搜索输入框搜索事件，用户点击软键盘上的“搜索”按钮时触发。</td><td style="text-align:left;">App、H5</td><td style="text-align:left;">1.6.0</td></tr><tr><td style="text-align:left;">onNavigationBarSearchInputClicked</td><td style="text-align:left;">监听原生标题栏搜索输入框点击事件（pages.json 中的 searchInput 配置 disabled 为 true 时才会触发）</td><td style="text-align:left;">App、H5</td><td style="text-align:left;">1.6.0</td></tr><tr><td style="text-align:left;">onShareTimeline</td><td style="text-align:left;">监听用户点击右上角转发到朋友圈</td><td style="text-align:left;">微信小程序</td><td style="text-align:left;">2.8.1+</td></tr><tr><td style="text-align:left;">onAddToFavorites</td><td style="text-align:left;">监听用户点击右上角收藏</td><td style="text-align:left;">微信小程序、QQ小程序</td><td style="text-align:left;">2.8.1+</td></tr></tbody></table><p><code>onInit</code>使用注意</p><ul><li>仅百度小程序基础库 3.260 以上支持 onInit 生命周期</li><li>其他版本或平台可以同时使用 onLoad 生命周期进行兼容，注意避免重复执行相同逻辑</li><li>不依赖页面传参的逻辑可以直接使用 created 生命周期替代</li></ul><p><code>onInit</code>使用注意</p><ul><li>仅百度小程序基础库 3.260 以上支持 onInit 生命周期</li><li>其他版本或平台可以同时使用 onLoad 生命周期进行兼容，注意避免重复执行相同逻辑</li><li>不依赖页面传参的逻辑可以直接使用 created 生命周期替代</li></ul><p><code>onReachBottom</code>使用注意 可在pages.json里定义具体页面底部的触发距离<a href="https://uniapp.dcloud.net.cn/collocation/pages#globalstyle" target="_blank" rel="noreferrer">onReachBottomDistance (opens new window)</a>，比如设为50，那么滚动页面到距离底部50px时，就会触发onReachBottom事件。</p><p>如使用scroll-view导致页面没有滚动，则触底事件不会被触发。scroll-view滚动到底部的事件请参考scroll-view的文档</p><p><code>onPageScroll</code> （监听滚动、滚动监听、滚动事件）参数说明：</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>scrollTop</td><td>Number</td><td>页面在垂直方向已滚动的距离（单位px）</td></tr></tbody></table><p><strong>注意</strong></p><ul><li><code>onPageScroll</code>里不要写交互复杂的js，比如频繁修改页面。因为这个生命周期是在渲染层触发的，在非h5端，js是在逻辑层执行的，两层之间通信是有损耗的。如果在滚动过程中，频发触发两层之间的数据交换，可能会造成卡顿。</li><li>如果想实现滚动时标题栏透明渐变，在App和H5下，可在pages.json中配置titleNView下的type为transparent，<a href="https://uniapp.dcloud.io/collocation/pages?id=app-titlenview" target="_blank" rel="noreferrer">参考 (opens new window)</a>。</li><li>如果需要滚动吸顶固定某些元素，推荐使用css的粘性布局，参考<a href="https://ext.dcloud.net.cn/plugin?id=715" target="_blank" rel="noreferrer">插件市场 (opens new window)</a>。插件市场也有其他js实现的吸顶插件，但性能不佳，需要时可自行搜索。</li><li>在App、微信小程序、H5中，也可以使用wxs监听滚动，<a href="https://uniapp.dcloud.io/tutorial/miniprogram-subject#wxs" target="_blank" rel="noreferrer">参考 (opens new window)</a>；在app-nvue中，可以使用bindingx监听滚动，<a href="https://uniapp.dcloud.io/tutorial/nvue-api#nvue-%E9%87%8C%E4%BD%BF%E7%94%A8-bindingx" target="_blank" rel="noreferrer">参考 (opens new window)</a>。</li><li><code>onBackPress</code>上不可使用<code>async</code>，会导致无法阻止默认返回</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">onPageScroll</span><span style="color:#E1E4E8;"> : </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">//nvue暂不支持滚动监听，可用bindingx代替</span></span>
<span class="line"><span style="color:#E1E4E8;">	console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;滚动距离为：&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> e.scrollTop);</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">onPageScroll</span><span style="color:#24292E;"> : </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) { </span><span style="color:#6A737D;">//nvue暂不支持滚动监听，可用bindingx代替</span></span>
<span class="line"><span style="color:#24292E;">	console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;滚动距离为：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> e.scrollTop);</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>onTabItemTap</code> 返回的json对象说明：</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>index</td><td>Number</td><td>被点击tabItem的序号，从0开始</td></tr><tr><td>pagePath</td><td>String</td><td>被点击tabItem的页面路径</td></tr><tr><td>text</td><td>String</td><td>被点击tabItem的按钮文字</td></tr></tbody></table><p><strong>注意</strong></p><ul><li>onTabItemTap常用于点击当前tabitem，滚动或刷新当前页面。如果是点击不同的tabitem，一定会触发页面切换。</li><li>如果想在App端实现点击某个tabitem不跳转页面，不能使用onTabItemTap，可以使用<a href="http://www.html5plus.org/doc/zh_cn/nativeobj.html" target="_blank" rel="noreferrer">plus.nativeObj.view (opens new window)</a>放一个区块盖住原先的tabitem，并拦截点击事件。</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">onTabItemTap</span><span style="color:#E1E4E8;"> : </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(e);</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// e的返回格式为json对象： {&quot;index&quot;:0,&quot;text&quot;:&quot;首页&quot;,&quot;pagePath&quot;:&quot;pages/index/index&quot;}</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">onTabItemTap</span><span style="color:#24292E;"> : </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">	console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// e的返回格式为json对象： {&quot;index&quot;:0,&quot;text&quot;:&quot;首页&quot;,&quot;pagePath&quot;:&quot;pages/index/index&quot;}</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>onNavigationBarButtonTap</code> 参数说明：</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>index</td><td>Number</td><td>原生标题栏按钮数组的下标</td></tr></tbody></table><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">onNavigationBarButtonTap</span><span style="color:#E1E4E8;"> : </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(e);</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// e的返回格式为json对象：{&quot;text&quot;:&quot;测试&quot;,&quot;index&quot;:0}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">onNavigationBarButtonTap</span><span style="color:#24292E;"> : </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">	console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// e的返回格式为json对象：{&quot;text&quot;:&quot;测试&quot;,&quot;index&quot;:0}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>onBackPress</code> 回调参数对象说明：</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>from</td><td>String</td><td>触发返回行为的来源：&#39;backbutton&#39;——左上角导航栏按钮及安卓返回键；&#39;navigateBack&#39;——uni.navigateBack() 方法。<strong>支付宝小程序端不支持返回此字段</strong></td></tr></tbody></table><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"><span style="color:#E1E4E8;">	},</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">onBackPress</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;from:&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> options.from)</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {};</span></span>
<span class="line"><span style="color:#24292E;">	},</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">onBackPress</span><span style="color:#24292E;">(</span><span style="color:#E36209;">options</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">		console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;from:&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> options.from)</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>注意</strong></p><ul><li>nvue 页面weex编译模式支持的生命周期同weex，具体参考：<a href="https://uniapp.dcloud.io/tutorial/nvue-outline?id=%E7%BC%96%E8%AF%91%E6%A8%A1%E5%BC%8F" target="_blank" rel="noreferrer">weex生命周期介绍 (opens new window)</a>。</li><li>支付宝小程序真机可以监听到非<code>navigateBack</code>引发的返回事件（使用小程序开发工具时不会触发<code>onBackPress</code>），不可以阻止默认返回行为</li></ul><h3 id="组件生命周期" tabindex="-1">组件生命周期 <a class="header-anchor" href="#组件生命周期" aria-label="Permalink to &quot;组件生命周期&quot;">​</a></h3><p><code>uni-app</code> 组件支持的生命周期，与vue标准组件的生命周期相同。这里没有页面级的onLoad等生命周期：</p><table><thead><tr><th style="text-align:left;">函数名</th><th style="text-align:left;">说明</th><th style="text-align:left;">平台差异说明</th><th style="text-align:left;">最低版本</th></tr></thead><tbody><tr><td style="text-align:left;">beforeCreate</td><td style="text-align:left;">在实例初始化之前被调用。<a href="https://v2.cn.vuejs.org/v2/api/#beforeCreate" target="_blank" rel="noreferrer">详见(opens new window)</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">created</td><td style="text-align:left;">在实例创建完成后被立即调用。<a href="https://v2.cn.vuejs.org/v2/api/#created" target="_blank" rel="noreferrer">详见(opens new window)</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">beforeMount</td><td style="text-align:left;">在挂载开始之前被调用。<a href="https://v2.cn.vuejs.org/v2/api/#beforeMount" target="_blank" rel="noreferrer">详见(opens new window)</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">mounted</td><td style="text-align:left;">挂载到实例上去之后调用。<a href="https://v2.cn.vuejs.org/v2/api/#mounted" target="_blank" rel="noreferrer">详见 (opens new window)</a>注意：此处并不能确定子组件被全部挂载，如果需要子组件完全挂载之后在执行操作可以使用<code>$nextTick</code><a href="https://v2.cn.vuejs.org/v2/api/#vm-nextTick" target="_blank" rel="noreferrer">Vue官方文档(opens new window)</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">beforeUpdate</td><td style="text-align:left;">数据更新时调用，发生在虚拟 DOM 打补丁之前。<a href="https://v2.cn.vuejs.org/v2/api/#beforeUpdate" target="_blank" rel="noreferrer">详见(opens new window)</a></td><td style="text-align:left;">仅H5平台支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">updated</td><td style="text-align:left;">由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。<a href="https://v2.cn.vuejs.org/v2/api/#updated" target="_blank" rel="noreferrer">详见(opens new window)</a></td><td style="text-align:left;">仅H5平台支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">beforeDestroy</td><td style="text-align:left;">实例销毁之前调用。在这一步，实例仍然完全可用。<a href="https://v2.cn.vuejs.org/v2/api/#beforeDestroy" target="_blank" rel="noreferrer">详见(opens new window)</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">destroyed</td><td style="text-align:left;">Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。<a href="https://v2.cn.vuejs.org/v2/api/#destroyed" target="_blank" rel="noreferrer">详见(opens new window)</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr></tbody></table><h3 id="页面调用接口" tabindex="-1">页面调用接口 <a class="header-anchor" href="#页面调用接口" aria-label="Permalink to &quot;页面调用接口&quot;">​</a></h3><h4 id="getapp" tabindex="-1">getApp() <a class="header-anchor" href="#getapp" aria-label="Permalink to &quot;getApp()&quot;">​</a></h4><p><code>getApp()</code> 函数用于获取当前应用实例，一般用于获取globalData 。</p><p><strong>实例</strong></p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">app</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getApp</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(app.globalData)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">app</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getApp</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(app.globalData)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>注意：</strong></p><ul><li>不要在定义于 <code>App()</code> 内的函数中，或调用 <code>App</code> 前调用 <code>getApp()</code> ，可以通过 <code>this.$scope</code> 获取对应的app实例</li><li>通过 <code>getApp()</code> 获取实例之后，不要私自调用生命周期函数。</li><li>当在首页<code>nvue</code>中使用<code>getApp()</code>不一定可以获取真正的<code>App</code>对象。对此提供了<code>const app = getApp({allowDefault: true})</code>用来获取原始的<code>App</code>对象，可以用来在首页对<code>globalData</code>等初始化</li></ul><h4 id="getcurrentpages" tabindex="-1">getCurrentPages() <a class="header-anchor" href="#getcurrentpages" aria-label="Permalink to &quot;getCurrentPages()&quot;">​</a></h4><p><code>getCurrentPages()</code> 函数用于获取当前页面栈的实例，以数组形式按栈的顺序给出，第一个元素为首页，最后一个元素为当前页面。</p><p><strong>注意：</strong> <code>getCurrentPages()</code>仅用于展示页面栈的情况，请勿修改页面栈，以免造成页面状态错误。</p><p>每个页面实例的方法属性列表：</p><table><thead><tr><th>方法</th><th>描述</th><th>平台说明</th></tr></thead><tbody><tr><td>page.$getAppWebview()</td><td>获取当前页面的webview对象实例</td><td>App</td></tr><tr><td>page.route</td><td>获取当前页面的路由</td><td></td></tr></tbody></table><p>Tips：</p><ul><li><code>navigateTo</code>, <code>redirectTo</code> 只能打开非 tabBar 页面。</li><li><code>switchTab</code> 只能打开 <code>tabBar</code> 页面。</li><li><code>reLaunch</code> 可以打开任意页面。</li><li>页面底部的 <code>tabBar</code> 由页面决定，即只要是定义为 <code>tabBar</code> 的页面，底部都有 <code>tabBar</code>。</li><li>不能在 <code>App.vue</code> 里面进行页面跳转。</li></ul><h4 id="getappwebview" tabindex="-1">$getAppWebview() <a class="header-anchor" href="#getappwebview" aria-label="Permalink to &quot;$getAppWebview()&quot;">​</a></h4><p><code>uni-app</code> 在 <code>getCurrentPages()</code>获得的页面里内置了一个方法 <code>$getAppWebview()</code> 可以得到当前webview的对象实例，从而实现对 webview 更强大的控制。在 html5Plus 中，plus.webview具有强大的控制能力，可参考：<a href="http://www.html5plus.org/doc/zh_cn/webview.html#plus.webview.WebviewObject" target="_blank" rel="noreferrer">WebviewObject (opens new window)</a>。</p><p>但<code>uni-app</code>框架有自己的窗口管理机制，请不要自己创建和销毁webview，如有需求覆盖子窗体上去，请使用<a href="https://uniapp.dcloud.net.cn/api/window/subNVues" target="_blank" rel="noreferrer">原生子窗体subNvue (opens new window)</a>。</p><p><strong>注意：此方法仅 App 支持</strong></p><p><strong>示例：</strong></p><p>获取当前页面 webview 的对象实例</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      title: </span><span style="color:#9ECBFF;">&#39;Hello&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">onLoad</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// #ifdef APP-PLUS</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">currentWebview</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.$scope.</span><span style="color:#B392F0;">$getAppWebview</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">//此对象相当于html5plus里的plus.webview.currentWebview()。在uni-app里vue页面直接使用plus.webview.currentWebview()无效</span></span>
<span class="line"><span style="color:#E1E4E8;">    currentWebview.</span><span style="color:#B392F0;">setBounce</span><span style="color:#E1E4E8;">({position:{top:</span><span style="color:#9ECBFF;">&#39;100px&#39;</span><span style="color:#E1E4E8;">},changeoffset:{top:</span><span style="color:#9ECBFF;">&#39;0px&#39;</span><span style="color:#E1E4E8;">}}); </span><span style="color:#6A737D;">//动态重设bounce效果</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// #endif</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      title: </span><span style="color:#032F62;">&#39;Hello&#39;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">onLoad</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// #ifdef APP-PLUS</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">currentWebview</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.$scope.</span><span style="color:#6F42C1;">$getAppWebview</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//此对象相当于html5plus里的plus.webview.currentWebview()。在uni-app里vue页面直接使用plus.webview.currentWebview()无效</span></span>
<span class="line"><span style="color:#24292E;">    currentWebview.</span><span style="color:#6F42C1;">setBounce</span><span style="color:#24292E;">({position:{top:</span><span style="color:#032F62;">&#39;100px&#39;</span><span style="color:#24292E;">},changeoffset:{top:</span><span style="color:#032F62;">&#39;0px&#39;</span><span style="color:#24292E;">}}); </span><span style="color:#6A737D;">//动态重设bounce效果</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// #endif</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>获取指定页面 webview 的对象实例</p><p><code>getCurrentPages()</code>可以得到所有页面对象，然后根据数组，可以取指定的页面webview对象</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> pages </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getCurrentPages</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> page </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pages[pages.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#6A737D;">// #ifdef APP-PLUS</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> currentWebview </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">$getAppWebview</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(currentWebview.id);</span><span style="color:#6A737D;">//获得当前webview的id</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(currentWebview.</span><span style="color:#B392F0;">isVisible</span><span style="color:#E1E4E8;">());</span><span style="color:#6A737D;">//查询当前webview是否可见</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// #endif</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> pages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getCurrentPages</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> page </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pages[pages.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#6A737D;">// #ifdef APP-PLUS</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> currentWebview </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">$getAppWebview</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(currentWebview.id);</span><span style="color:#6A737D;">//获得当前webview的id</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(currentWebview.</span><span style="color:#6F42C1;">isVisible</span><span style="color:#24292E;">());</span><span style="color:#6A737D;">//查询当前webview是否可见</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// #endif</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>uni-app自带的web-view组件，是页面中新插入的一个子webview</p><h3 id="页面通讯" tabindex="-1">页面通讯 <a class="header-anchor" href="#页面通讯" aria-label="Permalink to &quot;页面通讯&quot;">​</a></h3><h4 id="uni-emit-eventname-object" tabindex="-1">uni.$emit(eventName,OBJECT) <a class="header-anchor" href="#uni-emit-eventname-object" aria-label="Permalink to &quot;uni.$emit(eventName,OBJECT)&quot;">​</a></h4><p>触发全局的自定义事件。附加参数都会传给监听器回调。</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>eventName</td><td>String</td><td>事件名</td></tr><tr><td>OBJECT</td><td>Object</td><td>触发事件携带的附加参数</td></tr></tbody></table><p><strong>代码示例</strong></p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">	uni.</span><span style="color:#B392F0;">$emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;update&#39;</span><span style="color:#E1E4E8;">,{msg:</span><span style="color:#9ECBFF;">&#39;页面更新&#39;</span><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">	uni.</span><span style="color:#6F42C1;">$emit</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;update&#39;</span><span style="color:#24292E;">,{msg:</span><span style="color:#032F62;">&#39;页面更新&#39;</span><span style="color:#24292E;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="uni-on-eventname-callback" tabindex="-1">uni.$on(eventName,callback) <a class="header-anchor" href="#uni-on-eventname-callback" aria-label="Permalink to &quot;uni.$on(eventName,callback)&quot;">​</a></h4><p>监听全局的自定义事件。事件可以由 uni.$emit 触发，回调函数会接收所有传入事件触发函数的额外参数。</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>eventName</td><td>String</td><td>事件名</td></tr><tr><td>callback</td><td>Function</td><td>事件的回调函数</td></tr></tbody></table><p><strong>代码示例</strong></p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">	uni.</span><span style="color:#B392F0;">$on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;update&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">		console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;监听到事件来自 update ，携带参数 msg 为：&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> data.msg);</span></span>
<span class="line"><span style="color:#E1E4E8;">	})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">	uni.</span><span style="color:#6F42C1;">$on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;update&#39;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">data</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">		console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;监听到事件来自 update ，携带参数 msg 为：&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> data.msg);</span></span>
<span class="line"><span style="color:#24292E;">	})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="uni-once-eventname-callback" tabindex="-1">uni.$once(eventName,callback) <a class="header-anchor" href="#uni-once-eventname-callback" aria-label="Permalink to &quot;uni.$once(eventName,callback)&quot;">​</a></h4><p>监听全局的自定义事件。事件可以由 uni.$emit 触发，但是只触发一次，在第一次触发之后移除监听器。</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>eventName</td><td>String</td><td>事件名</td></tr><tr><td>callback</td><td>Function</td><td>事件的回调函数</td></tr></tbody></table><p><strong>代码示例</strong></p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">	uni.</span><span style="color:#B392F0;">$once</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;update&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">		console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;监听到事件来自 update ，携带参数 msg 为：&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> data.msg);</span></span>
<span class="line"><span style="color:#E1E4E8;">	})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">	uni.</span><span style="color:#6F42C1;">$once</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;update&#39;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">data</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">		console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;监听到事件来自 update ，携带参数 msg 为：&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> data.msg);</span></span>
<span class="line"><span style="color:#24292E;">	})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="uni-off-eventname-callback" tabindex="-1">uni.$off([eventName, callback]) <a class="header-anchor" href="#uni-off-eventname-callback" aria-label="Permalink to &quot;uni.$off([eventName, callback])&quot;">​</a></h4><p>移除全局自定义事件监听器。</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>eventName</td><td>Array＜String＞</td><td>事件名</td></tr><tr><td>callback</td><td>Function</td><td>事件的回调函数</td></tr></tbody></table><p><strong>Tips</strong></p><ul><li>如果没有提供参数，则移除所有的事件监听器；</li><li>如果只提供了事件，则移除该事件所有的监听器；</li><li>如果同时提供了事件与回调，则只移除这个回调的监听器；</li><li>提供的回调必须跟$on的回调为同一个才能移除这个回调的监听器；</li></ul><p><strong>代码示例</strong></p><p><code>$emit</code>、<code>$on</code>、<code>$off</code>常用于跨页面、跨组件通讯，这里为了方便演示放在同一个页面</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;content&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">			&lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;data&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">				&lt;</span><span style="color:#FDAEB7;font-style:italic;">text</span><span style="color:#E1E4E8;">&gt;{{val}}&lt;/</span><span style="color:#FDAEB7;font-style:italic;">text</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">			&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">			&lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;primary&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">@click</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;comunicationOff&quot;</span><span style="color:#E1E4E8;">&gt;结束监听&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">					val: </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">				}</span></span>
<span class="line"><span style="color:#E1E4E8;">			},</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#B392F0;">onLoad</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#B392F0;">setInterval</span><span style="color:#E1E4E8;">(()</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">					uni.</span><span style="color:#B392F0;">$emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;add&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">						data: </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#E1E4E8;">					})</span></span>
<span class="line"><span style="color:#E1E4E8;">				},</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">				uni.</span><span style="color:#B392F0;">$on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;add&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.add)</span></span>
<span class="line"><span style="color:#E1E4E8;">			},</span></span>
<span class="line"><span style="color:#E1E4E8;">			methods: {</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#B392F0;">comunicationOff</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">					uni.</span><span style="color:#B392F0;">$off</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;add&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.add)</span></span>
<span class="line"><span style="color:#E1E4E8;">				},</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">					</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.val </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> e.data</span></span>
<span class="line"><span style="color:#E1E4E8;">				}</span></span>
<span class="line"><span style="color:#E1E4E8;">			}</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">.content</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#79B8FF;">display</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">flex</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#79B8FF;">flex-direction</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">column</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#79B8FF;">align-items</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#79B8FF;">justify-content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">.data</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#79B8FF;">text-align</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#79B8FF;">line-height</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">40</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#79B8FF;">margin-top</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">40</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#79B8FF;">width</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">200</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#79B8FF;">margin</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">20</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;/</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">			&lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;data&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">				&lt;</span><span style="color:#B31D28;font-style:italic;">text</span><span style="color:#24292E;">&gt;{{val}}&lt;/</span><span style="color:#B31D28;font-style:italic;">text</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">			&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">			&lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;primary&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">@click</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;comunicationOff&quot;</span><span style="color:#24292E;">&gt;结束监听&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">					val: </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">				}</span></span>
<span class="line"><span style="color:#24292E;">			},</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#6F42C1;">onLoad</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#6F42C1;">setInterval</span><span style="color:#24292E;">(()</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">					uni.</span><span style="color:#6F42C1;">$emit</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;add&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">						data: </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">					})</span></span>
<span class="line"><span style="color:#24292E;">				},</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">				uni.</span><span style="color:#6F42C1;">$on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;add&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.add)</span></span>
<span class="line"><span style="color:#24292E;">			},</span></span>
<span class="line"><span style="color:#24292E;">			methods: {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#6F42C1;">comunicationOff</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">					uni.</span><span style="color:#6F42C1;">$off</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;add&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.add)</span></span>
<span class="line"><span style="color:#24292E;">				},</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">					</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.val </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> e.data</span></span>
<span class="line"><span style="color:#24292E;">				}</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">.content</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">display</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">flex</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">flex-direction</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">column</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">align-items</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">justify-content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">.data</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">text-align</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">line-height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">40</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">margin-top</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">40</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">width</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">200</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">margin</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">20</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	&lt;/</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><p><strong>注意事项</strong></p><ul><li>uni.$emit、 uni.$on 、 uni.$once 、uni.$off 触发的事件都是 App 全局级别的，跨任意组件，页面，nvue，vue 等</li><li>使用时，注意及时销毁事件监听，比如，页面 onLoad 里边 uni.$on 注册监听，onUnload 里边 uni.$off 移除，或者一次性的事件，直接使用 uni.$once 监听</li></ul><h3 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h3><p><code>uni-app</code>页面路由为框架统一管理，开发者需要在<a href="https://uniapp.dcloud.net.cn/collocation/pages#pages" target="_blank" rel="noreferrer">pages.json (opens new window)</a>里配置每个路由页面的路径及页面样式。类似小程序在 app.json 中配置页面路由一样。所以 <code>uni-app</code> 的路由用法与 <code>Vue Router</code> 不同，如仍希望采用 <code>Vue Router</code> 方式管理路由，可在插件市场搜索 <a href="https://ext.dcloud.net.cn/search?q=vue-router" target="_blank" rel="noreferrer">Vue-Router(opens new window)</a></p><p><code>uni-app</code> 有两种页面路由跳转方式：使用<a href="https://uniapp.dcloud.net.cn/component/navigator" target="_blank" rel="noreferrer">navigator (opens new window)</a>组件跳转、调用<a href="https://uniapp.dcloud.net.cn/api/router" target="_blank" rel="noreferrer">API (opens new window)</a>跳转</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;page-body&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">			&lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;btn-area&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">				&lt;</span><span style="color:#FDAEB7;font-style:italic;">navigator</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">url</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;navigate/navigate?title=navigate&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hover-class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;navigator-hover&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">					&lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;default&quot;</span><span style="color:#E1E4E8;">&gt;跳转到新页面&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">				&lt;/</span><span style="color:#FDAEB7;font-style:italic;">navigator</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">				&lt;</span><span style="color:#FDAEB7;font-style:italic;">navigator</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">url</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;redirect/redirect?title=redirect&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">open-type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;redirect&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hover-class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;other-navigator-hover&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">					&lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;default&quot;</span><span style="color:#E1E4E8;">&gt;在当前页打开&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">				&lt;/</span><span style="color:#FDAEB7;font-style:italic;">navigator</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">				&lt;</span><span style="color:#FDAEB7;font-style:italic;">navigator</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">url</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;/pages/tabBar/extUI/extUI&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">open-type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;switchTab&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hover-class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;other-navigator-hover&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">					&lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;default&quot;</span><span style="color:#E1E4E8;">&gt;跳转tab页面&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">				&lt;/</span><span style="color:#FDAEB7;font-style:italic;">navigator</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">			&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">// navigate.vue页面接受参数</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">onLoad</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">option</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">//option为object类型，会序列化上个页面传递的参数</span></span>
<span class="line"><span style="color:#E1E4E8;">		console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(option.id); </span><span style="color:#6A737D;">//打印出上个页面传递的参数。</span></span>
<span class="line"><span style="color:#E1E4E8;">		console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(option.name); </span><span style="color:#6A737D;">//打印出上个页面传递的参数。</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;page-body&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">			&lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;btn-area&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">				&lt;</span><span style="color:#B31D28;font-style:italic;">navigator</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;navigate/navigate?title=navigate&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hover-class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;navigator-hover&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">					&lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;default&quot;</span><span style="color:#24292E;">&gt;跳转到新页面&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">				&lt;/</span><span style="color:#B31D28;font-style:italic;">navigator</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">				&lt;</span><span style="color:#B31D28;font-style:italic;">navigator</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;redirect/redirect?title=redirect&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">open-type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;redirect&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hover-class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;other-navigator-hover&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">					&lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;default&quot;</span><span style="color:#24292E;">&gt;在当前页打开&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">				&lt;/</span><span style="color:#B31D28;font-style:italic;">navigator</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">				&lt;</span><span style="color:#B31D28;font-style:italic;">navigator</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;/pages/tabBar/extUI/extUI&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">open-type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;switchTab&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hover-class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;other-navigator-hover&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">					&lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;default&quot;</span><span style="color:#24292E;">&gt;跳转tab页面&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">				&lt;/</span><span style="color:#B31D28;font-style:italic;">navigator</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">			&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">// navigate.vue页面接受参数</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">onLoad</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">option</span><span style="color:#24292E;">) { </span><span style="color:#6A737D;">//option为object类型，会序列化上个页面传递的参数</span></span>
<span class="line"><span style="color:#24292E;">		console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(option.id); </span><span style="color:#6A737D;">//打印出上个页面传递的参数。</span></span>
<span class="line"><span style="color:#24292E;">		console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(option.name); </span><span style="color:#6A737D;">//打印出上个页面传递的参数。</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p><strong>uni.navigateTo(OBJECT)</strong></p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//在起始页面跳转到test.vue页面并传递参数</span></span>
<span class="line"><span style="color:#E1E4E8;">uni.</span><span style="color:#B392F0;">navigateTo</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	url: </span><span style="color:#9ECBFF;">&#39;test?id=1&amp;name=uniapp&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#6A737D;">// 在test.vue页面接受参数</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">onLoad</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">option</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">//option为object类型，会序列化上个页面传递的参数</span></span>
<span class="line"><span style="color:#E1E4E8;">		console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(option.id); </span><span style="color:#6A737D;">//打印出上个页面传递的参数。</span></span>
<span class="line"><span style="color:#E1E4E8;">		console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(option.name); </span><span style="color:#6A737D;">//打印出上个页面传递的参数。</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//在起始页面跳转到test.vue页面并传递参数</span></span>
<span class="line"><span style="color:#24292E;">uni.</span><span style="color:#6F42C1;">navigateTo</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	url: </span><span style="color:#032F62;">&#39;test?id=1&amp;name=uniapp&#39;</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#6A737D;">// 在test.vue页面接受参数</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">onLoad</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">option</span><span style="color:#24292E;">) { </span><span style="color:#6A737D;">//option为object类型，会序列化上个页面传递的参数</span></span>
<span class="line"><span style="color:#24292E;">		console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(option.id); </span><span style="color:#6A737D;">//打印出上个页面传递的参数。</span></span>
<span class="line"><span style="color:#24292E;">		console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(option.name); </span><span style="color:#6A737D;">//打印出上个页面传递的参数。</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="页面栈" tabindex="-1">页面栈 <a class="header-anchor" href="#页面栈" aria-label="Permalink to &quot;页面栈&quot;">​</a></h3><p>框架以栈的形式管理当前所有页面， 当发生路由切换的时候，页面栈的表现如下</p><p>框架以栈的形式管理当前所有页面， 当发生路由切换的时候，页面栈的表现如下：</p><table><thead><tr><th>路由方式</th><th>页面栈表现</th><th>触发时机</th></tr></thead><tbody><tr><td>初始化</td><td>新页面入栈</td><td>uni-app 打开的第一个页面</td></tr><tr><td>打开新页面</td><td>新页面入栈</td><td>调用 API <a href="https://uniapp.dcloud.net.cn/api/router#navigateto" target="_blank" rel="noreferrer">uni.navigateTo (opens new window)</a>、使用组件 <code>&lt;navigator open-type=&quot;navigate&quot;/&gt;</code></td></tr><tr><td>页面重定向</td><td>当前页面出栈，新页面入栈</td><td>调用 API <a href="https://uniapp.dcloud.net.cn/api/router#redirectto" target="_blank" rel="noreferrer">uni.redirectTo (opens new window)</a>、使用组件 <code>&lt;navigator open-type=&quot;redirectTo&quot;/&gt;</code></td></tr><tr><td>页面返回</td><td>页面不断出栈，直到目标返回页</td><td>调用 API <a href="https://uniapp.dcloud.net.cn/api/router#navigateback" target="_blank" rel="noreferrer">uni.navigateBack (opens new window)</a>、使用组件 <code>&lt;navigator open-type=&quot;navigateBack&quot;/&gt;</code> 、用户按左上角返回按钮、安卓用户点击物理back按键</td></tr><tr><td>Tab 切换</td><td>页面全部出栈，只留下新的 Tab 页面</td><td>调用 API <a href="https://uniapp.dcloud.net.cn/api/router#switchtab" target="_blank" rel="noreferrer">uni.switchTab (opens new window)</a>、使用组件 <code>&lt;navigator open-type=&quot;switchTab&quot;/&gt;</code> 、用户切换 Tab</td></tr><tr><td>重加载</td><td>页面全部出栈，只留下新的页面</td><td>调用 API <a href="https://uniapp.dcloud.net.cn/api/router#relaunch" target="_blank" rel="noreferrer">uni.reLaunch (opens new window)</a>、使用组件 <code>&lt;navigator open-type=&quot;reLaunch&quot;/&gt;</code></td></tr></tbody></table><h3 id="页面代码规范介绍" tabindex="-1">页面代码规范介绍 <a class="header-anchor" href="#页面代码规范介绍" aria-label="Permalink to &quot;页面代码规范介绍&quot;">​</a></h3><p><code>uni-app</code> 支持在 template 模板中嵌套 <code>&lt;template/&gt;</code> 和 <code>&lt;block/&gt;</code>，用来进行 <a href="https://uniapp.dcloud.net.cn/tutorial/vue-basics#listrendering" target="_blank" rel="noreferrer">列表渲染 (opens new window)</a>和 <a href="https://uniapp.dcloud.net.cn/tutorial/vue-basics#condition" target="_blank" rel="noreferrer">条件渲染 (opens new window)</a>。</p><p><code>&lt;template/&gt;</code> 和 <code>&lt;block/&gt;</code> 并不是一个组件，它们仅仅是一个包装元素，不会在页面中做任何渲染，只接受控制属性。</p><p><code>&lt;block/&gt;</code> 在不同的平台表现存在一定差异，推荐统一使用 <code>&lt;template/&gt;</code>。</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-if</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">			&lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;test 为 true 时显示&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-else</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">			&lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;test 为 false 时显示&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;</span><span style="color:#FDAEB7;font-style:italic;">block</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-for</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;(item,index) in list&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">:key</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;index&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">			&lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;{{item}} - {{index}}&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;/</span><span style="color:#FDAEB7;font-style:italic;">block</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-if</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">			&lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;test 为 true 时显示&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-else</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">			&lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;test 为 false 时显示&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;</span><span style="color:#B31D28;font-style:italic;">block</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-for</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;(item,index) in list&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">:key</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;index&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">			&lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;{{item}} - {{index}}&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;/</span><span style="color:#B31D28;font-style:italic;">block</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="nvue-开发与-vue-开发的常见区别" tabindex="-1">nvue 开发与 vue 开发的常见区别 <a class="header-anchor" href="#nvue-开发与-vue-开发的常见区别" aria-label="Permalink to &quot;nvue 开发与 vue 开发的常见区别&quot;">​</a></h3><p>nvue是什么？native vue的缩写</p><blockquote><p>Nvue是一个基于weex改进的原生渲染引擎,它在某些方面要比vue更高性能,在app上使用更加流畅,但是缺点也很明显,没有足够的api能力,语法限制太大,所以nvue适用于特定场景</p></blockquote><ul><li>nvue 是 uni-app 的一种渲染方式，如果使用vue页面，则使用webview渲染；如果使用nvue页面(native vue的缩写)，则使用原生渲染</li><li>nvue 页面控制显隐只可以使用<code>v-if</code>不可以使用<code>v-show</code></li><li>nvue 页面只能使用<code>flex</code>布局，不支持其他布局方式。页面开发前，首先想清楚这个页面的纵向内容有什么，哪些是要滚动的，然后每个纵向内容的横轴排布有什么，按 flex 布局设计好界面</li><li>nvue 页面的布局排列方向默认为竖排（<code>column</code>），如需改变布局方向，可以在 <code>manifest.json</code> -&gt; <code>app-plus</code> -&gt; <code>nvue</code> -&gt; <code>flex-direction</code> 节点下修改，仅在 uni-app 模式下生效</li><li>nvue 页面编译为 H5、小程序时，会做一件 css 默认值对齐的工作。因为 weex 渲染引擎只支持 flex，并且默认 flex 方向是垂直。而 H5 和小程序端，使用 web 渲染，默认不是 flex，并且设置<code>display:flex</code>后，它的 flex 方向默认是水平而不是垂直的。所以 nvue 编译为 H5、小程序时，会自动把页面默认布局设为 flex、方向为垂直。当然开发者手动设置后会覆盖默认设置</li><li>文字内容，必须、只能在<code>&lt;text&gt;</code>组件下。不能在<code>&lt;div&gt;</code>、<code>&lt;view&gt;</code>的<code>text</code>区域里直接写文字。否则即使渲染了，也无法绑定 js 里的变量</li><li>只有<code>text</code>标签可以设置字体大小，字体颜色</li><li>布局不能使用百分比、没有媒体查询</li><li>nvue 切换横竖屏时可能导致样式出现问题，建议有 nvue 的页面锁定手机方向</li><li>支持的 css 有限，不过并不影响布局出你需要的界面，<code>flex</code>还是非常强大的</li><li>不支持背景图。但可以使用<code>image</code>组件和层级来实现类似 web 中的背景效果。因为原生开发本身也没有 web 这种背景图概念</li><li>css 选择器支持的比较少，只能使用 class 选择器</li><li>nvue 的各组件在安卓端默认是透明的，如果不设置<code>background-color</code>，可能会导致出现重影的问题</li><li><code>class</code> 进行绑定时只支持数组语法</li><li><code>Android</code> 端在一个页面内使用大量圆角边框会造成性能问题，尤其是多个角的样式还不一样的话更耗费性能。应避免这类使用</li><li><code>nvue</code> 页面没有<code>bounce</code>回弹效果，只有几个列表组件有<code>bounce</code>效果，包括 <code>list</code>、<code>recycle-list</code>、<code>waterfall</code></li><li>原生开发没有页面滚动的概念，页面内容高过屏幕高度并不会自动滚动，只有部分组件可滚动（<code>list</code>、<code>waterfall</code>、<code>scroll-view/scroller</code>），要滚得内容需要套在可滚动组件下。这不符合前端开发的习惯，所以在 nvue 编译为 uni-app 模式时，给页面外层自动套了一个 <code>scroller</code>，页面内容过高会自动滚动。（组件不会套，页面有<code>recycle-list</code>时也不会套）。后续会提供配置，可以设置不自动套</li><li>在 <code>App.vue</code> 中定义的全局 js 变量不会在 <code>nvue</code> 页面生效。<code>globalData</code>和<code>vuex</code>是生效的</li><li>App.vue 中定义的全局 css，对 nvue 和 vue 页面同时生效。如果全局 css 中有些 css 在 nvue 下不支持，编译时控制台会报警，建议把这些不支持的 css 包裹在<a href="https://uniapp.dcloud.io/tutorial/platform" target="_blank" rel="noreferrer">条件编译 (opens new window)</a>里，<code>APP-PLUS-NVUE</code></li><li>不能在 <code>style</code> 中引入字体文件，nvue 中字体图标的使用参考：<a href="https://uniapp.dcloud.net.cn/tutorial/nvue-api#addrule" target="_blank" rel="noreferrer">加载自定义字体 (opens new window)</a>。如果是本地字体，可以用<code>plus.io</code>的 API 转换路径</li><li>目前不支持在 nvue 页面使用 <code>typescript/ts</code></li></ul>`,113),p=[e];function o(c,r,i,E,y,d){return n(),a("div",null,p)}const g=s(t,[["render",o]]);export{b as __pageData,g as default};
