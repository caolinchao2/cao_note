import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.b5309610.js";const d=JSON.parse('{"title":"lodash常用方法","description":"","frontmatter":{},"headers":[],"relativePath":"leadingEnd/Javascript/lodash常用方法.md","filePath":"leadingEnd/Javascript/lodash常用方法.md","lastUpdated":null}'),p={name:"leadingEnd/Javascript/lodash常用方法.md"},o=l(`<h1 id="lodash常用方法" tabindex="-1">lodash常用方法 <a class="header-anchor" href="#lodash常用方法" aria-label="Permalink to &quot;lodash常用方法&quot;">​</a></h1><h2 id="array" tabindex="-1">Array <a class="header-anchor" href="#array" aria-label="Permalink to &quot;Array&quot;">​</a></h2><h3 id="去除所有的非假值元素" tabindex="-1">去除所有的非假值元素 <a class="header-anchor" href="#去除所有的非假值元素" aria-label="Permalink to &quot;去除所有的非假值元素&quot;">​</a></h3><p><code>compact</code>(arr) 去除所有的非假值元素</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">compact</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; [1, 2, 3]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">compact</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; [1, 2, 3]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="过滤数组值" tabindex="-1">过滤数组值 <a class="header-anchor" href="#过滤数组值" aria-label="Permalink to &quot;过滤数组值&quot;">​</a></h3><p><code>difference</code> 过滤数组值，返回新数组</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">difference</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">], [</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]) </span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; [3,1]</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">difference</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], [</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]) </span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; [3,1]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="转对象" tabindex="-1">转对象 <a class="header-anchor" href="#转对象" aria-label="Permalink to &quot;转对象&quot;">​</a></h3><p><code>map</code>转对象：<code>_.fromPairs(pairs)</code></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">fromPairs</span><span style="color:#E1E4E8;">([[</span><span style="color:#9ECBFF;">&#39;fred&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">], [</span><span style="color:#9ECBFF;">&#39;barney&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">40</span><span style="color:#E1E4E8;">]]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { &#39;fred&#39;: 30, &#39;barney&#39;: 40 }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">fromPairs</span><span style="color:#24292E;">([[</span><span style="color:#032F62;">&#39;fred&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">], [</span><span style="color:#032F62;">&#39;barney&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">40</span><span style="color:#24292E;">]]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { &#39;fred&#39;: 30, &#39;barney&#39;: 40 }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="4"><li>map转对象：.<code>zipObject</code></li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">zipObject</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;b&#39;</span><span style="color:#E1E4E8;">],[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; {&#39;a&#39;:1,&#39;b&#39;:2}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">zipObject</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; {&#39;a&#39;:1,&#39;b&#39;:2}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="5"><li>_.<code>zipObjectDeep</code>()</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">zipObjectDeep</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;a.b[0].c&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;a.b[1].d&#39;</span><span style="color:#E1E4E8;">],[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; {&#39;a&#39;:{&#39;b&#39;:[{&#39;c&#39;:1},{&#39;d&#39;: 2}]}}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">zipObjectDeep</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;a.b[0].c&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;a.b[1].d&#39;</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; {&#39;a&#39;:{&#39;b&#39;:[{&#39;c&#39;:1},{&#39;d&#39;: 2}]}}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="扁平化" tabindex="-1">扁平化 <a class="header-anchor" href="#扁平化" aria-label="Permalink to &quot;扁平化&quot;">​</a></h3><p>flattenDeep(arr) 扁平化</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">flattenDeep</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, [</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, [</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, [</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">]], </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">]]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; [1, 2, 3, 4, 5]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">flattenDeep</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, [</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, [</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]], </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; [1, 2, 3, 4, 5]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="集合" tabindex="-1">集合 <a class="header-anchor" href="#集合" aria-label="Permalink to &quot;集合&quot;">​</a></h2><p>可以使用<code>_.iteratee</code>结合使用</p><ol><li><code>find</code>、<code>every</code>、<code>filter</code>、<code>findLast</code>、<code>some</code></li></ol><p>以上函数用法雷同</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> users </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;barney&#39;</span><span style="color:#E1E4E8;">,  </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">36</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;fred&#39;</span><span style="color:#E1E4E8;">,    </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">40</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;pebbles&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,  </span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(users, </span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">)    </span><span style="color:#6A737D;">// { &#39;user&#39;: &#39;barney&#39;,  &#39;age&#39;: 36, &#39;active&#39;: true }</span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(users, [</span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">])   </span><span style="color:#6A737D;">// { &#39;user&#39;: &#39;fred&#39;,    &#39;age&#39;: 40, &#39;active&#39;: false }</span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(users, {age: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">})     </span><span style="color:#6A737D;">// { &#39;user&#39;: &#39;pebbles&#39;, &#39;age&#39;: 1,  &#39;active&#39;: true }</span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(users, </span><span style="color:#FFAB70;">o</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> o.age </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">40</span><span style="color:#E1E4E8;">)    </span><span style="color:#6A737D;">// { &#39;user&#39;: &#39;barney&#39;,  &#39;age&#39;: 36, &#39;active&#39;: true }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> users </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  { </span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;barney&#39;</span><span style="color:#24292E;">,  </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;active&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { </span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;fred&#39;</span><span style="color:#24292E;">,    </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">40</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;active&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { </span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;pebbles&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,  </span><span style="color:#032F62;">&#39;active&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(users, </span><span style="color:#032F62;">&#39;active&#39;</span><span style="color:#24292E;">)    </span><span style="color:#6A737D;">// { &#39;user&#39;: &#39;barney&#39;,  &#39;age&#39;: 36, &#39;active&#39;: true }</span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(users, [</span><span style="color:#032F62;">&#39;active&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">])   </span><span style="color:#6A737D;">// { &#39;user&#39;: &#39;fred&#39;,    &#39;age&#39;: 40, &#39;active&#39;: false }</span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(users, {age: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">})     </span><span style="color:#6A737D;">// { &#39;user&#39;: &#39;pebbles&#39;, &#39;age&#39;: 1,  &#39;active&#39;: true }</span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(users, </span><span style="color:#E36209;">o</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> o.age </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">40</span><span style="color:#24292E;">)    </span><span style="color:#6A737D;">// { &#39;user&#39;: &#39;barney&#39;,  &#39;age&#39;: 36, &#39;active&#39;: true }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="2"><li><p>each(obj,(value,key|index,obj))、eachRight；forEach的别名，可以循环对象</p></li><li><p>includes(obj,value,[fromIndex=0]) 可以查找对象，使用的是全等，不会类型转换；</p></li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">], </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">], </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;pebbles&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;eb&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">({</span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&#39;fred&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">40</span><span style="color:#E1E4E8;">}, </span><span style="color:#9ECBFF;">&#39;fred&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;pebbles&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;eb&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">({</span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;fred&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">40</span><span style="color:#24292E;">}, </span><span style="color:#032F62;">&#39;fred&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="4"><li>map</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {name: </span><span style="color:#9ECBFF;">&#39;hh&#39;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {name: </span><span style="color:#9ECBFF;">&#39;hen&#39;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(obj,</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// [&#39;hh&#39;,&#39;hen&#39;]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    {name: </span><span style="color:#032F62;">&#39;hh&#39;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">18</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {name: </span><span style="color:#032F62;">&#39;hen&#39;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(obj,</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// [&#39;hh&#39;,&#39;hen&#39;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="5"><li><p>forEach or each</p><p>each是forEach的别名</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">], </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(value);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; Logs \`1\` then \`2\`.</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">({ </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;b&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> }, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(key);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; Logs &#39;a&#39; then &#39;b&#39; (iteration order is not guaranteed).</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(value);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; Logs \`1\` then \`2\`.</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">({ </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> }, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">value</span><span style="color:#24292E;">, </span><span style="color:#E36209;">key</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(key);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; Logs &#39;a&#39; then &#39;b&#39; (iteration order is not guaranteed).</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><p>orderBy</p></li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> users </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;fred&#39;</span><span style="color:#E1E4E8;">,   </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">48</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;barney&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">34</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;fred&#39;</span><span style="color:#E1E4E8;">,   </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">40</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;barney&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">36</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#6A737D;">// 以 \`user\` 升序排序 再  \`age\` 以降序排序。</span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">orderBy</span><span style="color:#E1E4E8;">(users, [</span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">], [</span><span style="color:#9ECBFF;">&#39;asc&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;desc&#39;</span><span style="color:#E1E4E8;">])  </span><span style="color:#6A737D;">// asc为升序,desc为降序</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 结果</span></span>
<span class="line"><span style="color:#E1E4E8;">[{</span><span style="color:#9ECBFF;">&quot;user&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;barney&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">36</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;user&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;barney&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">34</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;user&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;fred&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">48</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;user&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;fred&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">40</span><span style="color:#E1E4E8;">}]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> users </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  { </span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;fred&#39;</span><span style="color:#24292E;">,   </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">48</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { </span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;barney&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">34</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { </span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;fred&#39;</span><span style="color:#24292E;">,   </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">40</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { </span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;barney&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">36</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#6A737D;">// 以 \`user\` 升序排序 再  \`age\` 以降序排序。</span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">orderBy</span><span style="color:#24292E;">(users, [</span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">], [</span><span style="color:#032F62;">&#39;asc&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;desc&#39;</span><span style="color:#24292E;">])  </span><span style="color:#6A737D;">// asc为升序,desc为降序</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 结果</span></span>
<span class="line"><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;barney&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">36</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;barney&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">34</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;fred&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">48</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;fred&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">40</span><span style="color:#24292E;">}]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ol start="6"><li>partition</li></ol><p>相当于filter，返回一个分成两组的数组，第一组为查找到为true的所有项，第二组为false的所有项</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> users </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;barney&#39;</span><span style="color:#E1E4E8;">,  </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">36</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;fred&#39;</span><span style="color:#E1E4E8;">,    </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">40</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;pebbles&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,  </span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">partition</span><span style="color:#E1E4E8;">(users, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">o</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> o.active; });</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; objects for [[&#39;fred&#39;], [&#39;barney&#39;, &#39;pebbles&#39;]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">partition</span><span style="color:#E1E4E8;">(users, { </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; objects for [[&#39;pebbles&#39;], [&#39;barney&#39;, &#39;fred&#39;]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">partition</span><span style="color:#E1E4E8;">(users, [</span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; objects for [[&#39;barney&#39;, &#39;pebbles&#39;], [&#39;fred&#39;]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">partition</span><span style="color:#E1E4E8;">(users, </span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; objects for [[&#39;fred&#39;], [&#39;barney&#39;, &#39;pebbles&#39;]]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> users </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  { </span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;barney&#39;</span><span style="color:#24292E;">,  </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;active&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { </span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;fred&#39;</span><span style="color:#24292E;">,    </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">40</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;active&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { </span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;pebbles&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,  </span><span style="color:#032F62;">&#39;active&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">partition</span><span style="color:#24292E;">(users, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">o</span><span style="color:#24292E;">) { </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> o.active; });</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; objects for [[&#39;fred&#39;], [&#39;barney&#39;, &#39;pebbles&#39;]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">partition</span><span style="color:#24292E;">(users, { </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;active&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> });</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; objects for [[&#39;pebbles&#39;], [&#39;barney&#39;, &#39;fred&#39;]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">partition</span><span style="color:#24292E;">(users, [</span><span style="color:#032F62;">&#39;active&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; objects for [[&#39;barney&#39;, &#39;pebbles&#39;], [&#39;fred&#39;]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">partition</span><span style="color:#24292E;">(users, </span><span style="color:#032F62;">&#39;active&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; objects for [[&#39;fred&#39;], [&#39;barney&#39;, &#39;pebbles&#39;]]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="比较" tabindex="-1">比较 <a class="header-anchor" href="#比较" aria-label="Permalink to &quot;比较&quot;">​</a></h2><h3 id="深比较" tabindex="-1">深比较 <a class="header-anchor" href="#深比较" aria-label="Permalink to &quot;深比较&quot;">​</a></h3><p>_.<code>isEqual</code> 执行深比较确定两者值是否相等，不支持函数和DOM节点比较</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {a:</span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> obj2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {a: </span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">isEqual</span><span style="color:#E1E4E8;">(obj, obj2) </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {a:</span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> obj2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {a: </span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">isEqual</span><span style="color:#24292E;">(obj, obj2) </span><span style="color:#6A737D;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>isEqualWith(value,other,[customizer]) 接收定制检测方法</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isGreeting</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#DBEDFF;">h(?:i</span><span style="color:#F97583;">|</span><span style="color:#DBEDFF;">ello)</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(value);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 定制检测方法</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">customizer</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">objValue</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">othValue</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">isGreeting</span><span style="color:#E1E4E8;">(objValue) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isGreeting</span><span style="color:#E1E4E8;">(othValue)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> array </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;hello&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;goodbye&#39;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> other </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;hi&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;goodbye&#39;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">isEqualWith</span><span style="color:#E1E4E8;">(array, other, customizer);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isGreeting</span><span style="color:#24292E;">(</span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">h(?:i</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">ello)</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(value);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 定制检测方法</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">customizer</span><span style="color:#24292E;">(</span><span style="color:#E36209;">objValue</span><span style="color:#24292E;">, </span><span style="color:#E36209;">othValue</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">isGreeting</span><span style="color:#24292E;">(objValue) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isGreeting</span><span style="color:#24292E;">(othValue)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> array </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;goodbye&#39;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> other </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;hi&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;goodbye&#39;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">isEqualWith</span><span style="color:#24292E;">(array, other, customizer);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="常用is方法" tabindex="-1">常用is方法 <a class="header-anchor" href="#常用is方法" aria-label="Permalink to &quot;常用is方法&quot;">​</a></h2><ul><li><code>isFunction</code> 判断是还是函数</li></ul><h2 id="lang方法" tabindex="-1">Lang方法 <a class="header-anchor" href="#lang方法" aria-label="Permalink to &quot;Lang方法&quot;">​</a></h2><ol><li><p>clone 浅拷贝</p></li><li><p>cloneDeep 深拷贝</p></li></ol><h2 id="工具函数" tabindex="-1">工具函数 <a class="header-anchor" href="#工具函数" aria-label="Permalink to &quot;工具函数&quot;">​</a></h2><ol><li>flow</li></ol><p>传入一个数组，数组里面放其他函数，会依次以前一个函数结果传入到下一个去执行，this会绑定到创建函数，每个连续调用，传入的参数都是前一个函数的结果</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">square</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">n</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(n) </span><span style="color:#6A737D;">// 3</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> n </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> n</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">addSquare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> _.</span><span style="color:#B392F0;">flow</span><span style="color:#E1E4E8;">([_.add, square])</span></span>
<span class="line"><span style="color:#B392F0;">addSquare</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 9</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">square</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#E36209;">n</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(n) </span><span style="color:#6A737D;">// 3</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> n</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">addSquare</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> _.</span><span style="color:#6F42C1;">flow</span><span style="color:#24292E;">([_.add, square])</span></span>
<span class="line"><span style="color:#6F42C1;">addSquare</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 9</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="object" tabindex="-1">Object <a class="header-anchor" href="#object" aria-label="Permalink to &quot;Object&quot;">​</a></h2><h3 id="at-根据path获取值" tabindex="-1">_.at 根据path获取值 <a class="header-anchor" href="#at-根据path获取值" aria-label="Permalink to &quot;_.at 根据path获取值&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> object </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">: [{ </span><span style="color:#9ECBFF;">&#39;b&#39;</span><span style="color:#E1E4E8;">: { </span><span style="color:#9ECBFF;">&#39;c&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> } }, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">] };</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">at</span><span style="color:#E1E4E8;">(object, [</span><span style="color:#9ECBFF;">&#39;a[0].b.c&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;a[1]&#39;</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; [3, 4]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> object </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">: [{ </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">: { </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> } }, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">] };</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">at</span><span style="color:#24292E;">(object, [</span><span style="color:#032F62;">&#39;a[0].b.c&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;a[1]&#39;</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; [3, 4]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="get-根据path获取值" tabindex="-1">_get 根据path获取值 <a class="header-anchor" href="#get-根据path获取值" aria-label="Permalink to &quot;_get  根据path获取值&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> object </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">: [{ </span><span style="color:#9ECBFF;">&#39;b&#39;</span><span style="color:#E1E4E8;">: { </span><span style="color:#9ECBFF;">&#39;c&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> } }] };</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(object, </span><span style="color:#9ECBFF;">&#39;a[0].b.c&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; 3</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(object, [</span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;0&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;b&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;c&#39;</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; 3</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(object, </span><span style="color:#9ECBFF;">&#39;a.b.c&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; &#39;default&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> object </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">: [{ </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">: { </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> } }] };</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(object, </span><span style="color:#032F62;">&#39;a[0].b.c&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; 3</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(object, [</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; 3</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(object, </span><span style="color:#032F62;">&#39;a.b.c&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;default&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; &#39;default&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="set-设置一个值" tabindex="-1">_.set 设置一个值 <a class="header-anchor" href="#set-设置一个值" aria-label="Permalink to &quot;_.set  设置一个值&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> object </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">: [{ </span><span style="color:#9ECBFF;">&#39;b&#39;</span><span style="color:#E1E4E8;">: { </span><span style="color:#9ECBFF;">&#39;c&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> } }] };</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(object, </span><span style="color:#9ECBFF;">&#39;a[0].b.c&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(object.a[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].b.c);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; 4</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(object, [</span><span style="color:#9ECBFF;">&#39;x&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;0&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;y&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;z&#39;</span><span style="color:#E1E4E8;">], </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(object.x[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].y.z);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; 5</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> object </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">: [{ </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">: { </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> } }] };</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(object, </span><span style="color:#032F62;">&#39;a[0].b.c&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(object.a[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].b.c);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; 4</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(object, [</span><span style="color:#032F62;">&#39;x&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;y&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;z&#39;</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(object.x[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].y.z);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; 5</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="omit-剔除不要的键值" tabindex="-1">_.omit 剔除不要的键值 <a class="header-anchor" href="#omit-剔除不要的键值" aria-label="Permalink to &quot;_.omit 剔除不要的键值&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> object </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;b&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;2&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;c&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> };</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">omit</span><span style="color:#E1E4E8;">(object, [</span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;c&#39;</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { &#39;b&#39;: &#39;2&#39; }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> object </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> };</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">omit</span><span style="color:#24292E;">(object, [</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { &#39;b&#39;: &#39;2&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="pick-保留只要的键值" tabindex="-1">_.pick 保留只要的键值 <a class="header-anchor" href="#pick-保留只要的键值" aria-label="Permalink to &quot;_.pick 保留只要的键值&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> object </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;b&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;2&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;c&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> };</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">pick</span><span style="color:#E1E4E8;">(object, [</span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;c&#39;</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { &#39;a&#39;: 1, &#39;c&#39;: 3 }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> object </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> };</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">pick</span><span style="color:#24292E;">(object, [</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { &#39;a&#39;: 1, &#39;c&#39;: 3 }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="merge-合并值" tabindex="-1">_.merge 合并值 <a class="header-anchor" href="#merge-合并值" aria-label="Permalink to &quot;_.merge 合并值&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> object </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">: [{ </span><span style="color:#9ECBFF;">&#39;b&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> }, { </span><span style="color:#9ECBFF;">&#39;d&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> }]</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> other </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">: [{ </span><span style="color:#9ECBFF;">&#39;c&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> }, { </span><span style="color:#9ECBFF;">&#39;e&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> }]</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">_.</span><span style="color:#B392F0;">merge</span><span style="color:#E1E4E8;">(object, other);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { &#39;a&#39;: [{ &#39;b&#39;: 2, &#39;c&#39;: 3 }, { &#39;d&#39;: 4, &#39;e&#39;: 5 }] }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> object </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">: [{ </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> }, { </span><span style="color:#032F62;">&#39;d&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> }]</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> other </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">: [{ </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> }, { </span><span style="color:#032F62;">&#39;e&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> }]</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">merge</span><span style="color:#24292E;">(object, other);</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { &#39;a&#39;: [{ &#39;b&#39;: 2, &#39;c&#39;: 3 }, { &#39;d&#39;: 4, &#39;e&#39;: 5 }] }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,59),e=[o];function c(r,t,E,y,i,F){return a(),n("div",null,e)}const u=s(p,[["render",c]]);export{d as __pageData,u as default};
