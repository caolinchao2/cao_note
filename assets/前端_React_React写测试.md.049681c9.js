import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.b5309610.js";const u=JSON.parse('{"title":"React写测试用例","description":"","frontmatter":{},"headers":[],"relativePath":"前端/React/React写测试.md","filePath":"前端/React/React写测试.md","lastUpdated":null}'),p={name:"前端/React/React写测试.md"},e=l(`<h1 id="react写测试用例" tabindex="-1">React写测试用例 <a class="header-anchor" href="#react写测试用例" aria-label="Permalink to &quot;React写测试用例&quot;">​</a></h1><p>在package.json文件里，查看react-script 脚本，在3.3之前的版本都需要手动安装测试库，下面是手动安装</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--save-dev</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@testing-library/react</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-dev</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@testing-library/react</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>jest官网：<a href="https://jestjs.io/docs/zh-Hans/api" target="_blank" rel="noreferrer">https://jestjs.io/docs/zh-Hans/api</a></p><p>react测试库：<a href="https://testing-library.com/docs/react-testing-library/intro" target="_blank" rel="noreferrer">https://testing-library.com/docs/react-testing-library/intro</a></p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> React </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;react&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {fireEvent, render} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@testing-library/react&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Button </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./Button&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">defualtProps</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    onClick: jest.</span><span style="color:#B392F0;">fn</span><span style="color:#E1E4E8;">() </span><span style="color:#6A737D;">// 假的事件</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// describe代表一组测试用例</span></span>
<span class="line"><span style="color:#B392F0;">describe</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;test Button component&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// it是test的简写，一个it表示一个用例</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;should render the correct default button&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    	</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">wrapper</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">(&lt;</span><span style="color:#79B8FF;">Button</span><span style="color:#E1E4E8;"> {</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">defaultProps}&gt;Nice&lt;/</span><span style="color:#79B8FF;">Button</span><span style="color:#E1E4E8;">&gt;)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 通过查找Nice找到节点</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">element</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> wrapper.</span><span style="color:#B392F0;">getByText</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Nice&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 验证是否在文档中</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">(element).</span><span style="color:#B392F0;">toBeInTheDocument</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 验证是否是button标签</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">(element.tagName).</span><span style="color:#B392F0;">toEqual</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;BUTTON&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 测试是否包含类名</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">(element).</span><span style="color:#B392F0;">toHaveClass</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;btn btn-default&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 点击该节点</span></span>
<span class="line"><span style="color:#E1E4E8;">        fireEvent.</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">(element)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 确保函数被调用</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">(defaultProps.onClick).</span><span style="color:#B392F0;">toHaveBeenCalled</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> React </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;react&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {fireEvent, render} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@testing-library/react&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Button </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./Button&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">defualtProps</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    onClick: jest.</span><span style="color:#6F42C1;">fn</span><span style="color:#24292E;">() </span><span style="color:#6A737D;">// 假的事件</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// describe代表一组测试用例</span></span>
<span class="line"><span style="color:#6F42C1;">describe</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;test Button component&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// it是test的简写，一个it表示一个用例</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;should render the correct default button&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    	</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">wrapper</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">render</span><span style="color:#24292E;">(&lt;</span><span style="color:#005CC5;">Button</span><span style="color:#24292E;"> {</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">defaultProps}&gt;Nice&lt;/</span><span style="color:#005CC5;">Button</span><span style="color:#24292E;">&gt;)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 通过查找Nice找到节点</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">element</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> wrapper.</span><span style="color:#6F42C1;">getByText</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Nice&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 验证是否在文档中</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">(element).</span><span style="color:#6F42C1;">toBeInTheDocument</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 验证是否是button标签</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">(element.tagName).</span><span style="color:#6F42C1;">toEqual</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;BUTTON&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 测试是否包含类名</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">(element).</span><span style="color:#6F42C1;">toHaveClass</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;btn btn-default&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 点击该节点</span></span>
<span class="line"><span style="color:#24292E;">        fireEvent.</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">(element)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 确保函数被调用</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">(defaultProps.onClick).</span><span style="color:#6F42C1;">toHaveBeenCalled</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="常用api" tabindex="-1">常用API <a class="header-anchor" href="#常用api" aria-label="Permalink to &quot;常用API&quot;">​</a></h2><h3 id="render函数返回的api" tabindex="-1">render函数返回的api <a class="header-anchor" href="#render函数返回的api" aria-label="Permalink to &quot;render函数返回的api&quot;">​</a></h3><ul><li><code>getByText</code> 通过内容查找节点</li><li><code>queryByText</code> 与get不同的是可能返回undefined</li><li><code>getByTestId</code> 通过节点绑定的data-testid查找对应的节点</li></ul><h3 id="expect-api" tabindex="-1">expect API <a class="header-anchor" href="#expect-api" aria-label="Permalink to &quot;expect API&quot;">​</a></h3><ul><li><code>toBeInTheDocument</code> 验证是否在文档中</li><li><code>toHaveClass</code> 是否包含类名</li><li><code>toBeVisible</code> 是否存在</li><li><code>toHaveBeenCalled</code> 事件是否被调用</li><li><code>toHaveBeenCalledWith</code> 验证调用时传入的参数</li><li><code>not</code> 将后面的链式调用修改为与之相反</li></ul><h2 id="testing-library-react库常用的方法" tabindex="-1">testing-library/react库常用的方法 <a class="header-anchor" href="#testing-library-react库常用的方法" aria-label="Permalink to &quot;testing-library/react库常用的方法&quot;">​</a></h2><ul><li><code>fireEvent</code> 模拟事件</li><li><code>render</code> 渲染节点</li><li><code>cleanup</code> 清除前面的节点</li></ul>`,14),o=[e];function t(r,c,E,i,y,d){return n(),a("div",null,o)}const m=s(p,[["render",t]]);export{u as __pageData,m as default};
