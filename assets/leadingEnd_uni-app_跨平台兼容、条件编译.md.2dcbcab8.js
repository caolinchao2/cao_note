import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.b5309610.js";const b=JSON.parse('{"title":"跨平台兼容、条件编译","description":"","frontmatter":{},"headers":[],"relativePath":"leadingEnd/uni-app/跨平台兼容、条件编译.md","filePath":"leadingEnd/uni-app/跨平台兼容、条件编译.md","lastUpdated":null}'),p={name:"leadingEnd/uni-app/跨平台兼容、条件编译.md"},e=l(`<h1 id="跨平台兼容、条件编译" tabindex="-1">跨平台兼容、条件编译 <a class="header-anchor" href="#跨平台兼容、条件编译" aria-label="Permalink to &quot;跨平台兼容、条件编译&quot;">​</a></h1><h2 id="跨平台兼容" tabindex="-1">跨平台兼容 <a class="header-anchor" href="#跨平台兼容" aria-label="Permalink to &quot;跨平台兼容&quot;">​</a></h2><p>每个端，有每个端的管理规则，这不是uni-app在技术层面上可以抹平的：</p><ul><li>比如H5端的浏览器有跨域限制；</li><li>比如微信小程序会强制要求https链接，并且所有要联网的服务器域名都要配到微信的白名单中；</li><li>比如App端，iOS对隐私控制和虚拟支付控制非常严格；</li><li>比如App端，Android、国产rom各种兼容性差异，尤其是因为谷歌服务被墙，导致的push、定位等开发混乱的坑</li></ul><h3 id="h5正常但app异常的可能性" tabindex="-1">H5正常但App异常的可能性 <a class="header-anchor" href="#h5正常但app异常的可能性" aria-label="Permalink to &quot;H5正常但App异常的可能性&quot;">​</a></h3><ul><li>body的元素选择器请改为page，同样，div和ul和li等改为view、span和font改为text、a改为navigator、img改为image...</li><li>使用了非H5端不支持的API 小程序和App的js运行在jscore下而不是浏览器里，没有浏览器专用的js对象，比如document、xmlhttp、cookie、window、location、navigator、localstorage、websql、indexdb、webgl等对象。</li></ul><h3 id="h5正常但小程序异常的可能性" tabindex="-1">H5正常但小程序异常的可能性 <a class="header-anchor" href="#h5正常但小程序异常的可能性" aria-label="Permalink to &quot;H5正常但小程序异常的可能性&quot;">​</a></h3><ul><li>同上</li><li>v-html在h5和app-vue均支持，但小程序不支持</li><li>小程序要求连接的网址都要配白名单</li></ul><h3 id="小程序正常但app异常的可能性" tabindex="-1">小程序正常但App异常的可能性 <a class="header-anchor" href="#小程序正常但app异常的可能性" aria-label="Permalink to &quot;小程序正常但App异常的可能性&quot;">​</a></h3><ul><li>vue页面在App端的渲染引擎默认是系统webview（不是手机自带浏览器，是rom的webview），在较老的手机上，比如Android4.4、5.0或iOS8，一些新出的css语法是不支持的。注意这不意味着不能使用flex，Android4.4也支持flex，只是不要使用太新的css。可以找Android4.4手机或使用pc模拟器实际测试下，大多数国产Android模拟器都是4.4或5.0</li></ul><p>小程序不存在浏览器兼容问题，它内置了几十M自己的定制webview。所以如果你的H5和小程序界面正常，而App界面异常，大多是因为css兼容性</p><p><strong>解决这类问题：</strong></p><p>放弃老款手机支持 不用使用太新的css语法，可以在caniuse查询 从 uni-app 2.5.3 起，Android端支持引入腾讯x5浏览器内核，可以抹平低端Android的浏览器兼容性问题</p><h3 id="小程序或app正常-但h5异常的可能性" tabindex="-1">小程序或App正常，但H5异常的可能性 <a class="header-anchor" href="#小程序或app正常-但h5异常的可能性" aria-label="Permalink to &quot;小程序或App正常，但H5异常的可能性&quot;">​</a></h3><ul><li>在 uni-app 2.4.7 以前，H5端不支持微信小程序自定义组件，即 wxcomponents 下的组件，此时可能产生兼容问题。从 2.4.7 起，H5也支持微信自定义组件，不再存在这这方面兼容问题。</li><li>App端使用了App特有的API和功能，比如plus、Native.js、subNVue、原生插件等</li><li>使用了小程序专用的功能，比如微信卡券、小程序插件、微信小程序云开发。对于云开发，建议使用可跨端的uniCloud</li></ul><h3 id="app正常-小程序、h5异常的可能性" tabindex="-1">App正常，小程序、H5异常的可能性 <a class="header-anchor" href="#app正常-小程序、h5异常的可能性" aria-label="Permalink to &quot;App正常，小程序、H5异常的可能性&quot;">​</a></h3><ul><li>代码中使用了App端特有的plus、Native.js、subNVue、原生插件等功能</li></ul><h3 id="区别于传统-web-开发的注意" tabindex="-1">区别于传统 web 开发的注意 <a class="header-anchor" href="#区别于传统-web-开发的注意" aria-label="Permalink to &quot;区别于传统 web 开发的注意&quot;">​</a></h3><p><strong>JS注意</strong></p><ul><li>非H5端，不能使用浏览器自带对象，比如document、window、localstorage、cookie等，更不能使用jquery等依赖这些浏览器对象的框架。因为各家小程序快应用都不支持这些对象。</li><li>没有这些浏览器自带对象并不影响业务开发，uni提供的api足够完成业务。</li><li>uni的api在编译到web平台运行时，其实也会转为浏览器的js api。</li></ul><blockquote><ul><li>App端若要使用操作window、document的库，需要通过renderjs来实现。</li><li>uni的api是多端可用的。在条件编译区，每个平台的专有api也可以使用，比如wx.、plus.等api可以分别在微信下和app下使用。</li><li>出于降低小程序向uni-app迁移成本的考虑，wx的api在app里也可以直接运行，比如写wx.request和uni.request是一样的，但仍然建议仅在微信的条件编译区使用wx的api。</li></ul></blockquote><p><strong>Tag注意</strong></p><ul><li>uni-app的tag同小程序的tag，和HTML的tag不一样，比如div要改成view，span要改成text、a要改成navigator。</li><li>出于降低h5应用向uni-app迁移成本的考虑，写成div、span也可以运行在app和小程序上，因为uni-app编译器会把这些HTML标签编译为小程序标签。但仍然建议养成新习惯。</li></ul><p><strong>Css注意</strong></p><ul><li>虽然大部分css样式在微信小程序和app中都可以支持，但推荐使用flex布局模型，这种布局更灵活高效且支持更多平台(比如nvue、快应用只支持flex布局)</li><li>单位方面，uni-app默认为rpx。这是一种可跨端的通用单位</li></ul><p><strong>工程目录注意</strong></p><ul><li>页面文件：放到pages目录下；推荐方案：新建一个页面目录，然后创建一个目录同名的.vue文件，如/pages/list/list.vue，接着在pages.json里完成注册。这与小程序的策略相同。</li><li>自定义组件：放到component目录</li><li>静态资源：如图片，固定放到static目录下。这是webpack的规则</li></ul><h3 id="h5-开发注意" tabindex="-1">H5 开发注意 <a class="header-anchor" href="#h5-开发注意" aria-label="Permalink to &quot;H5 开发注意&quot;">​</a></h3><p><strong>H5 发布到服务器注意</strong></p><ul><li>配置发行后的路径（发行在网站根目录可不配置），比如发行网站路径是 www.xxx.com/html5，在 manifest.json 文件内编辑 h5 节点，router 下增加 base 属性为 html5</li></ul><p><img src="https://s.poetries.top/uploads/2023/02/81d1e7501f69bfb2.png" alt="img"></p><ul><li>点击菜单 发行-&gt; H5</li><li>在当下项目下的 unpackage/dist/build/h5 目录找到出的资源，部署服务器（或者使用本地服务器预览），如需部署到相对路径（支持本地file协议打开）参考：<a href="https://ask.dcloud.net.cn/article/37432" target="_blank" rel="noreferrer">https://ask.dcloud.net.cn/article/37432</a></li></ul><p><strong>引用第三方 js 的方式：</strong></p><ul><li>通过 npm 引入（通过条件编译，只有是 h5 平台才 import 相应的库）</li><li>在 manifest.json 文件编辑 h5 节点的 <code>template</code> 属性，填写 html 模版路径，在 html 模版里面可以使用 script 的方式引入三方的 js，如下示例是加了百度统计的 html 模板部分代码</li></ul><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!-- ... --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">noscript</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">strong</span><span style="color:#E1E4E8;">&gt;Please enable JavaScript to continue.&lt;/</span><span style="color:#85E89D;">strong</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;/</span><span style="color:#85E89D;">noscript</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;app&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">&lt;!-- built files will be auto injected --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _hmt </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> _hmt </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">                (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> hm </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">createElement</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;script&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    hm.src </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://hm.baidu.com/hm.js?xxxxxx&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementsByTagName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;script&quot;</span><span style="color:#E1E4E8;">)[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">                    s.parentNode.</span><span style="color:#B392F0;">insertBefore</span><span style="color:#E1E4E8;">(hm, s);</span></span>
<span class="line"><span style="color:#E1E4E8;">                })();</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- ... --&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- ... --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">noscript</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">strong</span><span style="color:#24292E;">&gt;Please enable JavaScript to continue.&lt;/</span><span style="color:#22863A;">strong</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;/</span><span style="color:#22863A;">noscript</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;app&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">&lt;!-- built files will be auto injected --&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> _hmt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> _hmt </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">                (</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> hm </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">createElement</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;script&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                    hm.src </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://hm.baidu.com/hm.js?xxxxxx&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementsByTagName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;script&quot;</span><span style="color:#24292E;">)[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">                    s.parentNode.</span><span style="color:#6F42C1;">insertBefore</span><span style="color:#24292E;">(hm, s);</span></span>
<span class="line"><span style="color:#24292E;">                })();</span></span>
<span class="line"><span style="color:#24292E;">            &lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- ... --&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ul><li>H5 版 uni-app 全支持 vue 语法，所以可能造成部分写法在 H5 端生效，在小程序或 App 端不生效</li><li>H5 校验了更严格的 vue 语法，有些写法不规范会报警，比如： data 后面写对象会报警，必须写 function；不能修改 props 的值；组件最外层 template 节点下不允许包含多个节点等</li><li>编译为 H5 版后生成的是单页应用（SPA）</li><li>如果遇到跨域造成js无法联网，注意网络请求（request、uploadFile、downloadFile等）在浏览器存在跨域限制，解决方案有详见：<a href="https://ask.dcloud.net.cn/article/35267" target="_blank" rel="noreferrer">https://ask.dcloud.net.cn/article/35267</a></li><li>APP 和小程序的导航栏和 tabbar 均是原生控件，元素区域坐标是不包含原生导航栏和 tabbar 的；而 H5 里导航栏和 tabbar 是 div 模拟实现的，所以元素坐标会包含导航栏和tabbar的高度。为了优雅的解决多端高度定位问题，uni-app 新增了2个css变量：--window-top 和 --window-bottom，这代表了页面的内容区域距离顶部和底部的距离。举个实例，如果你想在原生tabbar 上方悬浮一个菜单，之前写 bottom:0。这样的写法编译到 h5 后，这个菜单会和 tabbar 重叠，位于屏幕底部。而改为使用 bottom:var(--window-bottom)，则不管在 app 下还是在h5下，这个菜单都是悬浮在 tabbar 上浮的。这就避免了写条件编译代码。当然仍然也可以使用 H5 的条件编译处理界面的不同</li><li>CSS 內使用 vh 单位的时候注意 100vh 包含导航栏，使用时需要减去导航栏和 tabBar 高度，部分浏览器还包含浏览器操作栏高度，使用时请注意</li><li>正常支持 rpx，px 是真实物理像素。暂不支持通过设 manifest.json 的 &quot;transformPx&quot; : true，把 px 当动态单位使用</li><li>使用罗盘、地理位置、加速计等相关接口需要使用 https 协议，本地预览（localhost）可以使用 http 协议</li><li>组件内（页面除外）不支持 onLoad、onShow 等页面生命周期</li><li>为避免和内置组件冲突，自定义组件请加上前缀（但不能是 u 和 uni）。比如可使用的自定义组件名称：my-view、m-input、we-icon，例如不可使用的自定义组件名称：u-view、uni-input，如果已有项目使用了可能造成冲突的名称，请修改名称，另外微信小程序下自定义组件名称不能以 wx 开头</li></ul><h3 id="小程序开发注意" tabindex="-1">小程序开发注意 <a class="header-anchor" href="#小程序开发注意" aria-label="Permalink to &quot;小程序开发注意&quot;">​</a></h3><p><strong>vendor.js 过大的处理方式</strong></p><p>小程序工具提示vendor.js过大，已经跳过es6向es5转换。这个转换问题本身不用理会，因为vendor.js已经是es5的了。</p><p>关于体积控制，参考如下</p><ul><li>HBuilderX创建的项目勾选运行--&gt;运行到小程序模拟器--&gt;运行时是否压缩代码</li><li>cli创建的项目可以在package.json中添加参数--minimize，示例：&quot;dev:mp-weixin&quot;: &quot;cross-env NODE_ENV=development UNI_PLATFORM=mp-weixin vue-cli-service uni-build --watch --minimize&quot;</li><li>使用分包优化</li></ul><p>建议关注微信<a href="https://developers.weixin.qq.com/community/develop/issueList?type=&amp;status=develop&amp;search=" target="_blank" rel="noreferrer">小程序当前bug列表 (opens new window)</a>，对已知Bug，想办法避让。</p><h2 id="判断平台" tabindex="-1">判断平台 <a class="header-anchor" href="#判断平台" aria-label="Permalink to &quot;判断平台&quot;">​</a></h2><p>平台判断有 2 种场景，一种是在编译期判断，一种是在运行期判断。</p><ul><li>编译期判断 编译期判断，即条件编译，不同平台在编译出包后已经是不同的代码</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// #ifdef H5</span></span>
<span class="line"><span style="color:#B392F0;">alert</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;只有h5平台才有alert方法&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// #endif</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// #ifdef H5</span></span>
<span class="line"><span style="color:#6F42C1;">alert</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;只有h5平台才有alert方法&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// #endif</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>如上代码只会编译到 H5 的发行包里，其他平台的包不会包含如上代码</p><ul><li>运行期判断 运行期判断是指代码已经打入包中，仍然需要在运行期判断平台，此时可使用 uni.getSystemInfoSync().platform 判断客户端环境是 Android、iOS 还是小程序开发工具（在百度小程序开发工具、微信小程序开发工具、支付宝小程序开发工具中使用 uni.getSystemInfoSync().platform 返回值均为 devtools）</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (uni.</span><span style="color:#B392F0;">getSystemInfoSync</span><span style="color:#E1E4E8;">().platform) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;android&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">		console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;运行Android上&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ios&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">		console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;运行iOS上&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">		console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;运行在开发者工具上&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (uni.</span><span style="color:#6F42C1;">getSystemInfoSync</span><span style="color:#24292E;">().platform) {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;android&#39;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">		console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;运行Android上&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ios&#39;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">		console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;运行iOS上&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">default</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">		console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;运行在开发者工具上&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>如有必要，也可以在条件编译里自己定义一个变量，赋不同值。在后续运行代码中动态判断环境</p><h2 id="条件编译" tabindex="-1">条件编译 <a class="header-anchor" href="#条件编译" aria-label="Permalink to &quot;条件编译&quot;">​</a></h2><h3 id="什么是编译器" tabindex="-1">什么是编译器 <a class="header-anchor" href="#什么是编译器" aria-label="Permalink to &quot;什么是编译器&quot;">​</a></h3><p><code>uni-app</code>能实现一套代码、多端运行，核心是通过<code>编译器 + 运行时</code>实现的</p><ul><li>编译器：将<code>uni-app</code>统一代码编译生成每个平台支持的特有代码；如在小程序平台，编译器将<code>.vue</code>文件拆分生成<code>wxml</code>、<code>wxss</code>、<code>js</code>等代码。</li><li>运行时：动态处理数据绑定、事件代理，保证Vue和平台宿主数据的一致性</li></ul><p><code>uni-app</code>项目根据所依赖的<code>Vue</code>版本不同，编译器的实现也不同：</p><ul><li>vue2：<code>uni-app</code>编译器基于wepback实现</li><li>vue3：<code>uni-app</code>编译器基于Vite实现，编译速度更快，详见：<a href="https://ask.dcloud.net.cn/article/39628" target="_blank" rel="noreferrer">vue3和vite双向加持，uni-app性能再次提升(opens new window)</a></li></ul><h3 id="条件编译-1" tabindex="-1">条件编译 <a class="header-anchor" href="#条件编译-1" aria-label="Permalink to &quot;条件编译&quot;">​</a></h3><p>条件编译是用特殊的注释作为标记，在编译时根据这些特殊的注释，将注释里面的代码编译到不同平台。</p><p>**写法：**以 #ifdef 或 #ifndef 加 <strong>%PLATFORM%</strong> 开头，以 #endif 结尾。</p><ul><li>#ifdef：if defined 仅在某平台存在</li><li>#ifndef：if not defined 除了某平台均存在</li><li><strong>%PLATFORM%</strong>：平台名称</li></ul><table><thead><tr><th>条件编译写法</th><th>说明</th></tr></thead><tbody><tr><td>#ifdef <strong>APP-PLUS</strong> 需条件编译的代码 #endif</td><td>仅出现在 App 平台下的代码</td></tr><tr><td>#ifndef <strong>H5</strong> 需条件编译的代码 #endif</td><td>除了 H5 平台，其它平台均存在的代码</td></tr><tr><td>#ifdef <strong>H5</strong> || <strong>MP-WEIXIN</strong> 需条件编译的代码 #endif</td><td>在 H5 平台或微信小程序平台存在的代码（这里只有||，不可能出现&amp;&amp;，因为没有交集）</td></tr></tbody></table><p><strong>%PLATFORM%</strong> <strong>可取值如下：</strong></p><table><thead><tr><th style="text-align:left;">值</th><th style="text-align:left;">生效条件</th></tr></thead><tbody><tr><td style="text-align:left;">VUE3</td><td style="text-align:left;">HBuilderX 3.2.0+ <a href="https://ask.dcloud.net.cn/article/37834" target="_blank" rel="noreferrer">详情(opens new window)</a></td></tr><tr><td style="text-align:left;">APP-PLUS</td><td style="text-align:left;">App</td></tr><tr><td style="text-align:left;">APP-PLUS-NVUE或APP-NVUE</td><td style="text-align:left;">App nvue 页面</td></tr><tr><td style="text-align:left;">APP-ANDROID</td><td style="text-align:left;">App Android 平台 仅限 uts文件</td></tr><tr><td style="text-align:left;">APP-IOS</td><td style="text-align:left;">App iOS 平台 仅限 uts文件</td></tr><tr><td style="text-align:left;">H5</td><td style="text-align:left;">H5</td></tr><tr><td style="text-align:left;">MP-WEIXIN</td><td style="text-align:left;">微信小程序</td></tr><tr><td style="text-align:left;">MP-ALIPAY</td><td style="text-align:left;">支付宝小程序</td></tr><tr><td style="text-align:left;">MP-BAIDU</td><td style="text-align:left;">百度小程序</td></tr><tr><td style="text-align:left;">MP-TOUTIAO</td><td style="text-align:left;">字节跳动小程序</td></tr><tr><td style="text-align:left;">MP-LARK</td><td style="text-align:left;">飞书小程序</td></tr><tr><td style="text-align:left;">MP-QQ</td><td style="text-align:left;">QQ小程序</td></tr><tr><td style="text-align:left;">MP-KUAISHOU</td><td style="text-align:left;">快手小程序</td></tr><tr><td style="text-align:left;">MP-JD</td><td style="text-align:left;">京东小程序</td></tr><tr><td style="text-align:left;">MP-360</td><td style="text-align:left;">360小程序</td></tr><tr><td style="text-align:left;">MP</td><td style="text-align:left;">微信小程序/支付宝小程序/百度小程序/字节跳动小程序/飞书小程序/QQ小程序/360小程序</td></tr><tr><td style="text-align:left;">QUICKAPP-WEBVIEW</td><td style="text-align:left;">快应用通用(包含联盟、华为)</td></tr><tr><td style="text-align:left;">QUICKAPP-WEBVIEW-UNION</td><td style="text-align:left;">快应用联盟</td></tr><tr><td style="text-align:left;">QUICKAPP-WEBVIEW-HUAWEI</td><td style="text-align:left;">快应用华为</td></tr></tbody></table><p><strong>支持的文件</strong></p><ul><li>.vue</li><li>.js</li><li>.css</li><li>pages.json</li><li>各预编译语言文件，如：.scss、.less、.stylus、.ts、.pug</li></ul><p><strong>注意：</strong></p><ul><li>条件编译是利用注释实现的，在不同语法里注释写法不一样，js使用 <code>// 注释</code>、css 使用 <code>/* 注释 */</code>、vue/nvue 模板里使用 <code>&lt;!-- 注释 --&gt;</code>；</li><li>条件编译APP-PLUS包含APP-NVUE和APP-VUE，APP-PLUS-NVUE和APP-NVUE没什么区别，为了简写后面出了APP-NVUE ；</li><li>使用条件编译请保证<code>编译前</code>和<code>编译后</code>文件的正确性，比如json文件中不能有多余的逗号；</li><li><code>VUE3</code> 需要在项目的 <code>manifest.json</code> 文件根节点配置 <code>&quot;vueVersion&quot; : &quot;3&quot;</code></li></ul><h4 id="api-的条件编译" tabindex="-1">API 的条件编译 <a class="header-anchor" href="#api-的条件编译" aria-label="Permalink to &quot;API 的条件编译&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// #ifdef  %PLATFORM%</span></span>
<span class="line"><span style="color:#E1E4E8;">平台特有的API实现</span></span>
<span class="line"><span style="color:#6A737D;">// #endif</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// #ifdef  %PLATFORM%</span></span>
<span class="line"><span style="color:#24292E;">平台特有的API实现</span></span>
<span class="line"><span style="color:#6A737D;">// #endif</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="https://s.poetries.top/uploads/2023/06/e9e00dcd9be42e3f.png" alt="img"></p><p>示例，如下代码不会在 H5 平台上出现：</p><p><img src="https://raw.githubusercontent.com/caolinchao2/blogimg/main/img/a08d7d37595b1ae4.png" alt="img"></p><p>除了支持单个平台的条件编译外，还支持<strong>多平台</strong>同时编译，使用 || 来分隔平台名称。</p><p>示例，如下代码会在 App 和 H5 平台上出现：</p><p><img src="https://raw.githubusercontent.com/caolinchao2/blogimg/main/img/51cc60da10050ef9.png" alt="img"></p><h4 id="组件的条件编译" tabindex="-1">组件的条件编译 <a class="header-anchor" href="#组件的条件编译" aria-label="Permalink to &quot;组件的条件编译&quot;">​</a></h4><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!--  #ifdef  %PLATFORM% --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">平台特有的组件</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--  #endif --&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!--  #ifdef  %PLATFORM% --&gt;</span></span>
<span class="line"><span style="color:#24292E;">平台特有的组件</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--  #endif --&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>示例，如下公众号关注组件仅会在微信小程序中出现：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;微信公众号关注组件&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">&lt;!-- uni-app未封装，但可直接使用微信原生的official-account组件--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">&lt;!-- #ifdef MP-WEIXIN --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		        &lt;</span><span style="color:#85E89D;">official-account</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">official-account</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		    </span><span style="color:#6A737D;">&lt;!-- #endif --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;微信公众号关注组件&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">&lt;!-- uni-app未封装，但可直接使用微信原生的official-account组件--&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">&lt;!-- #ifdef MP-WEIXIN --&gt;</span></span>
<span class="line"><span style="color:#24292E;">		        &lt;</span><span style="color:#22863A;">official-account</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">official-account</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		    </span><span style="color:#6A737D;">&lt;!-- #endif --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="样式的条件编译" tabindex="-1">样式的条件编译 <a class="header-anchor" href="#样式的条件编译" aria-label="Permalink to &quot;样式的条件编译&quot;">​</a></h4><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/*  #ifdef  %PLATFORM%  */</span></span>
<span class="line"><span style="color:#E1E4E8;">平台特有样式</span></span>
<span class="line"><span style="color:#6A737D;">/*  #endif  */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/*  #ifdef  %PLATFORM%  */</span></span>
<span class="line"><span style="color:#24292E;">平台特有样式</span></span>
<span class="line"><span style="color:#6A737D;">/*  #endif  */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>注意：</strong> 样式的条件编译，无论是 css 还是 sass/scss/less/stylus 等预编译语言中，必须使用 <code>/*注释*/</code> 的写法。</p><p>正确写法</p><p><img src="https://raw.githubusercontent.com/caolinchao2/blogimg/main/img/2eb7f7f5ed83f921.png" alt="img"></p><p>错误写法</p><p><img src="https://s.poetries.top/uploads/2023/06/12668fa0fe4f8081.png" alt="img"></p><h4 id="pages-json-的条件编译" tabindex="-1">pages.json 的条件编译 <a class="header-anchor" href="#pages-json-的条件编译" aria-label="Permalink to &quot;pages.json 的条件编译&quot;">​</a></h4><p>下面的页面，只有运行至 App 时才会编译进去。</p><p><img src="https://raw.githubusercontent.com/caolinchao2/blogimg/main/img/60afa102514d0e41.png" alt="img"></p><p>不同平台下的特有功能，以及小程序平台的分包，都可以通过 pages.json 的条件编译来更好地实现。这样，就不会在其它平台产生多余的资源，进而减小包体积。</p><p>json的条件编译，如不同平台的key名称相同，cli项目下开发者自己安装的校验器会报错，需自行关闭这些校验器对json相同key的校验规则。如果使用HBuilderX的校验器，无需在意此问题，HBuilderX的语法校验器为此优化过</p><h4 id="static-目录的条件编译" tabindex="-1">static 目录的条件编译 <a class="header-anchor" href="#static-目录的条件编译" aria-label="Permalink to &quot;static 目录的条件编译&quot;">​</a></h4><p>在不同平台，引用的静态资源可能也存在差异，通过 static 的条件编译可以解决此问题，static 目录下新建不同平台的专有目录</p><table><thead><tr><th style="text-align:center;">目录名称</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">app-plus</td><td style="text-align:center;">App</td></tr><tr><td style="text-align:center;">h5</td><td style="text-align:center;">H5</td></tr><tr><td style="text-align:center;">mp-weixin</td><td style="text-align:center;">微信小程序</td></tr><tr><td style="text-align:center;">mp-alipay</td><td style="text-align:center;">支付宝小程序</td></tr><tr><td style="text-align:center;">mp-baidu</td><td style="text-align:center;">百度小程序</td></tr><tr><td style="text-align:center;">mp-qq</td><td style="text-align:center;">QQ小程序</td></tr><tr><td style="text-align:center;">mp-toutiao</td><td style="text-align:center;">字节小程序</td></tr><tr><td style="text-align:center;">mp-lark</td><td style="text-align:center;">飞书小程序</td></tr><tr><td style="text-align:center;">mp-kuaishou</td><td style="text-align:center;">快手小程序</td></tr><tr><td style="text-align:center;">mp-jd</td><td style="text-align:center;">京东小程序</td></tr></tbody></table><p>专有目录下的静态资源只有在特定平台才会编译进去。</p><p>如以下目录结构，<code>a.png</code> 只有在微信小程序平台才会编译进去，<code>b.png</code> 在所有平台都会被编译。</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">┌─static</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─mp-weixin</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  └─a.png</span></span>
<span class="line"><span style="color:#e1e4e8;">│  └─b.png</span></span>
<span class="line"><span style="color:#e1e4e8;">├─main.js</span></span>
<span class="line"><span style="color:#e1e4e8;">├─App.vue</span></span>
<span class="line"><span style="color:#e1e4e8;">├─manifest.json</span></span>
<span class="line"><span style="color:#e1e4e8;">└─pages.json</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">┌─static</span></span>
<span class="line"><span style="color:#24292e;">│  ├─mp-weixin</span></span>
<span class="line"><span style="color:#24292e;">│  │  └─a.png</span></span>
<span class="line"><span style="color:#24292e;">│  └─b.png</span></span>
<span class="line"><span style="color:#24292e;">├─main.js</span></span>
<span class="line"><span style="color:#24292e;">├─App.vue</span></span>
<span class="line"><span style="color:#24292e;">├─manifest.json</span></span>
<span class="line"><span style="color:#24292e;">└─pages.json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="整体目录条件编译" tabindex="-1">整体目录条件编译 <a class="header-anchor" href="#整体目录条件编译" aria-label="Permalink to &quot;整体目录条件编译&quot;">​</a></h4><p>如果想把各平台的页面文件更彻底的分开，也可以在uni-app项目根目录创建<code>platforms</code>目录，然后在下面进一步创建<code>app-plus</code>、<code>mp-weixin</code>等子目录，存放不同平台的文件</p><p><strong>注意</strong></p><ul><li><code>platforms</code>目录下只支持放置页面文件（即页面vue文件），如果需要对其他资源条件编译，建议使用<a href="https://uniapp.dcloud.net.cn/tutorial/platform.html#static-%E7%9B%AE%E5%BD%95%E7%9A%84%E6%9D%A1%E4%BB%B6%E7%BC%96%E8%AF%91" target="_blank" rel="noreferrer">static 目录的条件编译 (opens new window)</a>。</li></ul><h4 id="hbuilderx-支持" tabindex="-1">HBuilderX 支持 <a class="header-anchor" href="#hbuilderx-支持" aria-label="Permalink to &quot;HBuilderX 支持&quot;">​</a></h4><p>HBuilderX 为 <code>uni-app</code> 的条件编译提供了丰富的支持:</p><p><strong>代码块支持</strong></p><p>在 HBuilderX 中开发 <code>uni-app</code> 时，通过输入 <strong>ifdef</strong> 可快速生成条件编译的代码片段</p><p><img src="https://s.poetries.top/uploads/2023/06/e8036139c9c30f67.png" alt="img"></p><p><strong>语法高亮</strong></p><p>在 HBuilderX 中对条件编译的代码注释部分提供了语法高亮，可分辨出写法是否正确，使得代码更加清晰（独立js文件需在编辑器右下角切换javascript es6+编辑器，独立css文件暂不支持高亮，但不高亮不影响使用）</p><p><img src="https://raw.githubusercontent.com/caolinchao2/blogimg/main/img/e807ecfcedc78113.png" alt="img"></p><p><strong>正确注释和快速选中</strong></p><p>在 HBuilderX 中，ctrl+alt+/ 即可生成正确注释（js：<code>// 注释</code>、css：<code>/* 注释 */</code>、vue/nvue模板： <code>&lt;!-- 注释 --&gt;</code>）</p><p><img src="https://raw.githubusercontent.com/caolinchao2/blogimg/main/img/a088c2f4f839d434.png" alt="img"></p><p>点击 <strong>ifdef</strong> 或 <strong>endif</strong> 可快速选中条件编译部分；点击左侧的折叠图标，可折叠条件编译部分代码。</p><p><img src="https://raw.githubusercontent.com/caolinchao2/blogimg/main/img/64e8271d2042f585.png" alt="img"></p><h4 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h4><ul><li>Android 和 iOS 平台不支持通过条件编译来区分，如果需要区分 Android、iOS 平台，请通过调用 uni.getSystemInfo 来获取平台信息。支持<code>ifios</code>、<code>ifAndroid</code>代码块，可方便编写判断。</li><li>有些跨端工具可以提供js的条件编译或多态，但这对于实际开发远远不够。uni-app不止是处理js，任何代码都可以多端条件编译，才能真正解决实际项目的跨端问题。另外所谓多态在实际开发中会造成大量冗余代码，很不利于复用和维护。举例，微信小程序主题色是绿色，而百度支付宝小程序是蓝色，你的应用想分平台适配颜色，只有条件编译是代码量最低、最容易维护的。</li><li>有些公司的产品运营总是给不同平台提不同需求，但这不是拒绝uni-app的理由。关键在于项目里，复用的代码多还是个性的代码多，正常都是复用的代码多，所以仍然应该多端。而个性的代码放到不同平台的目录下，差异化维护。</li></ul><h3 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-label="Permalink to &quot;环境变量&quot;">​</a></h3><p>uni-app 项目中配置环境变量主要有如下三种方式</p><p><strong>vue-config.js</strong></p><p>在 vue.config.js 中可以修改 webpack 配置，包括环境变量，具体参考 <a href="https://uniapp.dcloud.net.cn/collocation/vue-config" target="_blank" rel="noreferrer">vue-config.js (opens new window)</a>。</p><p><strong>package.json</strong></p><p>在自定义条件编译平台时，可以在 package.json 文件的 env 节点下配置环境变量，具体参考 <a href="https://uniapp.dcloud.net.cn/collocation/package" target="_blank" rel="noreferrer">package.json(opens new window)</a></p><h3 id="编译器配置" tabindex="-1">编译器配置 <a class="header-anchor" href="#编译器配置" aria-label="Permalink to &quot;编译器配置&quot;">​</a></h3><p>你可以通过如下入口，对<code>uni-app</code>编译器进行配置：</p><p><strong>manifest.json</strong></p><p>在manifest.json中，你可以配置Vue的版本（Vue2/Vue3），以及发行H5平台路由模式，详见： <a href="https://uniapp.dcloud.net.cn/collocation/manifest" target="_blank" rel="noreferrer">manifest.json(opens new window)</a></p><p><strong>vue.config.js</strong></p><p>在 vue.config.js 中可以修改 webpack 配置，包括环境变量，具体参考 <a href="https://uniapp.dcloud.net.cn/collocation/vue-config" target="_blank" rel="noreferrer">vue-config.js (opens new window)</a>。</p><p><strong>vite.config.js</strong></p><p>在 vite.config.js 中可以修改 Vite 配置，包括环境变量，具体参考 <a href="https://uniapp.dcloud.net.cn/collocation/vite-config" target="_blank" rel="noreferrer">vite.config.js (opens new window)</a>。</p><p><strong>package.json</strong></p><p>在自定义条件编译平台时，可以在 package.json 文件的 env 节点下配置环境变量，具体参考 <a href="https://uniapp.dcloud.net.cn/collocation/package" target="_blank" rel="noreferrer">package.json(opens new window)</a></p><p><strong>.env</strong></p><p>CLI 创建的项目中可以在根目录中放置 <code>.env</code> 文件来指定环境变量，具体参考：[环境变量](<a href="https://cli.vuejs.org/zh/guide/mode-and-env.html#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F" target="_blank" rel="noreferrer">https://cli.vuejs.org/zh/guide/mode-and-env.html#环境变量</a></p><h2 id="web专题" tabindex="-1">web专题 <a class="header-anchor" href="#web专题" aria-label="Permalink to &quot;web专题&quot;">​</a></h2><h3 id="宽屏适配指南" tabindex="-1">宽屏适配指南 <a class="header-anchor" href="#宽屏适配指南" aria-label="Permalink to &quot;宽屏适配指南&quot;">​</a></h3><p>uni-app是以移动为先的理念诞生的。从uni-app 2.9起，提供了PC等宽屏的适配方案，完成了全端统一。</p><p>PC适配和屏幕适配略有差异。PC适配包含<code>宽屏适配</code>和<code>uni-app内置组件适配PC</code>两方面的工作。</p><p>uni-app内置组件的PC适配，又包括<code>PC交互习惯的UI调整</code>和<code>非webkit浏览器适配</code>这两部分。这块工作不在本文的讨论范围内，尤其是开发者在PC端可以随意使用普通html元素和组件，不局限于uni-app内置组件。所以本文重点讨论屏幕适配。</p><p>uni-app提供的屏幕适配方案，包括3部分：</p><p><strong>1. 页面窗体级适配方案：leftWindow、rightWindow、topWindow</strong></p><p>以目前手机屏幕为主window，在左右上，可新扩展 leftWindow、rightWindow、topWindow，这些区域可设定在一定屏幕宽度范围自动出现或消失。这些区域各自独立，切换页面支持在各自的window内刷新，而不是整屏刷新。</p><p>各个window之间可以交互通信。</p><p>这里有2个例子：</p><ul><li>hello uni-app：<a href="https://hellouniapp.dcloud.net.cn/" target="_blank" rel="noreferrer">https://hellouniapp.dcloud.net.cn/</a></li><li>分栏式的新闻模板：<a href="https://static-1fdf8972-67c0-42b4-8790-2021eb9134d1.bspapp.com/#/%EF%BC%8C%E8%BF%99%E4%B8%AA%E7%A4%BA%E4%BE%8B%E5%AF%B9%E5%BA%94%E7%9A%84%E6%BA%90%E7%A0%81%E5%9C%A8%EF%BC%9Ahttps://github.com/dcloudio/uni-template-news" target="_blank" rel="noreferrer">https://static-1fdf8972-67c0-42b4-8790-2021eb9134d1.bspapp.com/#/，这个示例对应的源码在：https://github.com/dcloudio/uni-template-news</a></li></ul><p>新闻示例项目，预览地址<a href="https://static-7d133019-9a7e-474a-b7c2-c01751f00ca5.bspapp.com/#/%E6%98%BE%E7%A4%BAThe" target="_blank" rel="noreferrer">https://static-7d133019-9a7e-474a-b7c2-c01751f00ca5.bspapp.com/#/显示The</a> requested file was not found on this server.</p><p>以上示例建议使用最新版的chrome、Safari、或firefox访问。可以在PC模式和手机模式分别体验。以上示例源码的运行需使用HBuilderX 2.9+</p><p>这些例子特点如下：</p><ul><li>hello uni-app使用了topWindow和leftWindow，分为上左右3栏。新闻模板使用了rightWindow区域，分为左右2栏。宽屏下点击左边的列表在右边显示详情内容。而窄屏下仍然是点击列表后新开一个页面显示详情内容。</li><li>leftWindow或rightWindow 里的页面是复用的，不需要重写新闻详情页面，支持把已有详情页面当组件放到 leftWindow或rightWindow 页面中。</li></ul><p>这套方案是已知的、最便捷的分栏式宽屏应用适配方案。</p><p><strong>H5 宽屏下 tabBar(选项卡) 的显示与隐藏</strong></p><p>如果在 PC 上不想显示 tabbar 页面可以参考 hello-uniapp，在 app 的首页加载时跳转一个 非tabbar 页, <a href="https://hellouniapp.dcloud.net.cn/" target="_blank" rel="noreferrer">hello-uniapp (opens new window)</a>的隐藏 tabbar 不是媒体查询实现的，当前页不是 tabbar 页面（是pages/component/view/view页），所以没有显示tabbar。</p><p>如果是想在有 leftwindow 等窗体的时候，隐藏 tabar 页面的 tabbar，可以用 css 实现（好处是可以和leftwindow等窗体联动）：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">.uni-app--showleftwindow</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">.uni-tabbar-bottom</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  	</span><span style="color:#79B8FF;">display</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">none</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">.uni-app--showleftwindow</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">.uni-tabbar-bottom</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  	</span><span style="color:#005CC5;">display</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">none</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>leftWindow等配置，在pages.json里进行。文档见：<a href="https://uniapp.dcloud.net.cn/collocation/pages?id=topwindow" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/collocation/pages?id=topwindow</a></p><p>pages.json 配置样例</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;globalStyle&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;topWindow&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;path&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;responsive/top-window.vue&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 指定 topWindow 页面文件</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;style&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;height&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;44px&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;leftWindow&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;path&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;responsive/left-window.vue&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 指定 leftWindow 页面文件</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;style&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;width&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">300</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;rightWindow&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;path&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;responsive/right-window.vue&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 指定 rightWindow 页面文件</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;style&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;width&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;calc(100vw - 400px)&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 页面宽度</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;matchMedia&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;minWidth&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">768</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//生效条件，当窗口宽度大于768px时显示</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;globalStyle&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;topWindow&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;path&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;responsive/top-window.vue&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 指定 topWindow 页面文件</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;style&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;height&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;44px&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;leftWindow&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;path&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;responsive/left-window.vue&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 指定 leftWindow 页面文件</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;style&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;width&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">300</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;rightWindow&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;path&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;responsive/right-window.vue&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 指定 rightWindow 页面文件</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;style&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;width&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;calc(100vw - 400px)&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 页面宽度</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;matchMedia&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;minWidth&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">768</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//生效条件，当窗口宽度大于768px时显示</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><ul><li>leftWindow等方案的使用教程</li></ul><p>如果已经有了一个为小屏设计的uni-app，在使用leftWindow等窗体适配大屏时，需理清一个思路：现有的小屏内容，放在哪个window里？</p><p>如果应用的首页是列表，二级页是详情，此时适合的做法是，将原有的小屏列表作为主window，在右边扩展rightWindow来显示详情。</p><p>以新闻示例项目为例，预览地址<a href="https://static-1fdf8972-67c0-42b4-8790-2021eb9134d1.bspapp.com/#/%E3%80%82%E8%BF%99%E4%B8%AA%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%BA%90%E7%A0%81%E5%B7%B2%E7%BB%8F%E5%86%85%E7%BD%AE%E4%BA%8EHBuilderX" target="_blank" rel="noreferrer">https://static-1fdf8972-67c0-42b4-8790-2021eb9134d1.bspapp.com/#/。这个项目的源码已经内置于HBuilderX</a> 2.9中，新建uni-app项目时选择新闻/资讯模板。</p><p>首先在这个项目的<code>pages.json</code>文件中，配置<a href="https://uniapp.dcloud.net.cn/collocation/pages?id=rightwindow" target="_blank" rel="noreferrer"><code>rightWindow</code>选项 (opens new window)</a>，放置一个新页面<code>right-window.vue</code>。</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"># pages.json</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;rightWindow&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;path&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;responsive/right-window.vue&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;style&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;width&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;calc(100vw - 450px)&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;matchMedia&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;minWidth&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">768</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># pages.json</span></span>
<span class="line"><span style="color:#032F62;">&quot;rightWindow&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;path&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;responsive/right-window.vue&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;style&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;width&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;calc(100vw - 450px)&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;matchMedia&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;minWidth&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">768</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>rightWindow</code>对应的页面不需要重写一遍新闻详情的页面逻辑，只需要引入之前的详情页面组件（详情页面<code>/pages/detail/detail</code>可自动转化为<code>pages-detail-detail</code>组件使用）。</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!--responsive/right-window.vue--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">&lt;!-- 这里将 /pages/detail/detail.nvue 页面作为一个组件使用 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">&lt;!-- 路径 “/pages/detail/detail” 转为 “pages-detail-detail” 组件 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">pages-detail-detail</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;detailPage&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">pages-detail-detail</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">//监听自定义事件，该事件由详情页列表的点击触发</span></span>
<span class="line"><span style="color:#E1E4E8;">      uni.</span><span style="color:#B392F0;">$on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;updateDetail&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 执行 detailPage组件，即：/pages/detail/detail.nvue 页面的load方法</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.$refs.detailPage.</span><span style="color:#B392F0;">load</span><span style="color:#E1E4E8;">(e.detail);</span></span>
<span class="line"><span style="color:#E1E4E8;">      })</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onLoad</span><span style="color:#E1E4E8;">() {},</span></span>
<span class="line"><span style="color:#E1E4E8;">    methods: {}</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!--responsive/right-window.vue--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- 这里将 /pages/detail/detail.nvue 页面作为一个组件使用 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- 路径 “/pages/detail/detail” 转为 “pages-detail-detail” 组件 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">pages-detail-detail</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;detailPage&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">pages-detail-detail</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">created</span><span style="color:#24292E;">(</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//监听自定义事件，该事件由详情页列表的点击触发</span></span>
<span class="line"><span style="color:#24292E;">      uni.</span><span style="color:#6F42C1;">$on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;updateDetail&#39;</span><span style="color:#24292E;">, (</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 执行 detailPage组件，即：/pages/detail/detail.nvue 页面的load方法</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.$refs.detailPage.</span><span style="color:#6F42C1;">load</span><span style="color:#24292E;">(e.detail);</span></span>
<span class="line"><span style="color:#24292E;">      })</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onLoad</span><span style="color:#24292E;">() {},</span></span>
<span class="line"><span style="color:#24292E;">    methods: {}</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>然后在新闻列表页面，处理点击列表后与rightWindow交互通信的逻辑。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// pages/news/news-page.nvue</span></span>
<span class="line"><span style="color:#B392F0;">goDetail</span><span style="color:#E1E4E8;">(detail) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._isWidescreen) { </span><span style="color:#6A737D;">//若为宽屏，则触发右侧详情页的自定义事件，通知右侧窗体刷新新闻详情</span></span>
<span class="line"><span style="color:#E1E4E8;">		uni.</span><span style="color:#B392F0;">$emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;updateDetail&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">			detail: </span><span style="color:#B392F0;">encodeURIComponent</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(detail))</span></span>
<span class="line"><span style="color:#E1E4E8;">		})</span></span>
<span class="line"><span style="color:#E1E4E8;">	} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> { </span><span style="color:#6A737D;">// 若为窄屏，则打开新窗体，在新窗体打开详情页面</span></span>
<span class="line"><span style="color:#E1E4E8;">		uni.</span><span style="color:#B392F0;">navigateTo</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">			url: </span><span style="color:#9ECBFF;">&#39;/pages/detail/detail?query=&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">encodeURIComponent</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(detail))</span></span>
<span class="line"><span style="color:#E1E4E8;">		});</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// pages/news/news-page.nvue</span></span>
<span class="line"><span style="color:#6F42C1;">goDetail</span><span style="color:#24292E;">(detail) {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">._isWidescreen) { </span><span style="color:#6A737D;">//若为宽屏，则触发右侧详情页的自定义事件，通知右侧窗体刷新新闻详情</span></span>
<span class="line"><span style="color:#24292E;">		uni.</span><span style="color:#6F42C1;">$emit</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;updateDetail&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">			detail: </span><span style="color:#6F42C1;">encodeURIComponent</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(detail))</span></span>
<span class="line"><span style="color:#24292E;">		})</span></span>
<span class="line"><span style="color:#24292E;">	} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">// 若为窄屏，则打开新窗体，在新窗体打开详情页面</span></span>
<span class="line"><span style="color:#24292E;">		uni.</span><span style="color:#6F42C1;">navigateTo</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">			url: </span><span style="color:#032F62;">&#39;/pages/detail/detail?query=&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">encodeURIComponent</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(detail))</span></span>
<span class="line"><span style="color:#24292E;">		});</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>可以看到，无需太多工作量，就可以快速把一个为手机窄屏开发的应用，快速适配为PC宽屏应用。并且以后的代码维护，仍然是同一套，当业务迭代时不需要多处升级。</p><p>rightWindow适用于分栏式应用，那leftWindow一般用于什么场景？</p><p>leftWindow比较适合放置导航页面。如果你的应用首页有很多tab和宫格导航，那么可以把它们重组，放在leftWindow作为导航。之前在手机竖屏上依靠多级tab和宫格导航的场景，可以在leftWindow里通过tree或折叠面板方式导航。</p><p>leftWindow除了适用于手机应用适配大屏，也适用于重新开发的PC应用，尤其是PC Admin管理控制台。</p><p>DCloud官方基于uni-app的pc版，推出了unicloud Admin：<a href="https://uniapp.dcloud.net.cn/uniCloud/admin" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/uniCloud/admin</a></p><p>目前的leftWindow、rightWindow、topWindow 只支持web端。计划后续在Pad App上实现该配置。小程序无法支持该配置。</p><p><strong>2. 组件级适配方案：match-media组件</strong></p><p>leftWindow等方案是页面窗体级适配方案。适于独立的页面。那么在同一个页面中，是否可以适配不同屏宽？当然可以，此时可以使用组件级适配方案。</p><p>uni-app提供了 <a href="https://uniapp.dcloud.net.cn/component/match-media" target="_blank" rel="noreferrer">match-media组件 (opens new window)</a>和配套的 <a href="https://uniapp.dcloud.net.cn/api/ui/media-query-observer" target="_blank" rel="noreferrer">uni.createMediaQueryObserver (opens new window)</a>方法。</p><p>这是一个媒体查询适配组件，可以更简单的用于动态屏幕适配。</p><p>在<code>match-media</code>组件中放置内容，并为组件指定一组 media query 媒体查询规则，如屏幕宽度。运行时，如屏幕宽度满足查询条件，这个组件就会被展示，反之则隐藏。</p><p><code>match-media</code>组件的优势包括：</p><ol><li>开发者能够更方便、显式地使用 Media Query 能力，而不是耦合在 CSS 文件中，难以复用。</li><li>能够在模板中结合数据绑定动态地使用，不仅能做到组件的显示或隐藏，在过程式 API 中可塑性更高，例如能够根据尺寸变化动态地添加 class 类名，改变样式。</li><li>能够嵌套式地使用 Media Query 组件，即能够满足局部组件布局样式的改变。</li><li>组件化之后，封装性更强，能够隔离样式、模版以及绑定在模版上的交互事件，还能够提供更高的可复用性。</li></ol><p>它的详细文档参考：<a href="https://uniapp.dcloud.net.cn/component/match-media" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/component/match-media</a></p><p>当然，开发者也可以继续使用css媒体查询来适配屏幕，或者使用一些类似mobilehide、pcshow之类的css样式。</p><p>uni-app的屏幕适配推荐方案是运行时动态适配，而不是为PC版单独条件编译（虽然您也可以通过自定义条件编译来实现单独的PC版）。这样设计的好处是在ipad等设备的浏览器上可以方便的横竖屏切换。</p><p><strong>3. 内容缩放拉伸的处理</strong></p><p>除了根据屏宽动态显示和隐藏内容，其实还有一大类屏幕适配需求，即：内容不会根据屏宽动态显示隐藏，而是缩放或拉伸。</p><p>具体来说，内容适应又有两种细分策略：</p><ol><li>局部拉伸：页面内容划分为固定区域和长宽动态适配区域，固定区域使用固定的px单位约定宽高，长宽适配区域则使用flex自动适配。当屏幕大小变化时，固定区域不变，而长宽适配区域跟着变化</li><li>等比缩放：根据页面屏幕宽度缩放。rpx其实属于这种类型。在宽屏上，rpx变大，窄屏上rpx变小。</li></ol><p>举个实际的例子，比如一个列表页面，左边有一个图标，右边是2行文字。</p><ul><li>如果使用策略1，即局部拉伸，那么左边的图标部分固定一个宽高，右边的2行文字的大小也固定，但2行文字的宽度自适应，占满屏幕右侧的空间。也就是屏宽宽度变化后，只有2行文字的宽度在变化，其他一切不变。</li><li>如果使用策略2，即等比缩放，那么整个列表均使用rpx，在宽屏上，图标变大、右边的2行文字变大，列表项行高变大。而在窄屏上，一切又都变小。</li></ul><p>策略2省事，设计师按750px屏宽出图，程序员直接按rpx写代码即可。但策略2的实际效果不如策略1好。程序员使用策略1，分析下界面，设定好局部拉伸区域，这样可以有更好的用户体验。</p><p>这里需要对rpx的使用特别强调一下。</p><p>在移动设备上也有很多屏幕宽度，设计师一般只会按照750px屏幕宽度出图。此时使用rpx的好处在于，各种移动设备的屏幕宽度差异不是很大，相对于750px微调缩放后的效果，尽可能的还原了设计师的设计。</p><p>但是，一旦脱离移动设备，在pc屏幕，或者pad横屏状态下，因为屏幕宽度远大于750了。此时rpx根据屏幕宽度变化的结果就严重脱离了预期，大的惨不忍睹。</p><p>为此，在uni-app 2.9+起，新增了 rpx 按750px做基准屏宽的生效范围控制，并且将 rpx 的默认最大适配宽度设为了 960 px。</p><p>也就是设计师按750px出具的设计图，可适配的最大屏幕宽度为960px，在这个范围内，rpx可以根据屏幕宽度缩放。一旦超过960，rpx再根据屏幕宽度缩放就变的没有意义了。按如下配置，在超过960宽的屏幕上，会按375px作为基准宽度，这是最大程度上保持界面不失真的策略。</p><p>当然这些配置您都可以自己定义调整，在 pages.json 的 globeStyle 里配置 rpx 的如下参数。</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;globalStyle&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;rpxCalcMaxDeviceWidth&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">960</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// rpx 计算所支持的最大设备宽度，单位 px，默认值为 960</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;rpxCalcBaseDeviceWidth&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">375</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// rpx 计算使用的基准设备宽度，设备实际宽度超出 rpx 计算所支持的最大设备宽度时将按基准宽度计算，单位 px，默认值为 375</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;rpxCalcIncludeWidth&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">750</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// rpx 计算特殊处理的值，始终按实际的设备宽度计算，单位 rpx，默认值为 750</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;globalStyle&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;rpxCalcMaxDeviceWidth&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">960</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// rpx 计算所支持的最大设备宽度，单位 px，默认值为 960</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;rpxCalcBaseDeviceWidth&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">375</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// rpx 计算使用的基准设备宽度，设备实际宽度超出 rpx 计算所支持的最大设备宽度时将按基准宽度计算，单位 px，默认值为 375</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;rpxCalcIncludeWidth&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">750</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// rpx 计算特殊处理的值，始终按实际的设备宽度计算，单位 rpx，默认值为 750</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>通过上述配置中的前2个，即rpxCalcMaxDeviceWidth和rpxCalcBaseDeviceWidth，即可有效解决使用了rpx后，在宽屏下界面变的奇大无比的问题。如果你不需要特别定义这2个参数的数值，则无需在<code>pages.json</code>中配置它们，保持默认的960和375即可。</p><p>但是，rpx的最大适配宽度被限定后，会带来一个新问题：如果您的代码中把750rpx当做100%来使用（官方强烈不推荐这种写法，即便是nvue不支持百分比，也应该使用flex来解决撑满问题），此时不管屏幕宽度为多少，哪怕超过了960px，您的预期仍然是要占满整个屏幕宽度，但如果按rpxCalcBaseDeviceWidth的375px的策略执行将不再占满屏宽。</p><p>此时您有两种解决方案，一种是修改代码，将里面把rpx当做百分比的代码改掉；另一种是配置rpxCalcIncludeWidth，设置某个特定数值不受rpxCalcMaxDeviceWidth约束。如上述例子中的&quot;rpxCalcIncludeWidth&quot;: 750，代表着如果写了 750rpx，始终将按屏幕宽度百分百占满来计算。</p><ul><li>关于 rpx 转 px</li></ul><p>不少开发者之前对rpx的使用过于没有节制，后来为了适配宽屏，想要改用“局部拉伸：页面内容划分为固定区域和长宽动态适配区域”的策略，此时将回归px。</p><p>比如<a href="https://static-1afcc27f-ce2f-4a6d-9416-c65a6f87d24e.bspapp.com/#/" target="_blank" rel="noreferrer">DCloud社区的宽屏适配示例 (opens new window)</a>和<a href="https://static-7d133019-9a7e-474a-b7c2-c01751f00ca5.bspapp.com/" target="_blank" rel="noreferrer">新闻模板 (opens new window)</a>都没有使用rpx。</p><p>如果想把rpx转px，可以在源码里正则替换，也可以使用三方已经写好的单位转换库。下面介绍下三方库的用法。</p><p>项目根目录新增文件 <code>postcss.config.js</code>，内容如下。则在编译时，编译器会自动转换rpx单位为px。</p><p><strong>注意：将rpx作为百分比的用法需要手动处理</strong></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// postcss.config.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;path&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  parser: </span><span style="color:#9ECBFF;">&#39;postcss-comment&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;postcss-import&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">basedir</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">importOptions</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (id.</span><span style="color:#B392F0;">startsWith</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;~@/&#39;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(p<wbr>rocess.env.</span><span style="color:#79B8FF;">UNI_INPUT_DIR</span><span style="color:#E1E4E8;">, id.</span><span style="color:#B392F0;">substr</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (id.</span><span style="color:#B392F0;">startsWith</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@/&#39;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(p<wbr>rocess.env.</span><span style="color:#79B8FF;">UNI_INPUT_DIR</span><span style="color:#E1E4E8;">, id.</span><span style="color:#B392F0;">substr</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (id.</span><span style="color:#B392F0;">startsWith</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">id.</span><span style="color:#B392F0;">startsWith</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;//&#39;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(p<wbr>rocess.env.</span><span style="color:#79B8FF;">UNI_INPUT_DIR</span><span style="color:#E1E4E8;">, id.</span><span style="color:#B392F0;">substr</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> id</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;autoprefixer&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      overrideBrowserslist: [</span><span style="color:#9ECBFF;">&quot;Android &gt;= 4&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;ios &gt;= 8&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">      remove: p<wbr>rocess.env.</span><span style="color:#79B8FF;">UNI_PLATFORM</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;h5&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 借助postcss-px-to-viewport插件，实现rpx转px，文档：https://github.com/evrone/postcss-px-to-viewport/blob/master/README_CN.md</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 以下配置，可以将rpx转换为1/2的px，如20rpx=10px，如果要调整比例，可以调整 viewportWidth 来实现</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;postcss-px-to-viewport&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      unitToConvert: </span><span style="color:#9ECBFF;">&#39;rpx&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      viewportWidth: </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      unitPrecision: </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      propList: [</span><span style="color:#9ECBFF;">&#39;*&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">      viewportUnit: </span><span style="color:#9ECBFF;">&#39;px&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      fontViewportUnit: </span><span style="color:#9ECBFF;">&#39;px&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      selectorBlackList: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">      minPixelValue: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      mediaQuery: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      replace: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      exclude: </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      include: </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      landscape: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;@dcloudio/vue-cli-plugin-uni/packages/postcss&#39;</span><span style="color:#E1E4E8;">: {}</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// postcss.config.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;path&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  parser: </span><span style="color:#032F62;">&#39;postcss-comment&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  plugins: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;postcss-import&#39;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(</span><span style="color:#E36209;">id</span><span style="color:#24292E;">, </span><span style="color:#E36209;">basedir</span><span style="color:#24292E;">, </span><span style="color:#E36209;">importOptions</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (id.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;~@/&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(p<wbr>rocess.env.</span><span style="color:#005CC5;">UNI_INPUT_DIR</span><span style="color:#24292E;">, id.</span><span style="color:#6F42C1;">substr</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (id.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@/&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(p<wbr>rocess.env.</span><span style="color:#005CC5;">UNI_INPUT_DIR</span><span style="color:#24292E;">, id.</span><span style="color:#6F42C1;">substr</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (id.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">id.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;//&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(p<wbr>rocess.env.</span><span style="color:#005CC5;">UNI_INPUT_DIR</span><span style="color:#24292E;">, id.</span><span style="color:#6F42C1;">substr</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> id</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;autoprefixer&#39;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      overrideBrowserslist: [</span><span style="color:#032F62;">&quot;Android &gt;= 4&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;ios &gt;= 8&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      remove: p<wbr>rocess.env.</span><span style="color:#005CC5;">UNI_PLATFORM</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;h5&#39;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 借助postcss-px-to-viewport插件，实现rpx转px，文档：https://github.com/evrone/postcss-px-to-viewport/blob/master/README_CN.md</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 以下配置，可以将rpx转换为1/2的px，如20rpx=10px，如果要调整比例，可以调整 viewportWidth 来实现</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;postcss-px-to-viewport&#39;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      unitToConvert: </span><span style="color:#032F62;">&#39;rpx&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      viewportWidth: </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      unitPrecision: </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      propList: [</span><span style="color:#032F62;">&#39;*&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      viewportUnit: </span><span style="color:#032F62;">&#39;px&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      fontViewportUnit: </span><span style="color:#032F62;">&#39;px&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      selectorBlackList: [],</span></span>
<span class="line"><span style="color:#24292E;">      minPixelValue: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      mediaQuery: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      replace: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      exclude: </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      include: </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      landscape: </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;@dcloudio/vue-cli-plugin-uni/packages/postcss&#39;</span><span style="color:#24292E;">: {}</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p><strong>非webkit浏览器适配</strong></p><p>uni-app理论上不限定浏览器。在HBuilderX 2.9发版时，就新闻示例项目，在chrome、Safari、firefox、edge的最新版上均测试过，可以正常使用。</p><p>一般国内的浏览器，如360浏览器、搜狗浏览器，均支持chrome内核，只要版本够新，应该都可以访问。</p><p>如果你的应用在其他PC浏览器下异常，请检查自己代码的浏览器兼容问题。</p><p>如果你发现了uni-app框架层面、内置组件有浏览器兼容问题，欢迎在github上给我们提交pr。</p><p>一般情况下，只要基础框架没有浏览器兼容问题，那么组件层面的问题也可以通过更换组件来解决。当uni-app编译到PC浏览器端时，支持所有的vue组件，包含那些操作了dom、window的ui库，比如elementUI等。</p><p><strong>一个让手机版网页临时可用于pc浏览器的方案</strong></p><p>如果你的h5版已经开发完毕，还没来得及适配pc，但想在pc上先用起来。那么可以在pc网页里使用iframe，约定好宽度，在里面套用uni-app的窄屏版。</p><p>当然还可以在iframe旁边放置二维码，提供手机版扫码地址，例如：</p><p><img src="https://raw.githubusercontent.com/caolinchao2/blogimg/main/img/ba795d0c41e31483.png" alt="img"></p><p><strong>通过electron打包为windows、mac、linux客户端</strong></p><p>有了宽屏适配，uni-app的应用就可以方便的通过electron打包为电脑客户端应用，windows、mac、linux均支持。</p><p>开发者可以随意调用electron的API，以调用更多操作系统的能力（为方便多端兼容，可以将这些特殊API写在自定义的条件编译里）</p><p>插件市场有已经封装好的一些插件，详见：<a href="https://ext.dcloud.net.cn/search?q=electron" target="_blank" rel="noreferrer">https://ext.dcloud.net.cn/search?q=electron</a></p><p><strong>响应式布局组件：uni-row</strong></p><p>流式栅格系统，随着屏幕或视口分为 24 份，可以迅速简便地创建布局。</p><p>该插件将屏幕分为五个档位：<code>&lt;768px</code>、<code>&gt;=768px</code>、<code>&gt;=992px</code>、<code>&gt;=1200px</code>、<code>&gt;=1920px</code>。</p><p>对应的可以使用<code>xs</code>、<code>sm</code>、<code>md</code>、<code>lg</code>、<code>xl</code>来控制在不同分辨率下的显示效果。详情可在插件市场查看。</p><p>插件地址：<a href="https://ext.dcloud.net.cn/plugin?id=3958" target="_blank" rel="noreferrer">https://ext.dcloud.net.cn/plugin?id=3958</a></p>`,226),o=[e];function t(r,c,i,E,y,d){return n(),a("div",null,o)}const g=s(p,[["render",t]]);export{b as __pageData,g as default};
