import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.d7c6e0b6.js";const u=JSON.parse('{"title":"定时器、时间、Math","description":"","frontmatter":{},"headers":[],"relativePath":"leadingEnd/Javascript/定时器、时间、Math.md","filePath":"leadingEnd/Javascript/定时器、时间、Math.md","lastUpdated":1720076987000}'),p={name:"leadingEnd/Javascript/定时器、时间、Math.md"},o=l(`<h1 id="定时器、时间、math" tabindex="-1">定时器、时间、Math <a class="header-anchor" href="#定时器、时间、math" aria-label="Permalink to &quot;定时器、时间、Math&quot;">​</a></h1><h2 id="一、定时器" tabindex="-1">一、定时器 <a class="header-anchor" href="#一、定时器" aria-label="Permalink to &quot;一、定时器&quot;">​</a></h2><ol><li><code>setTimeout(fn[,delay,arg1,arg2,...])</code>;</li></ol><p>后面的arg会作为参数传递给定时器函数中；</p><p>只执行一次，不用加单位，单位是毫秒；</p><p>清除Timeout定时器：clearTimeout(定时器);</p><p><strong>setTimeout的原理</strong></p><p>采用定时器需要动用红黑树，创建定时器对象和迭代等操作；</p><p>很多人为了立即异步执行一个任务，会调用<code>setTimeout(function(){},0)</code>使用0毫秒来达到效果，由于事件循环自身的特点，定时器的精确度不够。事实上，采用定时器需要动用红黑树，创建定时器对象和迭代等操作，而<code>setTimeout(fn, 0)</code>的方式较为浪费性能。实际上，<code>process.nextTick()</code>方法的操作相对较为轻量，具体代码如下：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">process.</span><span style="color:#B392F0;">nextTick</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">callback</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//on the way out, don&#39;t bother.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// it won&#39;t get fired anyway</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(process._exiting) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(tickDepth </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> process.maxTickDepth)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">maxTickWarn</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> tock </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { callback: callback };</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(process.domain) tock.domain </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> process.domain;</span></span>
<span class="line"><span style="color:#E1E4E8;">    nextTickQueue.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(tock);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(nextTickQueue.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        process.</span><span style="color:#B392F0;">_needTickCallback</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">process.</span><span style="color:#6F42C1;">nextTick</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">callback</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//on the way out, don&#39;t bother.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// it won&#39;t get fired anyway</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(process._exiting) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(tickDepth </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> process.maxTickDepth)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">maxTickWarn</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> tock </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { callback: callback };</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(process.domain) tock.domain </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> process.domain;</span></span>
<span class="line"><span style="color:#24292E;">    nextTickQueue.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(tock);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(nextTickQueue.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        process.</span><span style="color:#6F42C1;">_needTickCallback</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>每次调用<code>process.nextTick()</code>方法，只会将回调函数放入队列中，在下一轮Tick时取出执行。定时器中采用红黑树的操作时间复杂度为0(lg(n))，nextTick()的时间复杂度为0(1)。相较之下，process.nextTick()更高效。</p><p><strong>setTimeout的特性</strong></p><ol><li>setTimeout写入的毫秒数不一定是准确的，由于事件循环的机制问题，需要等待微任务执行完毕之后再执行setTimeout</li><li>setTimeout嵌套五次，至少是4毫秒，不是0毫秒</li><li>setTimeout调用的this指向是window</li></ol><h3 id="setinterval" tabindex="-1">setInterval <a class="header-anchor" href="#setinterval" aria-label="Permalink to &quot;setInterval&quot;">​</a></h3><p><code>setInterval(函数，时间(毫秒))</code>;</p><p>间歇性执行，每隔相同的时间执行一次；</p><p>常用于倒计时；清除：<code>clearInterval(定时器)</code>;</p><p>每个定时器开启的时候，都有一个自己的id数字，如果需要清除定时器，则需要清除定时器的id； 返回值就是定时器的id值；</p><p>定时器如果不清除，会一直占用内存，可以设置一个变量，用来保存这个定时器，之后设置一个清除定时器的方法；</p><h3 id="requestanimationframe" tabindex="-1">requestAnimationFrame <a class="header-anchor" href="#requestanimationframe" aria-label="Permalink to &quot;requestAnimationFrame&quot;">​</a></h3><p><code>requestAnimationFrame()</code> IE10+ 不需要设置间隔，会自动调用； 案例：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">step</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    a</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">requestAnimationFrame</span><span style="color:#E1E4E8;">(step)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//如果需要传入参数</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// requestAnimationFrame(()=&gt;step(1))</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">step</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">step</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    a</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">requestAnimationFrame</span><span style="color:#24292E;">(step)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//如果需要传入参数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// requestAnimationFrame(()=&gt;step(1))</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">step</span><span style="color:#24292E;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>兼容处理：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">window.requestAnimationFrame){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">requestAnimationFrame</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">fn</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">setTimeout</span><span style="color:#E1E4E8;">(fn,</span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">// 因为刷新频率是16.7ms执行一次，所以是17;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">window.requestAnimationFrame){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">requestAnimationFrame</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">fn</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(fn,</span><span style="color:#005CC5;">17</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">// 因为刷新频率是16.7ms执行一次，所以是17;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="二、时间对象" tabindex="-1">二、时间对象 <a class="header-anchor" href="#二、时间对象" aria-label="Permalink to &quot;二、时间对象&quot;">​</a></h2><h3 id="获取时间" tabindex="-1">获取时间 <a class="header-anchor" href="#获取时间" aria-label="Permalink to &quot;获取时间&quot;">​</a></h3><blockquote><p>创建时间，返回一个对象，这个对象里面就有各种属性和方法，时间对象时需要实例化获取方式来获取</p></blockquote><ol><li><p><code>new Date()</code>; 获取当前时间；</p></li><li><p><code>new Date(&quot;2018/4/29 12:00:00&quot;)</code>; 设置时间；中划线，逗号(不用加引号)，或者时间戳；</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">+new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">()   </span><span style="color:#6A737D;">// 添加一个+号会变成时间戳</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">+new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">()   </span><span style="color:#6A737D;">// 添加一个+号会变成时间戳</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><code>getFullYear()</code>; 年，获取到的内置对象是当前变量中的日期</p></li><li><p><code>getMonth()+1</code>； 月，月份是0-11</p></li><li><p><code>getDate()</code>; 日；</p></li><li><p><code>getDay()</code>； 星期，取值0-6,0表示周日；</p></li><li><p><code>getHours()</code>; 时间；</p></li><li><p><code>getMinutes()</code>; 分钟；</p></li><li><p><code>getSeconds()</code>; 秒；</p></li><li><p><code>getMilliseconds()</code> 获取毫秒；</p></li><li><p><code>getTime()</code>；从1970年1月1日到当前设置好的时间的毫秒；（常用）</p></li><li><p><code>Date.parse()</code>；将一个格式的时间转为一个时间戳，毫秒；（可以直接放入new Date，也可以写格式时间，格式为：&#39;月/日/年&#39;）</p></li><li><p><code>setTime()</code> 设置时间戳，也可以直接放进new Date里面；</p></li></ol><p>简写：+new Date() 也是一个时间戳；</p><h3 id="设置时间" tabindex="-1">设置时间 <a class="header-anchor" href="#设置时间" aria-label="Permalink to &quot;设置时间&quot;">​</a></h3><p>date.setDate(date.getDate() + 7);</p><p>设置时间需要先获取时间；</p><p>有<code>get</code>的属性都可以<code>set</code>；<strong>set有容错能力</strong>，如：61秒就是1分1秒；</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 设置日期加7天；</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> date </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">();   </span><span style="color:#6A737D;">// 从声明开始就已经定死了,一直是该时间;</span></span>
<span class="line"><span style="color:#E1E4E8;">date.</span><span style="color:#B392F0;">setDate</span><span style="color:#E1E4E8;">(date.</span><span style="color:#B392F0;">getDate</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 设置日期加7天；</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> date </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">date.</span><span style="color:#B392F0;">setDate</span><span style="color:#E1E4E8;">(date.</span><span style="color:#B392F0;">getDate</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 设置日期加7天；</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> date </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">();   </span><span style="color:#6A737D;">// 从声明开始就已经定死了,一直是该时间;</span></span>
<span class="line"><span style="color:#24292E;">date.</span><span style="color:#6F42C1;">setDate</span><span style="color:#24292E;">(date.</span><span style="color:#6F42C1;">getDate</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 设置日期加7天；</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> date </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">date.</span><span style="color:#6F42C1;">setDate</span><span style="color:#24292E;">(date.</span><span style="color:#6F42C1;">getDate</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="获取星期和月数" tabindex="-1">获取星期和月数 <a class="header-anchor" href="#获取星期和月数" aria-label="Permalink to &quot;获取星期和月数&quot;">​</a></h3><ul><li><p><strong>获取这个月有多少天</strong>：<code>new Date(y,m,0).getDate()</code>；</p></li><li><p><strong>获取当前是这个月的周几</strong>：<code>new Date(y,m,0).getDay()</code>；</p></li><li><p><strong>获取这个月的第一天是周几</strong>：<code>new Date(y,m-1,0).getDay()+1</code>;</p><p>先获取上一个月多少天，再获取星期时加一天就是这个月的第一天；</p></li><li><p>如果想<strong>获取当前月份最后一天</strong>，可以直接设置日为0，<code>setDate(0)</code></p></li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> date</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">//获取当前时间</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> y</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">date.</span><span style="color:#B392F0;">getFullYear</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">//获取年</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> m</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">date.</span><span style="color:#B392F0;">getMonth</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">//获取月</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> d</span><span style="color:#F97583;">=new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">(y,m,</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">getDate</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">//获取当前这个月有多少天</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> week</span><span style="color:#F97583;">=new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">(y,m</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">getDay</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">//获取当前这个月第一天是周几</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(week </span><span style="color:#F97583;">&gt;=</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">){week</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">}; </span><span style="color:#6A737D;">//7+1会为8，所以等于0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> date</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//获取当前时间</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> y</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">date.</span><span style="color:#6F42C1;">getFullYear</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//获取年</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> m</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">date.</span><span style="color:#6F42C1;">getMonth</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">//获取月</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> d</span><span style="color:#D73A49;">=new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(y,m,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">getDate</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//获取当前这个月有多少天</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> week</span><span style="color:#D73A49;">=new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(y,m</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">getDay</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">//获取当前这个月第一天是周几</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(week </span><span style="color:#D73A49;">&gt;=</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">){week</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">}; </span><span style="color:#6A737D;">//7+1会为8，所以等于0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="格式化时间" tabindex="-1">格式化时间 <a class="header-anchor" href="#格式化时间" aria-label="Permalink to &quot;格式化时间&quot;">​</a></h3><h4 id="英文状态" tabindex="-1">英文状态 <a class="header-anchor" href="#英文状态" aria-label="Permalink to &quot;英文状态&quot;">​</a></h4><p>字符串格式时间：</p><p>toString(); Thu May 02 2019 01:24:10 GMT+0800 (中国标准时间)</p><p>toDateString(); Thu May 02 2019；</p><p>toTimeString(); 01:24:56 GMT+0800；</p><p>toUTCString(); 显示世界时间；</p><h4 id="转成本地时间" tabindex="-1">转成本地时间 <a class="header-anchor" href="#转成本地时间" aria-label="Permalink to &quot;转成本地时间&quot;">​</a></h4><p>toLocaleString(); //2019-7-11 21:49:52</p><p>toLocaleDateString(); //2019-7-11</p><p>toLocaleTimeString(); //上午9:00:00;</p><h4 id="设置一个倒计时" tabindex="-1">设置一个倒计时 <a class="header-anchor" href="#设置一个倒计时" aria-label="Permalink to &quot;设置一个倒计时&quot;">​</a></h4><p>计算两个时间的间隔，用第一个时间减去第二个时间；</p><ol><li><p>计算出目标时间和现在时间的间隔多少毫秒，用目标时间减去现在的时间，之后再除以一千显示为秒；</p><p>计算倒计时剩下的时间：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> leftTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">(enddate)) </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">//计算剩余的毫秒数</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> days </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(leftTime </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">//计算剩余的天数</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> hours </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(leftTime </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">//计算剩余的小时</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> minutes </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(leftTime </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">);</span><span style="color:#6A737D;">//计算剩余的分钟</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> seconds </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(leftTime </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">);</span><span style="color:#6A737D;">//计算剩余的秒数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1242626</span></span>
<span class="line"><span style="color:#E1E4E8;">m </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span></span>
<span class="line"><span style="color:#E1E4E8;">h </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span></span>
<span class="line"><span style="color:#E1E4E8;">t </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">24</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> leftTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(enddate)) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//计算剩余的毫秒数</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> days </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(leftTime </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">//计算剩余的天数</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> hours </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(leftTime </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">//计算剩余的小时</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> minutes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(leftTime </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span><span style="color:#6A737D;">//计算剩余的分钟</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> seconds </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(leftTime </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span><span style="color:#6A737D;">//计算剩余的秒数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1242626</span></span>
<span class="line"><span style="color:#24292E;">m </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span></span>
<span class="line"><span style="color:#24292E;">h </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span></span>
<span class="line"><span style="color:#24292E;">t </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">24</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li><li><p>根据计算出的时间写出时间戳，也可以再加入补零的操作</p></li><li><p>倒计时思想：</p><ul><li>获取时间，根据时间得到年月日，时分秒</li><li>补零</li><li>用一个定时器让时间跑起来</li></ul></li></ol><h3 id="计算一个循环花了多长时间" tabindex="-1">计算一个循环花了多长时间 <a class="header-anchor" href="#计算一个循环花了多长时间" aria-label="Permalink to &quot;计算一个循环花了多长时间&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> startTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getTime</span><span style="color:#E1E4E8;">()   </span><span style="color:#6A737D;">// 记录一个开始时间毫秒</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> i</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;i</span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">;i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">){}</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> endTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getTime</span><span style="color:#E1E4E8;">()   </span><span style="color:#6A737D;">// 记录一个结束时间毫秒</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(endTime </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> startTime)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 当然也可以使用console.time来获取;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> startTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">()   </span><span style="color:#6A737D;">// 记录一个开始时间毫秒</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;i</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">;i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){}</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> endTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">()   </span><span style="color:#6A737D;">// 记录一个结束时间毫秒</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(endTime </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> startTime)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 当然也可以使用console.time来获取;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="时间的比较" tabindex="-1">时间的比较 <a class="header-anchor" href="#时间的比较" aria-label="Permalink to &quot;时间的比较&quot;">​</a></h3><p>不要直接通过时间对比，是不相等的，想要相等，可以对比时间戳</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> date </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;2019/6/1&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> date2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;2019/6/1&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(date </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> date2)  </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(date.</span><span style="color:#B392F0;">getTime</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> date2.</span><span style="color:#B392F0;">getTime</span><span style="color:#E1E4E8;">())  </span><span style="color:#6A737D;">//true</span></span>
<span class="line"><span style="color:#6A737D;">// +号可以快速进行Number转换成时间戳</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> date </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;2019/6/1&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> date2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;2019/6/1&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(date </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> date2)  </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(date.</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> date2.</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">())  </span><span style="color:#6A737D;">//true</span></span>
<span class="line"><span style="color:#6A737D;">// +号可以快速进行Number转换成时间戳</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>时间插件： <a href="http://momentjs.cn/" target="_blank" rel="noreferrer">http://momentjs.cn/</a></p><p>比moment打包更小的插件：dayjs <a href="https://github.com/iamkun/dayjs" target="_blank" rel="noreferrer">https://github.com/iamkun/dayjs</a></p><h3 id="常见bug" tabindex="-1">常见bug <a class="header-anchor" href="#常见bug" aria-label="Permalink to &quot;常见bug&quot;">​</a></h3><p>如果获取最后一天出错了，跳了月份，可以设置setMonth(28)即可，或者29，再getMonth+1</p><h3 id="时间格式化函数" tabindex="-1">时间格式化函数 <a class="header-anchor" href="#时间格式化函数" aria-label="Permalink to &quot;时间格式化函数&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">(value)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Y</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data.</span><span style="color:#B392F0;">getFullYear</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">M</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data.</span><span style="color:#B392F0;">getMonth</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">R</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data.</span><span style="color:#B392F0;">getDate</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> h </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data.</span><span style="color:#B392F0;">getHours</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> m </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data.</span><span style="color:#B392F0;">getMinutes</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data.</span><span style="color:#B392F0;">getSeconds</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">d</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(d).</span><span style="color:#B392F0;">padStart</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;2&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;0&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#79B8FF;">Y</span><span style="color:#9ECBFF;">}-\${</span><span style="color:#B392F0;">f</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">M</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}-\${</span><span style="color:#B392F0;">f</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">R</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">} \${</span><span style="color:#B392F0;">f</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">h</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}:\${</span><span style="color:#B392F0;">f</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">m</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}:\${</span><span style="color:#B392F0;">f</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">s</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}\`</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#E36209;">value</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(value)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Y</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data.</span><span style="color:#6F42C1;">getFullYear</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">M</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data.</span><span style="color:#6F42C1;">getMonth</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">R</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data.</span><span style="color:#6F42C1;">getDate</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> h </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data.</span><span style="color:#6F42C1;">getHours</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> m </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data.</span><span style="color:#6F42C1;">getMinutes</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data.</span><span style="color:#6F42C1;">getSeconds</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#E36209;">d</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(d).</span><span style="color:#6F42C1;">padStart</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`\${</span><span style="color:#005CC5;">Y</span><span style="color:#032F62;">}-\${</span><span style="color:#6F42C1;">f</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">M</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}-\${</span><span style="color:#6F42C1;">f</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">R</span><span style="color:#032F62;">)</span><span style="color:#032F62;">} \${</span><span style="color:#6F42C1;">f</span><span style="color:#032F62;">(</span><span style="color:#24292E;">h</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}:\${</span><span style="color:#6F42C1;">f</span><span style="color:#032F62;">(</span><span style="color:#24292E;">m</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}:\${</span><span style="color:#6F42C1;">f</span><span style="color:#032F62;">(</span><span style="color:#24292E;">s</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}\`</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="三、math" tabindex="-1">三、Math <a class="header-anchor" href="#三、math" aria-label="Permalink to &quot;三、Math&quot;">​</a></h2><ol><li><code>Math.abs()</code>；取绝对值，负数是他的相反数，正数还是为正；</li><li><code>Math.floor()</code>；向下取整，取最向下最接近的整数；</li><li><code>Math.ceil()</code>；向上取整，取最向上最接近的整数；</li><li><code>Math.round()</code>；四舍五入；-1.6为-2；</li><li><code>Math.min()</code>；取一组数的最小值，括号填写一组数；</li><li><code>Math.max()</code>；取一组数的最大值，括号填写一组数；</li><li><code>Math.pow()</code>；两个值，n的m次方；</li><li><code>Math.sqrt()</code>；开平方</li><li><code>Math.PI</code> 圆周率，没有小括号;</li><li><code>Math.sin()/Math.cos()</code>; 正弦/余弦</li><li><code>Math.trunc(i)</code> : 直接去除小数部分；只对number有效；</li></ol><p>Math.max和Math.min接收多个数字返回最大、最小数，</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">53</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 53</span></span>
<span class="line"><span style="color:#6A737D;">// 以数组的形式放</span></span>
<span class="line"><span style="color:#E1E4E8;">Math.max.</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(Math, [</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">53</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">53</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 53</span></span>
<span class="line"><span style="color:#6A737D;">// 以数组的形式放</span></span>
<span class="line"><span style="color:#24292E;">Math.max.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(Math, [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">53</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="math-random" tabindex="-1">Math.random <a class="header-anchor" href="#math-random" aria-label="Permalink to &quot;Math.random&quot;">​</a></h3><p><code>Math.random()</code>；取随机数，取出来的是0-1的随机小数；</p><p>套用下面的公式取某个整数范围内随机选择的一个值</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">值 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">floor</span><span style="color:#E1E4E8;">(Math.</span><span style="color:#B392F0;">random</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> 可能值的总数 </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> 第一个可能的值)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">值 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">random</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 可能值的总数 </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> 第一个可能的值)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>取n-m的随机数：<code>Math.random()*(m-n+1)+n；</code></p><p>比如3-10的随机数：<code>Math.random()*8+3</code>；</p><p>理解随机数：<code>Math.ceil(Math.random()*6)</code> 取1-6；向上取整不会包括0；因为不会到6，所以是6；</p><h3 id="数字精度解决" tabindex="-1">数字精度解决 <a class="header-anchor" href="#数字精度解决" aria-label="Permalink to &quot;数字精度解决&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 按照有效数字位数进行四舍五入，默认6位有效数字</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">signFigures</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">num</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">rank</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">num) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> num;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sign</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> num </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">abs</span><span style="color:#E1E4E8;">(num);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> num </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> sign;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">temp</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> rank </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">floor</span><span style="color:#E1E4E8;">(Math.</span><span style="color:#B392F0;">log10</span><span style="color:#E1E4E8;">(number));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> ans;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (temp </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    ans </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseFloat</span><span style="color:#E1E4E8;">(number.</span><span style="color:#B392F0;">toFixed</span><span style="color:#E1E4E8;">(temp));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (temp </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    ans </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">round</span><span style="color:#E1E4E8;">(number </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">pow</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, temp)) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> temp;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    ans </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">round</span><span style="color:#E1E4E8;">(number);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (ans </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> sign);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">signFigures</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0.1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.2</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 0.3</span></span>
<span class="line"><span style="color:#B392F0;">signFigures</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0.56</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 56</span></span>
<span class="line"><span style="color:#B392F0;">signFigures</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0.57</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 57</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 按照有效数字位数进行四舍五入，默认6位有效数字</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">signFigures</span><span style="color:#24292E;">(</span><span style="color:#E36209;">num</span><span style="color:#24292E;">, </span><span style="color:#E36209;">rank</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">num) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> num;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sign</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">abs</span><span style="color:#24292E;">(num);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> sign;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">temp</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rank </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">log10</span><span style="color:#24292E;">(number));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> ans;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (temp </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    ans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseFloat</span><span style="color:#24292E;">(number.</span><span style="color:#6F42C1;">toFixed</span><span style="color:#24292E;">(temp));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (temp </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    ans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">round</span><span style="color:#24292E;">(number </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">pow</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, temp)) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> temp;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    ans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">round</span><span style="color:#24292E;">(number);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (ans </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> sign);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">signFigures</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0.1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 0.3</span></span>
<span class="line"><span style="color:#6F42C1;">signFigures</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0.56</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 56</span></span>
<span class="line"><span style="color:#6F42C1;">signFigures</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0.57</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 57</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,75),e=[o];function t(c,r,y,E,i,F){return a(),n("div",null,e)}const b=s(p,[["render",t]]);export{u as __pageData,b as default};
