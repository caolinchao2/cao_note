import{_ as e,o as t,c as o,Q as a}from"./chunks/framework.b5309610.js";const u=JSON.parse('{"title":"内存泄露","description":"","frontmatter":{},"headers":[],"relativePath":"interview/浏览器/内存泄露.md","filePath":"interview/浏览器/内存泄露.md","lastUpdated":null}'),i={name:"interview/浏览器/内存泄露.md"},c=a('<h1 id="内存泄露" tabindex="-1">内存泄露 <a class="header-anchor" href="#内存泄露" aria-label="Permalink to &quot;内存泄露&quot;">​</a></h1><ul><li>意外的全局变量: 无法被回收</li><li>定时器: 未被正确关闭，导致所引用的外部变量无法被释放</li><li>事件监听: 没有正确销毁 (低版本浏览器可能出现)</li><li>闭包: 会导致父级中的变量无法被释放</li><li><code>dom</code> 引用: <code>dom</code> 元素被删除时，内存中的引用未被正确清空</li></ul><blockquote><p>可用 <code>chrome</code> 中的 <code>timeline</code> 进行内存标记，可视化查看内存的变化情况，找出异常点。</p></blockquote>',3),l=[c];function _(d,r,n,s,m,p){return t(),o("div",null,l)}const f=e(i,[["render",_]]);export{u as __pageData,f as default};
