import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.b5309610.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"leadingEnd/css/定位,浮动,BFC.md","filePath":"leadingEnd/css/定位,浮动,BFC.md","lastUpdated":1720076987000}'),p={name:"leadingEnd/css/定位,浮动,BFC.md"},o=n(`<h2 id="一、-相对定位position-relative" tabindex="-1">一、 相对定位position：relative <a class="header-anchor" href="#一、-相对定位position-relative" aria-label="Permalink to &quot;一、 相对定位position：relative&quot;">​</a></h2><ol><li><p>只给一个元素加相对定位，不加具体的位置，对这个元素本身没有任何影响。</p></li><li><p>相对于原来的位置进行定位的，原来的位置还占位。</p></li><li><p>配合top,left,right,bottom使用</p></li><li><p>提升层级</p></li></ol><h2 id="二、提升层级" tabindex="-1">二、提升层级 <a class="header-anchor" href="#二、提升层级" aria-label="Permalink to &quot;二、提升层级&quot;">​</a></h2><p>z-index:改变元素层级，只用在加了定位的元素上，</p><p>数值越高层级越大，正常文档流层级是0。</p><p><strong>不生效的原因</strong></p><ul><li>没有设置定位</li><li>子级的层级永远不可能高于父级；</li></ul><h2 id="三、绝对定位-position-absolute" tabindex="-1">三、绝对定位：position: absolute; <a class="header-anchor" href="#三、绝对定位-position-absolute" aria-label="Permalink to &quot;三、绝对定位：position: absolute;&quot;">​</a></h2><ol><li><p>相对于初始包含块定位，根据用户代理的不同，初始包含块可能是html，也可能是画布，脱离文档流不占位。</p></li><li><p>配合top,left,right,bottom使用</p></li><li><p>通常情况下绝对定位和相对定位配合使用，子元素用绝对定位，父元素用相对定位（子绝父相）。</p></li><li><p>加了绝对定位的元素，先看父元素有没有定位（绝对定位，相对定位，固定定位），如果父元素有定位，就相对于父元素定位，父元素没有定位，就看爷爷，爷爷有定位就相对于爷爷定位</p></li><li><p>提升层级</p></li></ol><h2 id="四、-固定定位-position-fixed。" tabindex="-1">四、 固定定位：position：fixed。 <a class="header-anchor" href="#四、-固定定位-position-fixed。" aria-label="Permalink to &quot;四、 固定定位：position：fixed。&quot;">​</a></h2><ol><li>相对于浏览器进行定位，定位之后脱离文档流不占位。</li><li>提升层级</li><li>配合top,left,right,bottom使用</li></ol><p>添加fixed需要添加-webkit-transform: translateZ(0) 防止webkit抖动；</p><h2 id="五、粘合定位" tabindex="-1">五、粘合定位 <a class="header-anchor" href="#五、粘合定位" aria-label="Permalink to &quot;五、粘合定位&quot;">​</a></h2><p>position: sticky；</p><p>是relative和fixed的结合体；</p><p>当元素在屏幕内，表现为relative，当溢出屏幕，表现为fixed；</p><p>作用：特别适合导航的跟随定位效果；</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">nav</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">position</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">-webkit-sticky</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">position</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">sticky</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">top</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">/* 必须加 */</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">nav</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">position</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">-webkit-sticky</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">position</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">sticky</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">top</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">/* 必须加 */</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="六、-脱离文档流的属性" tabindex="-1">六、 脱离文档流的属性 <a class="header-anchor" href="#六、-脱离文档流的属性" aria-label="Permalink to &quot;六、 脱离文档流的属性&quot;">​</a></h2><ol><li>float:left;</li><li>float:right;</li><li>position:absolute;</li><li>position:fixed;</li></ol><p>浮动，脱离文档流但是不脱离文本流。</p><p>定位：既脱离文档流，也脱离文本流。</p><p>脱离文档流的元素就不区分块还是内联，都可以设置宽高等盒模型的样式。</p><h2 id="七、-bfc-块级格式化上下文" tabindex="-1">七、 BFC(块级格式化上下文) <a class="header-anchor" href="#七、-bfc-块级格式化上下文" aria-label="Permalink to &quot;七、 BFC(块级格式化上下文)&quot;">​</a></h2><h3 id="什么是bfc" tabindex="-1">什么是BFC <a class="header-anchor" href="#什么是bfc" aria-label="Permalink to &quot;什么是BFC&quot;">​</a></h3><p>Block Formatting Context：指页面中的一个渲染区域，并且拥有一套渲染规则，他决定了其子标签如何定位，以及与其他标签的相互关系和作用。</p><h3 id="如何生成bfc" tabindex="-1">如何生成BFC <a class="header-anchor" href="#如何生成bfc" aria-label="Permalink to &quot;如何生成BFC&quot;">​</a></h3><p>既然BFC是一块渲染区域，那这块渲染区域到底在哪，它又是有多大，这些由生成BFC的标签决定，CSS2.1中规定满足下列CSS声明之一的标签便会生成BFC。</p><ol><li>根标签 html</li><li>float的值不为none(为left/right)。</li><li>overflow的值不为visible（为hidden/scroll/auto都行）</li><li>display的值为inline-block</li><li>position的值为absolute或fixed</li></ol><h3 id="bfc的特性" tabindex="-1">BFC的特性 <a class="header-anchor" href="#bfc的特性" aria-label="Permalink to &quot;BFC的特性&quot;">​</a></h3><ol><li>内部的标签会在垂直方向上一个接一个的放置</li><li>垂直方向上的距离由margin决定，属于同一个BFC的两个相邻标签的margin会发生重叠</li><li>每个标签的左外边距与包含块的左边界相接触（从左向右），即使浮动标签也是如此。</li><li>BFC的区域不会与float的标签区域重叠</li><li>计算BFC的高度时，浮动子标签也参与计算</li><li>BFC就是页面上的一个隔离的独立容器，容器里面的子标签不会影响到外面标签，反之亦然</li></ol><h3 id="bfc解决的问题" tabindex="-1">BFC解决的问题 <a class="header-anchor" href="#bfc解决的问题" aria-label="Permalink to &quot;BFC解决的问题&quot;">​</a></h3><p>1）外边距折叠 (margin重叠的问题)</p><p>2）自适应两栏或三栏布局。</p><p>3）防止字体环绕</p><p>4）清除浮动</p><p>5）margin塌陷问题</p><h2 id="八、元素的互相转换" tabindex="-1">八、元素的互相转换 <a class="header-anchor" href="#八、元素的互相转换" aria-label="Permalink to &quot;八、元素的互相转换&quot;">​</a></h2><ol><li><p>转成块元素：<code>display:block</code>;</p></li><li><p>转成内联元素：<code>display:inline</code>;</p></li><li><p>转成内联块元素：<code>display:inline-block</code>;</p></li></ol><p>拓展知识：</p><p>块元素尽量不要转换内联块元素，为了使块元素在一行显示，用浮动。</p><h2 id="九、图片下面空白距离清除方法" tabindex="-1">九、图片下面空白距离清除方法 <a class="header-anchor" href="#九、图片下面空白距离清除方法" aria-label="Permalink to &quot;九、图片下面空白距离清除方法&quot;">​</a></h2><blockquote><p>图片默认最下边有空白，因为默认图片是基线对齐的</p></blockquote><ol><li>给图片转块：display:block;</li><li>给图片设置垂直对齐方式：</li></ol><p>vertical-align: top/middle/bottom;</p><p>居上，中，下对齐，默认是baseline，基线对齐；</p><ol start="3"><li>给图片的父元素设置：font-size:0;line-height:0;（常用）</li></ol><p>缺点：文字字号和行高都是0，需要重新设置文字的字号和行高。</p><h2 id="十、对齐方式" tabindex="-1">十、对齐方式 <a class="header-anchor" href="#十、对齐方式" aria-label="Permalink to &quot;十、对齐方式&quot;">​</a></h2><ol><li><p>水平对齐方式：text-align：center；</p><p>针对行内元素和文字设置居中对齐的，给块元素设置居中，里面的行内元素，文字元素都会居中对齐。</p></li><li><p>块元素居中对齐：margin：0 auto；</p><p>块元素在有宽度的情况下居中对齐。</p><p>auto可以用到很多的地方，表示自动的意思。margin值设置三个的时候，中间写auto代表三个值；</p></li><li><p>内联元素，内联块元素居中对齐：vertical-align: top/middle/bottom;，也可以写px/em/rem</p><p>不影响块级元素中的内容对齐，它只针对行内元素或行内块元素，特别是行内块元素，通常用来控制图片/表单与文字的对齐。</p><p>让一行文字在一个块中，垂直居中；对图片也管用；</p><p>vertical-align属性是参照line-height来设置的;</p></li></ol><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">display:</span><span style="color:#85E89D;">table-cell</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#85E89D;">vertical-align</span><span style="color:#E1E4E8;">: middle；</span></span>
<span class="line"><span style="color:#85E89D;">text-align</span><span style="color:#E1E4E8;">: center;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">display:</span><span style="color:#22863A;">table-cell</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#22863A;">vertical-align</span><span style="color:#24292E;">: middle；</span></span>
<span class="line"><span style="color:#22863A;">text-align</span><span style="color:#24292E;">: center;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="4"><li><p>vertical-align: middle，需要给两个内联元素都设置，如果解决不了，也可以使用ex单位，一个ex是字体的x-height字体尺寸的一半，比如：vertical-align: -.5ex；也可以直接居中；</p><p>如果是12px的字体想要垂直居中，可以尝试line-height: 2.4ex;</p></li></ol><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">// 两个内联元素都加上</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&#39;vertical-align:middle&#39;</span><span style="color:#FDAEB7;font-style:italic;">/</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">span</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&#39;vertical-align:middle&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">/</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">// 两个内联元素都加上</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">label</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&#39;vertical-align:middle&#39;</span><span style="color:#B31D28;font-style:italic;">/</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">span</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&#39;vertical-align:middle&#39;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">/</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="十一、浮动" tabindex="-1">十一、浮动 <a class="header-anchor" href="#十一、浮动" aria-label="Permalink to &quot;十一、浮动&quot;">​</a></h2><ol><li><p>浮动元素按照指定的方向发生浮动，碰到父元素的边缘或者相邻的浮动元素就停下来了。</p></li><li><p>浮动元素脱离文档流不占位。不脱离文本流。</p><p>文档流（普通流）：文档中可显示对象在排列时所占用的位置，从上到下排列，从左到右排列</p></li><li><p>浮动元素的父元素高度撑不起来，父元素高度为0，下面的元素往上移动。(问题)</p></li></ol><p>单个div不浮动，可以在单个div设置<code>&lt;p style=&quot;clear:both&quot;;&gt;&lt;/p&gt;</code>。</p><table><thead><tr><th>属性</th><th></th><th>作用</th><th></th></tr></thead><tbody><tr><td>float：</td><td></td><td>浮动</td><td></td></tr><tr><td>float-left</td><td></td><td>浮动到父元素的左边</td><td></td></tr><tr><td>float-right</td><td></td><td>浮动到父元素的右边</td><td></td></tr></tbody></table><h3 id="清除浮动的办法" tabindex="-1">清除浮动的办法 <a class="header-anchor" href="#清除浮动的办法" aria-label="Permalink to &quot;清除浮动的办法&quot;">​</a></h3><ol><li><p>给浮动元素的父元素加高度，</p><p>很多的html页面都是内容撑开的高度，不便于后期维护，不推荐使用。</p></li><li><p>给浮动元素的父元素加overflow：hidden、scroll、auto 都可以。</p><p>缺点：会不兼容ie6，解决办法：后面添加_zoom:1;（了解）</p><p>当添加了overflow在父元素没有高度的时候，会计算子元素的高度，知道子元素的高度之后，就会自动，撑起父元素。</p><p>一般用auto，auto自动添加滚动条，scroll会默认有滚动条，影响直观。</p></li><li><p>在浮动元素的后面，加一个空的块元素，一定要加块元素，给块元素起class名，并给这个块元素设置样式clear:both(会导致代码冗长)</p><p>缺点：如果有100个地方写了浮动，就需要加一百个div。</p></li><li><p>给浮动元素的父元素加class名，给class加上以下属性；</p></li></ol><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* clearfix是自己取得，可以随便取。 */</span></span>
<span class="line"><span style="color:#B392F0;">.clearfix:after</span><span style="color:#E1E4E8;">{ </span><span style="color:#6A737D;">/* 伪类元素，在以clearfix的为名的class标签结尾添加内容*/</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">content</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">;      </span><span style="color:#6A737D;">/* 引号中间不要写内容 */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">display</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">block</span><span style="color:#E1E4E8;">;    </span><span style="color:#6A737D;">/* 为了使添加的内容需要时块，转块 */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">clear</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">both</span><span style="color:#E1E4E8;">;    </span><span style="color:#6A737D;">/* 清除浮动的属性。 */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">height</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;     </span><span style="color:#6A737D;">/* 低版本浏览器默认生成的高度和行高需要清除，也可以不加 */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">line-height</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;     </span><span style="color:#6A737D;">/* 如果内容添加文字，高度会被撑起来，需要设置行高为0 */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">visibility</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">hidden</span><span style="color:#E1E4E8;">;    </span><span style="color:#6A737D;">/* 隐藏元素用户，肉眼看不见，可以不写。 */</span></span>
<span class="line"><span style="color:#E1E4E8;">}     </span><span style="color:#6A737D;">/* 高度行高和隐藏可以不写，就怕浏览器有默认样式，最好写上。 */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">.clearfix</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;"> *</span><span style="color:#79B8FF;">zoom</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;     </span><span style="color:#6A737D;">/* 写了伪元素之后再ie7及以下不兼容了，添加上 */</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* clearfix是自己取得，可以随便取。 */</span></span>
<span class="line"><span style="color:#6F42C1;">.clearfix:after</span><span style="color:#24292E;">{ </span><span style="color:#6A737D;">/* 伪类元素，在以clearfix的为名的class标签结尾添加内容*/</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">content</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">;      </span><span style="color:#6A737D;">/* 引号中间不要写内容 */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">display</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">block</span><span style="color:#24292E;">;    </span><span style="color:#6A737D;">/* 为了使添加的内容需要时块，转块 */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">clear</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">both</span><span style="color:#24292E;">;    </span><span style="color:#6A737D;">/* 清除浮动的属性。 */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;     </span><span style="color:#6A737D;">/* 低版本浏览器默认生成的高度和行高需要清除，也可以不加 */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">line-height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;     </span><span style="color:#6A737D;">/* 如果内容添加文字，高度会被撑起来，需要设置行高为0 */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">visibility</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">hidden</span><span style="color:#24292E;">;    </span><span style="color:#6A737D;">/* 隐藏元素用户，肉眼看不见，可以不写。 */</span></span>
<span class="line"><span style="color:#24292E;">}     </span><span style="color:#6A737D;">/* 高度行高和隐藏可以不写，就怕浏览器有默认样式，最好写上。 */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.clearfix</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;"> *</span><span style="color:#005CC5;">zoom</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;     </span><span style="color:#6A737D;">/* 写了伪元素之后再ie7及以下不兼容了，添加上 */</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ol start="5"><li>给父元素加浮动，缺点：脱离了文档流，导致其他内容显示不对位置了。</li></ol><p>清楚浮动：</p><p>1.加高度，2.overflow，3.加块设clear:both，4.clearfix，5.父元素浮动。</p><h2 id="十二、overflow" tabindex="-1">十二、overflow： <a class="header-anchor" href="#十二、overflow" aria-label="Permalink to &quot;十二、overflow：&quot;">​</a></h2><ol><li><code>overflow:hidden</code> 溢出隐藏</li><li><code>overflow:scroll</code> 加滚动条</li><li><code>overflow：auto</code> 溢出加滚动条，不溢出不加滚动条</li><li><code>overflow：visible</code> 默认值</li></ol>`,65),e=[o];function t(i,r,c,d,y,E){return a(),l("div",null,e)}const u=s(p,[["render",t]]);export{b as __pageData,u as default};
