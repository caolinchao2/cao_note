import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.d7c6e0b6.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"serverSide/Python/基本数据类型格式与运算符.md","filePath":"serverSide/Python/基本数据类型格式与运算符.md","lastUpdated":1721987715000}'),p={name:"serverSide/Python/基本数据类型格式与运算符.md"},o=l(`<h2 id="基本数据类型格式与运算符" tabindex="-1"><strong>基本数据类型格式与运算符</strong> <a class="header-anchor" href="#基本数据类型格式与运算符" aria-label="Permalink to &quot;**基本数据类型格式与运算符**&quot;">​</a></h2><h3 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h3><p>基于各类数据容器的特点，它们的应用场景如下</p><ol><li>列表:一批数据，可修改、可重复的存储场景</li><li>元组:一批数据，不可修改、可重复的存储场景</li><li>字符串:一串字符串的存储场景</li><li>集合:一批数据，去重存储场景</li><li>字典:批数据，可用Key检索Value的存储场景</li></ol><h4 id="字符串" tabindex="-1">字符串 <a class="header-anchor" href="#字符串" aria-label="Permalink to &quot;字符串&quot;">​</a></h4><p>#字符串为什么被称之为数据容器呢？</p><p>#字符串可以看做是字符的容器，支持下标索引特性</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;123456789&#39;</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(str[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]) </span><span style="color:#6A737D;">#12345678  输出第一个到倒数第二个的所有字符</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(str[::</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]) </span><span style="color:#6A737D;">#字符串翻转</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(str[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">:]) </span><span style="color:#6A737D;">#3456789 #输出从第三个开始后的所有字符</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(str[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">]) </span><span style="color:#6A737D;"># 258 输出从第二个开始到第九个且每隔3个的字符（步长为3）</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#123456789123456789  输出字符串两次</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;hello</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">cao&#39;</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;"># 使用反斜杠(\\)+n转义特殊字符 \\n换行</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">r</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#DBEDFF;">hello</span><span style="color:#85E89D;font-weight:bold;">\\n</span><span style="color:#DBEDFF;">cao</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#hello\\ncao   # 在字符串前面添加一个 r，表示原始字符串，不会发生转义</span></span>
<span class="line"><span style="color:#6A737D;">#字符串的方法</span></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39; hello world&#39;</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(s.upper()) </span><span style="color:#6A737D;">#大写</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(s.lower()) </span><span style="color:#6A737D;">#小写</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(s.capitalize()) </span><span style="color:#6A737D;">#首字母大写</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(s.title()) </span><span style="color:#6A737D;">#每个单词首字母大写</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(s.index(</span><span style="color:#9ECBFF;">&#39;e&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">#查找字符串在字符串中的位置</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(s.replace(</span><span style="color:#9ECBFF;">&#39;world&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;python&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">#替换字符串</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(s.split(</span><span style="color:#9ECBFF;">&#39; &#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">#分割字符串</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(s.strip()) </span><span style="color:#6A737D;">#去除首尾空格</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(s.count(</span><span style="color:#9ECBFF;">&#39;o&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">#统计字符串中o出现的次数</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;123456789&#39;</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(str[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]) </span><span style="color:#6A737D;">#12345678  输出第一个到倒数第二个的所有字符</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(str[::</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]) </span><span style="color:#6A737D;">#字符串翻转</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(str[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">:]) </span><span style="color:#6A737D;">#3456789 #输出从第三个开始后的所有字符</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(str[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]) </span><span style="color:#6A737D;"># 258 输出从第二个开始到第九个且每隔3个的字符（步长为3）</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#123456789123456789  输出字符串两次</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;hello</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">cao&#39;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;"># 使用反斜杠(\\)+n转义特殊字符 \\n换行</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">r</span><span style="color:#032F62;">&#39;hello</span><span style="color:#22863A;font-weight:bold;">\\n</span><span style="color:#032F62;">cao&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#hello\\ncao   # 在字符串前面添加一个 r，表示原始字符串，不会发生转义</span></span>
<span class="line"><span style="color:#6A737D;">#字符串的方法</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39; hello world&#39;</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(s.upper()) </span><span style="color:#6A737D;">#大写</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(s.lower()) </span><span style="color:#6A737D;">#小写</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(s.capitalize()) </span><span style="color:#6A737D;">#首字母大写</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(s.title()) </span><span style="color:#6A737D;">#每个单词首字母大写</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(s.index(</span><span style="color:#032F62;">&#39;e&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">#查找字符串在字符串中的位置</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(s.replace(</span><span style="color:#032F62;">&#39;world&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;python&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">#替换字符串</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(s.split(</span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">#分割字符串</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(s.strip()) </span><span style="color:#6A737D;">#去除首尾空格</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(s.count(</span><span style="color:#032F62;">&#39;o&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">#统计字符串中o出现的次数</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="数字" tabindex="-1">数字 <a class="header-anchor" href="#数字" aria-label="Permalink to &quot;数字&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">随机数</span></span>
<span class="line"><span style="color:#e1e4e8;">import random</span></span>
<span class="line"><span style="color:#e1e4e8;">print(random.randint(1,100))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">随机数</span></span>
<span class="line"><span style="color:#24292e;">import random</span></span>
<span class="line"><span style="color:#24292e;">print(random.randint(1,100))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="数学函数" tabindex="-1">数学函数 <a class="header-anchor" href="#数学函数" aria-label="Permalink to &quot;数学函数&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">函数</th><th style="text-align:left;">返回值 ( 描述 )</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://www.runoob.com/python3/python3-func-number-abs.html" target="_blank" rel="noreferrer">abs(x)</a></td><td style="text-align:left;">返回数字的绝对值，如abs(-10) 返回 10</td></tr><tr><td style="text-align:left;"><a href="https://www.runoob.com/python3/python3-func-number-ceil.html" target="_blank" rel="noreferrer">ceil(x)</a></td><td style="text-align:left;">返回数字的上入整数，如math.ceil(4.1) 返回 5</td></tr><tr><td style="text-align:left;">cmp(x, y)</td><td style="text-align:left;">如果 x &lt; y 返回 -1, 如果 x == y 返回 0, 如果 x &gt; y 返回 1。 <strong>Python 3 已废弃，使用 (x&gt;y)-(x&lt;y) 替换</strong>。</td></tr><tr><td style="text-align:left;"><a href="https://www.runoob.com/python3/python3-func-number-exp.html" target="_blank" rel="noreferrer">exp(x)</a></td><td style="text-align:left;">返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045</td></tr><tr><td style="text-align:left;"><a href="https://www.runoob.com/python3/python3-func-number-fabs.html" target="_blank" rel="noreferrer">fabs(x)</a></td><td style="text-align:left;">以浮点数形式返回数字的绝对值，如math.fabs(-10) 返回10.0</td></tr><tr><td style="text-align:left;"><a href="https://www.runoob.com/python3/python3-func-number-floor.html" target="_blank" rel="noreferrer">floor(x)</a></td><td style="text-align:left;">返回数字的下舍整数，如math.floor(4.9)返回 4</td></tr><tr><td style="text-align:left;"><a href="https://www.runoob.com/python3/python3-func-number-log.html" target="_blank" rel="noreferrer">log(x)</a></td><td style="text-align:left;">如math.log(math.e)返回1.0,math.log(100,10)返回2.0</td></tr><tr><td style="text-align:left;"><a href="https://www.runoob.com/python3/python3-func-number-log10.html" target="_blank" rel="noreferrer">log10(x)</a></td><td style="text-align:left;">返回以10为基数的x的对数，如math.log10(100)返回 2.0</td></tr><tr><td style="text-align:left;"><a href="https://www.runoob.com/python3/python3-func-number-max.html" target="_blank" rel="noreferrer">max(x1, x2,...)</a></td><td style="text-align:left;">返回给定参数的最大值，参数可以为序列。</td></tr><tr><td style="text-align:left;"><a href="https://www.runoob.com/python3/python3-func-number-min.html" target="_blank" rel="noreferrer">min(x1, x2,...)</a></td><td style="text-align:left;">返回给定参数的最小值，参数可以为序列。</td></tr><tr><td style="text-align:left;"><a href="https://www.runoob.com/python3/python3-func-number-modf.html" target="_blank" rel="noreferrer">modf(x)</a></td><td style="text-align:left;">返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。</td></tr><tr><td style="text-align:left;"><a href="https://www.runoob.com/python3/python3-func-number-pow.html" target="_blank" rel="noreferrer">pow(x, y)</a></td><td style="text-align:left;">x**y 运算后的值。</td></tr><tr><td style="text-align:left;">[round(x <a href="https://www.runoob.com/python3/python3-func-number-round.html" target="_blank" rel="noreferrer">,n])</a></td><td style="text-align:left;">返回浮点数 x 的四舍五入值，如给出 n 值，则代表舍入到小数点后的位数。<strong>其实准确的说是保留值将保留到离上一位更近的一端。</strong></td></tr><tr><td style="text-align:left;"><a href="https://www.runoob.com/python3/python3-func-number-sqrt.html" target="_blank" rel="noreferrer">sqrt(x)</a></td><td style="text-align:left;">返回数字x的平方根。</td></tr></tbody></table><h4 id="列表" tabindex="-1">列表 <a class="header-anchor" href="#列表" aria-label="Permalink to &quot;列表&quot;">​</a></h4><ol><li><p>列表的下标索引是什么?</p><p>列表的每一个元素，都有编号称之为下标索引从前向后的方向，编号从0开始递增从后向前的方向，编号从-1开始递减</p></li><li><p>如何通过下标索引取出对应位置的元素呢?</p><p>列表[下标]，即可取出</p></li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">list1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">list2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">list1.append(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">#末尾添加</span></span>
<span class="line"><span style="color:#E1E4E8;">list1.extend(list2) </span><span style="color:#6A737D;">#将容器内容依次取出，依次在末尾添加</span></span>
<span class="line"><span style="color:#E1E4E8;">list1.insert(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">999</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#指定位置添加</span></span>
<span class="line"><span style="color:#F97583;">del</span><span style="color:#E1E4E8;"> list1[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">#删除指定下标</span></span>
<span class="line"><span style="color:#E1E4E8;">list1.pop(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#删除指定下标</span></span>
<span class="line"><span style="color:#E1E4E8;">list1.remove(</span><span style="color:#79B8FF;">999</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#删除第一个符合的元素</span></span>
<span class="line"><span style="color:#6A737D;"># list1.clear() #清空列表</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(list1.count(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">#统计该元素出现的次数</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(list1.index(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">#查找指定元素在列表的下表，找不到报错valueError</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(list1)) </span><span style="color:#6A737D;">#统计列表有多少个元素</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(list1)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">list1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">list2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">list1.append(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">#末尾添加</span></span>
<span class="line"><span style="color:#24292E;">list1.extend(list2) </span><span style="color:#6A737D;">#将容器内容依次取出，依次在末尾添加</span></span>
<span class="line"><span style="color:#24292E;">list1.insert(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">999</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#指定位置添加</span></span>
<span class="line"><span style="color:#D73A49;">del</span><span style="color:#24292E;"> list1[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">#删除指定下标</span></span>
<span class="line"><span style="color:#24292E;">list1.pop(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#删除指定下标</span></span>
<span class="line"><span style="color:#24292E;">list1.remove(</span><span style="color:#005CC5;">999</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#删除第一个符合的元素</span></span>
<span class="line"><span style="color:#6A737D;"># list1.clear() #清空列表</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(list1.count(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">#统计该元素出现的次数</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(list1.index(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">#查找指定元素在列表的下表，找不到报错valueError</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(list1)) </span><span style="color:#6A737D;">#统计列表有多少个元素</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(list1)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="布尔值" tabindex="-1">布尔值 <a class="header-anchor" href="#布尔值" aria-label="Permalink to &quot;布尔值&quot;">​</a></h4><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">True</span></span>
<span class="line"><span style="color:#E1E4E8;">b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 比较运算符</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)   </span><span style="color:#6A737D;"># True</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;"># False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 逻辑运算符</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> b)  </span><span style="color:#6A737D;"># False</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> b)   </span><span style="color:#6A737D;"># True</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> a)    </span><span style="color:#6A737D;"># False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 类型转换</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(a))   </span><span style="color:#6A737D;"># 1</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">float</span><span style="color:#E1E4E8;">(b)) </span><span style="color:#6A737D;"># 0.0</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(a))   </span><span style="color:#6A737D;"># &quot;True&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span></span>
<span class="line"><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 比较运算符</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)   </span><span style="color:#6A737D;"># True</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;"># False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 逻辑运算符</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> b)  </span><span style="color:#6A737D;"># False</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> b)   </span><span style="color:#6A737D;"># True</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> a)    </span><span style="color:#6A737D;"># False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 类型转换</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(a))   </span><span style="color:#6A737D;"># 1</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">float</span><span style="color:#24292E;">(b)) </span><span style="color:#6A737D;"># 0.0</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(a))   </span><span style="color:#6A737D;"># &quot;True&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="元组" tabindex="-1">元组 <a class="header-anchor" href="#元组" aria-label="Permalink to &quot;元组&quot;">​</a></h4><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">1.</span><span style="color:#E1E4E8;">元组的本质</span></span>
<span class="line"><span style="color:#E1E4E8;">	够存储多个数据 并且能够方便的获取整体或者局部，但是元组中已存在的数据不能够轻易更改</span></span>
<span class="line"><span style="color:#79B8FF;">2.</span><span style="color:#E1E4E8;">元组的使用方法</span></span>
<span class="line"><span style="color:#E1E4E8;">	元组和列表的使用方法类似用小括号括起来，内部的数据类型用逗号隔开逗号后面空一格开始下一个数据类型的编写</span></span>
<span class="line"><span style="color:#E1E4E8;">	元组中的排序方式和正常生活中有点不太一样是从0开始排序的所以只要再当前数字上减一即可</span></span>
<span class="line"><span style="color:#E1E4E8;">与字符串一样，元组的元素不能修改。</span></span>
<span class="line"><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">、元组也可以被索引和切片，方法一样。</span></span>
<span class="line"><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">、注意构造包含 </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> 或 </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> 个元素的元组的特殊语法规则。</span></span>
<span class="line"><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">、元组也可以使用</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">操作符进行拼接</span></span>
<span class="line"><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">、元祖不可修改可以修改里面的list</span></span>
<span class="line"><span style="color:#E1E4E8;">基本使用</span></span>
<span class="line"><span style="color:#E1E4E8;">tuple1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;b&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;c&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;d&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;e&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">tuple2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(tuple1[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">]) </span><span style="color:#6A737D;">#(&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(tuple1 </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> tuple2) </span><span style="color:#6A737D;">#(&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, 1, 2, 3, 4)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">list_tuple </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">tuple</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">#列表转元组</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">(list_tuple))  </span><span style="color:#6A737D;">#元组取值跟列表差不多</span></span>
<span class="line"><span style="color:#E1E4E8;">yz </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(yz.index(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">#查找元素的索引</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(yz.count(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">#查找元素的个数</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(yz)) </span><span style="color:#6A737D;">#查找元素的个数</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1.</span><span style="color:#24292E;">元组的本质</span></span>
<span class="line"><span style="color:#24292E;">	够存储多个数据 并且能够方便的获取整体或者局部，但是元组中已存在的数据不能够轻易更改</span></span>
<span class="line"><span style="color:#005CC5;">2.</span><span style="color:#24292E;">元组的使用方法</span></span>
<span class="line"><span style="color:#24292E;">	元组和列表的使用方法类似用小括号括起来，内部的数据类型用逗号隔开逗号后面空一格开始下一个数据类型的编写</span></span>
<span class="line"><span style="color:#24292E;">	元组中的排序方式和正常生活中有点不太一样是从0开始排序的所以只要再当前数字上减一即可</span></span>
<span class="line"><span style="color:#24292E;">与字符串一样，元组的元素不能修改。</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;">、元组也可以被索引和切片，方法一样。</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;">、注意构造包含 </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> 或 </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> 个元素的元组的特殊语法规则。</span></span>
<span class="line"><span style="color:#005CC5;">5</span><span style="color:#24292E;">、元组也可以使用</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">操作符进行拼接</span></span>
<span class="line"><span style="color:#005CC5;">6</span><span style="color:#24292E;">、元祖不可修改可以修改里面的list</span></span>
<span class="line"><span style="color:#24292E;">基本使用</span></span>
<span class="line"><span style="color:#24292E;">tuple1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;d&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;e&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">tuple2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(tuple1[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]) </span><span style="color:#6A737D;">#(&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(tuple1 </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> tuple2) </span><span style="color:#6A737D;">#(&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, 1, 2, 3, 4)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">list</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">list_tuple </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">tuple</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">list</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">#列表转元组</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">(list_tuple))  </span><span style="color:#6A737D;">#元组取值跟列表差不多</span></span>
<span class="line"><span style="color:#24292E;">yz </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(yz.index(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">#查找元素的索引</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(yz.count(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">#查找元素的个数</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(yz)) </span><span style="color:#6A737D;">#查找元素的个数</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h4 id="set集合" tabindex="-1">set集合 <a class="header-anchor" href="#set集合" aria-label="Permalink to &quot;set集合&quot;">​</a></h4><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#集合的特点</span></span>
<span class="line"><span style="color:#6A737D;">#1.集合中的元素是无序的（不支持下标取值）</span></span>
<span class="line"><span style="color:#6A737D;">#2.集合中的元素不能重复</span></span>
<span class="line"><span style="color:#6A737D;">#3.可以容纳任意类型</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#集合的方法</span></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">s.add(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#添加元素 {1,2,3,4,5}</span></span>
<span class="line"><span style="color:#E1E4E8;">s.remove(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#删除元素 {1,2,3,5}</span></span>
<span class="line"><span style="color:#E1E4E8;">s.pop() </span><span style="color:#6A737D;">#随机删除一个元素 {1,2,3}</span></span>
<span class="line"><span style="color:#E1E4E8;">s.clear() </span><span style="color:#6A737D;">#清空 {}</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(s.difference({</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">})) </span><span style="color:#6A737D;">#差集 {4}</span></span>
<span class="line"><span style="color:#E1E4E8;">s.difference_update({</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">}) </span><span style="color:#6A737D;">#差集 在集合1中，删除集合2中的元素，集合1被修改，集合2不被修改 {4}</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(s.union({</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">})) </span><span style="color:#6A737D;">#得到一个新集合，集合1，2不变</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(s)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">set1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">(set1)) </span><span style="color:#6A737D;">#&lt;class &#39;set&#39;&gt;</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(set1) </span><span style="color:#6A737D;">#{1, 2, 3, 4}  set会去重</span></span>
<span class="line"><span style="color:#E1E4E8;">list1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">121</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(list1))) </span><span style="color:#6A737D;"># 利用set列表去重</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># set可以进行集合运算</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;abracadabra&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;alacazam&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(a)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> b)     </span><span style="color:#6A737D;"># a 和 b 的差集</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> b)     </span><span style="color:#6A737D;"># a 和 b 的并集</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> b)     </span><span style="color:#6A737D;"># a 和 b 的交集</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">^</span><span style="color:#E1E4E8;"> b)     </span><span style="color:#6A737D;"># a 和 b 中不同时存在的元素</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6A737D;">#集合的特点</span></span>
<span class="line"><span style="color:#6A737D;">#1.集合中的元素是无序的（不支持下标取值）</span></span>
<span class="line"><span style="color:#6A737D;">#2.集合中的元素不能重复</span></span>
<span class="line"><span style="color:#6A737D;">#3.可以容纳任意类型</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#集合的方法</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">s.add(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#添加元素 {1,2,3,4,5}</span></span>
<span class="line"><span style="color:#24292E;">s.remove(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#删除元素 {1,2,3,5}</span></span>
<span class="line"><span style="color:#24292E;">s.pop() </span><span style="color:#6A737D;">#随机删除一个元素 {1,2,3}</span></span>
<span class="line"><span style="color:#24292E;">s.clear() </span><span style="color:#6A737D;">#清空 {}</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(s.difference({</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">})) </span><span style="color:#6A737D;">#差集 {4}</span></span>
<span class="line"><span style="color:#24292E;">s.difference_update({</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">}) </span><span style="color:#6A737D;">#差集 在集合1中，删除集合2中的元素，集合1被修改，集合2不被修改 {4}</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(s.union({</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">})) </span><span style="color:#6A737D;">#得到一个新集合，集合1，2不变</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(s)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">set1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">(set1)) </span><span style="color:#6A737D;">#&lt;class &#39;set&#39;&gt;</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(set1) </span><span style="color:#6A737D;">#{1, 2, 3, 4}  set会去重</span></span>
<span class="line"><span style="color:#24292E;">list1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">121</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">list</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(list1))) </span><span style="color:#6A737D;"># 利用set列表去重</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># set可以进行集合运算</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;abracadabra&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;alacazam&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(a)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> b)     </span><span style="color:#6A737D;"># a 和 b 的差集</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> b)     </span><span style="color:#6A737D;"># a 和 b 的并集</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> b)     </span><span style="color:#6A737D;"># a 和 b 的交集</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">^</span><span style="color:#24292E;"> b)     </span><span style="color:#6A737D;"># a 和 b 中不同时存在的元素</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h4 id="dictionary-字典" tabindex="-1">Dictionary（字典） <a class="header-anchor" href="#dictionary-字典" aria-label="Permalink to &quot;Dictionary（字典）&quot;">​</a></h4><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">列表是有序的对象集合，字典是无序的对象集合。两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。</span></span>
<span class="line"><span style="color:#E1E4E8;">字典是一种映射类型，字典用 { } 标识，它是一个无序的 键(key) : 值(value) 的集合。</span></span>
<span class="line"><span style="color:#E1E4E8;">键(key)必须使用不可变类型。</span></span>
<span class="line"><span style="color:#E1E4E8;">在同一个字典中，键(key)必须是唯一的。</span></span>
<span class="line"><span style="color:#E1E4E8;">obg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;二狗&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">:age}</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(obg[</span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">])  </span><span style="color:#6A737D;"># 取值</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(obg))  </span><span style="color:#6A737D;"># 获取长度</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> obg , </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> obg) </span><span style="color:#6A737D;"># in obg里是否包含name  not in 不包含</span></span>
<span class="line"><span style="color:#E1E4E8;">obg.update(obg2)  </span><span style="color:#6A737D;"># 合并</span></span>
<span class="line"><span style="color:#E1E4E8;">obg.pop(</span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#取出对应的值，并删除键值对 {b:2,c:3,d:4}</span></span>
<span class="line"><span style="color:#E1E4E8;">obg.clear() </span><span style="color:#6A737D;">#清空</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;"> (tinydict.keys())   </span><span style="color:#6A737D;"># 输出所有键</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;"> (tinydict.values()) </span><span style="color:#6A737D;"># 输出所有值</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">列表是有序的对象集合，字典是无序的对象集合。两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。</span></span>
<span class="line"><span style="color:#24292E;">字典是一种映射类型，字典用 { } 标识，它是一个无序的 键(key) : 值(value) 的集合。</span></span>
<span class="line"><span style="color:#24292E;">键(key)必须使用不可变类型。</span></span>
<span class="line"><span style="color:#24292E;">在同一个字典中，键(key)必须是唯一的。</span></span>
<span class="line"><span style="color:#24292E;">obg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;二狗&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">:age}</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(obg[</span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">])  </span><span style="color:#6A737D;"># 取值</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(obg))  </span><span style="color:#6A737D;"># 获取长度</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> obg , </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> obg) </span><span style="color:#6A737D;"># in obg里是否包含name  not in 不包含</span></span>
<span class="line"><span style="color:#24292E;">obg.update(obg2)  </span><span style="color:#6A737D;"># 合并</span></span>
<span class="line"><span style="color:#24292E;">obg.pop(</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#取出对应的值，并删除键值对 {b:2,c:3,d:4}</span></span>
<span class="line"><span style="color:#24292E;">obg.clear() </span><span style="color:#6A737D;">#清空</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;"> (tinydict.keys())   </span><span style="color:#6A737D;"># 输出所有键</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;"> (tinydict.values()) </span><span style="color:#6A737D;"># 输出所有值</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="数据类型转换" tabindex="-1">数据类型转换 <a class="header-anchor" href="#数据类型转换" aria-label="Permalink to &quot;数据类型转换&quot;">​</a></h3><h4 id="隐式转换" tabindex="-1">隐式转换 <a class="header-anchor" href="#隐式转换" aria-label="Permalink to &quot;隐式转换&quot;">​</a></h4><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">num_int </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">123</span></span>
<span class="line"><span style="color:#E1E4E8;">num_flo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1.23</span></span>
<span class="line"><span style="color:#E1E4E8;">num_new </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> num_int </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> num_flo  </span><span style="color:#6A737D;">#num_new: 值为: 124.23</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">num_int </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123</span></span>
<span class="line"><span style="color:#24292E;">num_flo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1.23</span></span>
<span class="line"><span style="color:#24292E;">num_new </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> num_int </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> num_flo  </span><span style="color:#6A737D;">#num_new: 值为: 124.23</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="显示转换" tabindex="-1">显示转换 <a class="header-anchor" href="#显示转换" aria-label="Permalink to &quot;显示转换&quot;">​</a></h4><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">int</span></span>
<span class="line"><span style="color:#E1E4E8;">x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;2&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#2</span></span>
<span class="line"><span style="color:#E1E4E8;">y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2.8</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#2</span></span>
<span class="line"><span style="color:#79B8FF;">float</span></span>
<span class="line"><span style="color:#E1E4E8;">x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">float</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#1.0</span></span>
<span class="line"><span style="color:#E1E4E8;">x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">float</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;4.2&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#4.2</span></span>
<span class="line"><span style="color:#79B8FF;">str</span></span>
<span class="line"><span style="color:#E1E4E8;">z </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3.0</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;"># z 输出结果为 &#39;3.0&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">int</span></span>
<span class="line"><span style="color:#24292E;">x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#2</span></span>
<span class="line"><span style="color:#24292E;">y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2.8</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#2</span></span>
<span class="line"><span style="color:#005CC5;">float</span></span>
<span class="line"><span style="color:#24292E;">x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">float</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#1.0</span></span>
<span class="line"><span style="color:#24292E;">x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">float</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;4.2&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#4.2</span></span>
<span class="line"><span style="color:#005CC5;">str</span></span>
<span class="line"><span style="color:#24292E;">z </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3.0</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;"># z 输出结果为 &#39;3.0&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="以下几个内置的函数可以执行数据类型之间的转换。这些函数返回一个新的对象-表示转换的值。" tabindex="-1">以下几个内置的函数可以执行数据类型之间的转换。这些函数返回一个新的对象，表示转换的值。 <a class="header-anchor" href="#以下几个内置的函数可以执行数据类型之间的转换。这些函数返回一个新的对象-表示转换的值。" aria-label="Permalink to &quot;以下几个内置的函数可以执行数据类型之间的转换。这些函数返回一个新的对象，表示转换的值。&quot;">​</a></h4><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>int(x [,base])</td><td>将x转换为一个整数</td></tr><tr><td>float(x)</td><td>将x转换到一个浮点数</td></tr><tr><td>complex(real [,imag])</td><td>创建一个复数</td></tr><tr><td>str(x)</td><td>将对象 x 转换为字符串</td></tr><tr><td>repr(x)</td><td>将对象 x 转换为表达式字符串</td></tr><tr><td>eval(str)</td><td>用来计算在字符串中的有效Python表达式,并返回一个对象</td></tr><tr><td>tuple(s)</td><td>将序列 s 转换为一个元组</td></tr><tr><td>list(s)</td><td>将序列 s 转换为一个列表</td></tr><tr><td>set(s)</td><td>转换为可变集合</td></tr><tr><td>dict(d)</td><td>创建一个字典。d 必须是一个 (key, value)元组序列。</td></tr><tr><td>frozenset(s)</td><td>转换为不可变集合</td></tr><tr><td>chr(x)</td><td>将一个整数转换为一个字符</td></tr><tr><td>ord(x)</td><td>将一个字符转换为它的整数值</td></tr><tr><td>hex(x)</td><td>将一个整数转换为一个十六进制字符串</td></tr><tr><td>oct(x)</td><td>将一个整数转换为一个八进制字符串</td></tr><tr><td>max()</td><td>容器最大元素</td></tr><tr><td>min()</td><td>容器最小元素</td></tr><tr><td>sorted(list1,reverse=True)</td><td>True降序排序,False升序排序</td></tr></tbody></table><h3 id="格式化输出" tabindex="-1">格式化输出 <a class="header-anchor" href="#格式化输出" aria-label="Permalink to &quot;格式化输出&quot;">​</a></h3><p>转义字符</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">\\n 换行</span></span>
<span class="line"><span style="color:#e1e4e8;">\\t 格式化</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">\\n 换行</span></span>
<span class="line"><span style="color:#24292e;">\\t 格式化</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">方法一</span></span>
<span class="line"><span style="color:#e1e4e8;">info = 您订单尾号位%s的%s快递已经由[前台代收]，请尽快领取。如有问题请联系%s或短信回复N</span></span>
<span class="line"><span style="color:#e1e4e8;">print（info % （2827， 京东， 12345678900））</span></span>
<span class="line"><span style="color:#e1e4e8;">方法二fmoat f</span></span>
<span class="line"><span style="color:#e1e4e8;">print(f&#39;您订单尾号位{变量}的{变量}快递已经由[前台代收]，请尽快领取。如有问题请联系{变量}或短信回复N&#39;)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">方法一</span></span>
<span class="line"><span style="color:#24292e;">info = 您订单尾号位%s的%s快递已经由[前台代收]，请尽快领取。如有问题请联系%s或短信回复N</span></span>
<span class="line"><span style="color:#24292e;">print（info % （2827， 京东， 12345678900））</span></span>
<span class="line"><span style="color:#24292e;">方法二fmoat f</span></span>
<span class="line"><span style="color:#24292e;">print(f&#39;您订单尾号位{变量}的{变量}快递已经由[前台代收]，请尽快领取。如有问题请联系{变量}或短信回复N&#39;)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;运算符&quot;">​</a></h2><h3 id="算术运算符" tabindex="-1">算术运算符 <a class="header-anchor" href="#算术运算符" aria-label="Permalink to &quot;算术运算符&quot;">​</a></h3><p>以下假设变量 <strong>a=10</strong>，变量 <strong>b=21</strong>：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">+</td><td style="text-align:left;">加 - 两个对象相加</td><td style="text-align:left;">a + b 输出结果 31</td></tr><tr><td style="text-align:left;">-</td><td style="text-align:left;">减 - 得到负数或是一个数减去另一个数</td><td style="text-align:left;">a - b 输出结果 -11</td></tr><tr><td style="text-align:left;">*</td><td style="text-align:left;">乘 - 两个数相乘或是返回一个被重复若干次的字符串</td><td style="text-align:left;">a * b 输出结果 210</td></tr><tr><td style="text-align:left;">/</td><td style="text-align:left;">除 - x 除以 y</td><td style="text-align:left;">b / a 输出结果 2.1</td></tr><tr><td style="text-align:left;">%</td><td style="text-align:left;">取模 - 返回除法的余数</td><td style="text-align:left;">b % a 输出结果 1</td></tr><tr><td style="text-align:left;">**</td><td style="text-align:left;">幂 - 返回x的y次幂</td><td style="text-align:left;">a**b 为10的21次方</td></tr><tr><td style="text-align:left;">//</td><td style="text-align:left;">取整除 - 往小的方向取整数</td><td style="text-align:left;"><code>&gt;&gt;&gt; 9//2 4 &gt;&gt;&gt; -9//2 -5</code></td></tr></tbody></table><h3 id="比较运算符" tabindex="-1">比较运算符 <a class="header-anchor" href="#比较运算符" aria-label="Permalink to &quot;比较运算符&quot;">​</a></h3><p>以下假设变量a为10，变量b为20：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">==</td><td style="text-align:left;">等于 - 比较对象是否相等</td><td style="text-align:left;">(a == b) 返回 False。</td></tr><tr><td style="text-align:left;">!=</td><td style="text-align:left;">不等于 - 比较两个对象是否不相等</td><td style="text-align:left;">(a != b) 返回 True。</td></tr><tr><td style="text-align:left;">&gt;</td><td style="text-align:left;">大于 - 返回x是否大于y</td><td style="text-align:left;">(a &gt; b) 返回 False。</td></tr><tr><td style="text-align:left;">&lt;</td><td style="text-align:left;">小于 - 返回x是否小于y。所有比较运算符返回1表示真，返回0表示假。这分别与特殊的变量True和False等价。注意，这些变量名的大写。</td><td style="text-align:left;">(a &lt; b) 返回 True。</td></tr><tr><td style="text-align:left;">&gt;=</td><td style="text-align:left;">大于等于 - 返回x是否大于等于y。</td><td style="text-align:left;">(a &gt;= b) 返回 False。</td></tr><tr><td style="text-align:left;">&lt;=</td><td style="text-align:left;">小于等于 - 返回x是否小于等于y。</td><td style="text-align:left;">(a &lt;= b) 返回 True。</td></tr></tbody></table><h3 id="赋值运算符" tabindex="-1">赋值运算符 <a class="header-anchor" href="#赋值运算符" aria-label="Permalink to &quot;赋值运算符&quot;">​</a></h3><p>以下假设变量a为10，变量b为20：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">=</td><td style="text-align:left;">简单的赋值运算符</td><td style="text-align:left;">c = a + b 将 a + b 的运算结果赋值为 c</td></tr><tr><td style="text-align:left;">+=</td><td style="text-align:left;">加法赋值运算符</td><td style="text-align:left;">c += a 等效于 c = c + a</td></tr><tr><td style="text-align:left;">-=</td><td style="text-align:left;">减法赋值运算符</td><td style="text-align:left;">c -= a 等效于 c = c - a</td></tr><tr><td style="text-align:left;">*=</td><td style="text-align:left;">乘法赋值运算符</td><td style="text-align:left;">c *= a 等效于 c = c * a</td></tr><tr><td style="text-align:left;">/=</td><td style="text-align:left;">除法赋值运算符</td><td style="text-align:left;">c /= a 等效于 c = c / a</td></tr><tr><td style="text-align:left;">%=</td><td style="text-align:left;">取模赋值运算符</td><td style="text-align:left;">c %= a 等效于 c = c % a</td></tr><tr><td style="text-align:left;">**=</td><td style="text-align:left;">幂赋值运算符</td><td style="text-align:left;">c **= a 等效于 c = c ** a</td></tr><tr><td style="text-align:left;">//=</td><td style="text-align:left;">取整除赋值运算符</td><td style="text-align:left;">c //= a 等效于 c = c // a</td></tr><tr><td style="text-align:left;">:=</td><td style="text-align:left;">海象运算符，可在表达式内部为变量赋值。<strong>Python3.8 版本新增运算符</strong>。</td><td style="text-align:left;">在这个示例中，赋值表达式可以避免调用 len() 两次:<code>if (n := len(a)) &gt; 10: print(f&quot;List is too long ({n} elements, expected &lt;= 10)&quot;)</code></td></tr></tbody></table><h3 id="位运算符" tabindex="-1">位运算符 <a class="header-anchor" href="#位运算符" aria-label="Permalink to &quot;位运算符&quot;">​</a></h3><p>按位运算符是把数字看作二进制来进行计算的。Python中的按位运算法则如下：</p><p>下表中变量 a 为 60，b 为 13二进制格式如下：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">011</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1100</span></span>
<span class="line"><span style="color:#E1E4E8;">b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0000</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1101</span></span>
<span class="line"><span style="color:#FDAEB7;font-style:italic;">----------------</span><span style="color:#F97583;">-</span></span>
<span class="line"><span style="color:#E1E4E8;">a</span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0000</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1100</span></span>
<span class="line"><span style="color:#E1E4E8;">a</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">011</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1101</span></span>
<span class="line"><span style="color:#E1E4E8;">a</span><span style="color:#F97583;">^</span><span style="color:#E1E4E8;">b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">011</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">001</span></span>
<span class="line"><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">a  </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1100</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">011</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">011</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1100</span></span>
<span class="line"><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0000</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1101</span></span>
<span class="line"><span style="color:#B31D28;font-style:italic;">----------------</span><span style="color:#D73A49;">-</span></span>
<span class="line"><span style="color:#24292E;">a</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0000</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1100</span></span>
<span class="line"><span style="color:#24292E;">a</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">011</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1101</span></span>
<span class="line"><span style="color:#24292E;">a</span><span style="color:#D73A49;">^</span><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">011</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">001</span></span>
<span class="line"><span style="color:#D73A49;">~</span><span style="color:#24292E;">a  </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1100</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">011</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">&amp;</td><td style="text-align:left;">按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0</td><td style="text-align:left;">(a &amp; b) 输出结果 12 ，二进制解释： 0000 1100</td></tr><tr><td style="text-align:left;">|</td><td style="text-align:left;">按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。</td><td style="text-align:left;">(a | b) 输出结果 61 ，二进制解释： 0011 1101</td></tr><tr><td style="text-align:left;">^</td><td style="text-align:left;">按位异或运算符：当两对应的二进位相异时，结果为1</td><td style="text-align:left;">(a ^ b) 输出结果 49 ，二进制解释： 0011 0001</td></tr><tr><td style="text-align:left;">~</td><td style="text-align:left;">按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。<strong>~x</strong> 类似于 <strong>-x-1</strong></td><td style="text-align:left;">(~a ) 输出结果 -61 ，二进制解释： 1100 0011， 在一个有符号二进制数的补码形式。</td></tr><tr><td style="text-align:left;">&lt;&lt;</td><td style="text-align:left;">左移动运算符：运算数的各二进位全部左移若干位，由&quot;&lt;&lt;&quot;右边的数指定移动的位数，高位丢弃，低位补0。</td><td style="text-align:left;">a &lt;&lt; 2 输出结果 240 ，二进制解释： 1111 0000</td></tr><tr><td style="text-align:left;">&gt;&gt;</td><td style="text-align:left;">右移动运算符：把&quot;&gt;&gt;&quot;左边的运算数的各二进位全部右移若干位，&quot;&gt;&gt;&quot;右边的数指定移动的位数</td><td style="text-align:left;">a &gt;&gt; 2 输出结果 15 ，二进制解释： 0000 1111</td></tr></tbody></table><h3 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-label="Permalink to &quot;逻辑运算符&quot;">​</a></h3><p>Python语言支持逻辑运算符，以下假设变量 a 为 10, b为 20:</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">逻辑表达式</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">and</td><td style="text-align:left;">x and y</td><td style="text-align:left;">布尔&quot;与&quot; - 如果 x 为 False，x and y 返回 x 的值，否则返回 y 的计算值。</td><td style="text-align:left;">(a and b) 返回 20。</td></tr><tr><td style="text-align:left;">or</td><td style="text-align:left;">x or y</td><td style="text-align:left;">布尔&quot;或&quot; - 如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值。</td><td style="text-align:left;">(a or b) 返回 10。</td></tr><tr><td style="text-align:left;">not</td><td style="text-align:left;">not x</td><td style="text-align:left;">布尔&quot;非&quot; - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td><td style="text-align:left;">not(a and b) 返回 False</td></tr></tbody></table><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">True</span></span>
<span class="line"><span style="color:#E1E4E8;">b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">False</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> b)  </span><span style="color:#6A737D;">#False 相当于js &amp;&amp;</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> b) </span><span style="color:#6A737D;">#True  相当于js ||</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> b))  </span><span style="color:#6A737D;">#True 相当于取反</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span></span>
<span class="line"><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">False</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> b)  </span><span style="color:#6A737D;">#False 相当于js &amp;&amp;</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> b) </span><span style="color:#6A737D;">#True  相当于js ||</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">not</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> b))  </span><span style="color:#6A737D;">#True 相当于取反</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="成员运算符" tabindex="-1">成员运算符 <a class="header-anchor" href="#成员运算符" aria-label="Permalink to &quot;成员运算符&quot;">​</a></h3><p>Python还支持成员运算符，测试实例中包含了一系列的成员，包括字符串，列表或元组。</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">in</td><td style="text-align:left;">如果在指定的序列中找到值返回 True，否则返回 False。</td><td style="text-align:left;">x 在 y 序列中 , 如果 x 在 y 序列中返回 True。</td></tr><tr><td style="text-align:left;">not in</td><td style="text-align:left;">如果在指定的序列中没有找到值返回 True，否则返回 False。</td><td style="text-align:left;">x 不在 y 序列中 , 如果 x 不在 y 序列中返回 True。</td></tr></tbody></table><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span></span>
<span class="line"><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> ]</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ( a </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;"> ):</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&quot;1 - 变量 a 在给定的列表中 list 中&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&quot;1 - 变量 a 不在给定的列表中 list 中&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">变量 a 不在给定的列表中 </span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;"> 中</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ( b </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;"> ):</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&quot;2 - 变量 b 不在给定的列表中 list 中&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&quot;2 - 变量 b 在给定的列表中 list 中&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">变量 b 不在给定的列表中 </span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;"> 中</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 修改变量 a 的值</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ( a </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;"> ):</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&quot;3 - 变量 a 在给定的列表中 list 中&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&quot;3 - 变量 a 不在给定的列表中 list 中&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">变量 a 在给定的列表中 </span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;"> 中</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span></span>
<span class="line"><span style="color:#005CC5;">list</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> ]</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ( a </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">list</span><span style="color:#24292E;"> ):</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&quot;1 - 变量 a 在给定的列表中 list 中&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&quot;1 - 变量 a 不在给定的列表中 list 中&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">变量 a 不在给定的列表中 </span><span style="color:#005CC5;">list</span><span style="color:#24292E;"> 中</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ( b </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">list</span><span style="color:#24292E;"> ):</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&quot;2 - 变量 b 不在给定的列表中 list 中&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&quot;2 - 变量 b 在给定的列表中 list 中&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">变量 b 不在给定的列表中 </span><span style="color:#005CC5;">list</span><span style="color:#24292E;"> 中</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 修改变量 a 的值</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ( a </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">list</span><span style="color:#24292E;"> ):</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&quot;3 - 变量 a 在给定的列表中 list 中&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&quot;3 - 变量 a 不在给定的列表中 list 中&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">变量 a 在给定的列表中 </span><span style="color:#005CC5;">list</span><span style="color:#24292E;"> 中</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>`,57),t=[o];function e(r,c,y,E,i,d){return n(),a("div",null,t)}const u=s(p,[["render",e]]);export{F as __pageData,u as default};
