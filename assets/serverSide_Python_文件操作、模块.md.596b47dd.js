import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.d7c6e0b6.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"serverSide/Python/文件操作、模块.md","filePath":"serverSide/Python/文件操作、模块.md","lastUpdated":1721987715000}'),p={name:"serverSide/Python/文件操作、模块.md"},o=l(`<h2 id="文件的操作" tabindex="-1">文件的操作 <a class="header-anchor" href="#文件的操作" aria-label="Permalink to &quot;文件的操作&quot;">​</a></h2><h3 id="读取" tabindex="-1">读取 <a class="header-anchor" href="#读取" aria-label="Permalink to &quot;读取&quot;">​</a></h3><p>注意事项，如果文件打开之后，后面这个文件的所有操作都将会续接上次的位置</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">f </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;d:/Python/dataType/a.txt&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;r&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">encoding</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;utf-8&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#打开文件</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(f.read()) </span><span style="color:#6A737D;">#读取文件内容 文件.read(num) num是读取多少字，不传是所有</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(f.readlines()) </span><span style="color:#6A737D;">#读取所有行，返回一个列表,如果传入num是读取几行</span></span>
<span class="line"><span style="color:#E1E4E8;">line1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> f.readline() </span><span style="color:#6A737D;">#读取一行</span></span>
<span class="line"><span style="color:#E1E4E8;">line2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> f.readline() </span><span style="color:#6A737D;">#读取一行</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> f: </span><span style="color:#6A737D;">#遍历文件,一行一行</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(i)</span></span>
<span class="line"><span style="color:#E1E4E8;">f.close() </span><span style="color:#6A737D;">#关闭文件</span></span>
<span class="line"><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;d:/Python/dataType/a.txt&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;r&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">encoding</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;utf-8&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> f: </span><span style="color:#6A737D;">#with语句打开文件,自动关闭文件</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> f:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(i)</span></span>
<span class="line"><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;d:/Python/dataType/a.txt&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;r&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">encoding</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;utf-8&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> f:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 读取itheima出现的次数</span></span>
<span class="line"><span style="color:#E1E4E8;">    line_count </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> line </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> f:</span></span>
<span class="line"><span style="color:#E1E4E8;">        line </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> line.strip().split(</span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> line:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(i </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;itheima&#39;</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">                line_count </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(line_count)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">f </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;d:/Python/dataType/a.txt&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;r&#39;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">encoding</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;utf-8&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#打开文件</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(f.read()) </span><span style="color:#6A737D;">#读取文件内容 文件.read(num) num是读取多少字，不传是所有</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(f.readlines()) </span><span style="color:#6A737D;">#读取所有行，返回一个列表,如果传入num是读取几行</span></span>
<span class="line"><span style="color:#24292E;">line1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.readline() </span><span style="color:#6A737D;">#读取一行</span></span>
<span class="line"><span style="color:#24292E;">line2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.readline() </span><span style="color:#6A737D;">#读取一行</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> f: </span><span style="color:#6A737D;">#遍历文件,一行一行</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(i)</span></span>
<span class="line"><span style="color:#24292E;">f.close() </span><span style="color:#6A737D;">#关闭文件</span></span>
<span class="line"><span style="color:#D73A49;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;d:/Python/dataType/a.txt&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;r&quot;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">encoding</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> f: </span><span style="color:#6A737D;">#with语句打开文件,自动关闭文件</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> f:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(i)</span></span>
<span class="line"><span style="color:#D73A49;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;d:/Python/dataType/a.txt&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;r&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">encoding</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> f:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 读取itheima出现的次数</span></span>
<span class="line"><span style="color:#24292E;">    line_count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> line </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> f:</span></span>
<span class="line"><span style="color:#24292E;">        line </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> line.strip().split(</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> line:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;itheima&#39;</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">                line_count </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(line_count)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="写入" tabindex="-1">写入 <a class="header-anchor" href="#写入" aria-label="Permalink to &quot;写入&quot;">​</a></h3><ul><li><p>直接调用write，内容并未真正写入文件，而是会积攒在程序的内存中，称之为缓冲区</p></li><li><p>当调用flush的时候，内容会真正写入文件</p><p>close()方法，附带flush()方法的功能</p></li><li><p>这样做是避免频繁的操作硬盘，导致效率下降（攒一堆，一次性写磁盘）</p></li></ul><ol><li>使用<code>w</code>模式，每次写入会将原有内容清空，写入新内容</li><li>使用<code>a</code>模式，文件不存在会创建文件,文件存在会在最后追加内容写入文件</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;d:/Python/dataType/a.txt&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;w&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">encoding</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;utf-8&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> f:</span></span>
<span class="line"><span style="color:#E1E4E8;">    f.write(</span><span style="color:#9ECBFF;">&quot;你好&quot;</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;"># 写入  </span></span>
<span class="line"><span style="color:#E1E4E8;">    f.flush()  </span><span style="color:#6A737D;"># 刷新</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;d:/Python/dataType/a.txt&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;w&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">encoding</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> f:</span></span>
<span class="line"><span style="color:#24292E;">    f.write(</span><span style="color:#032F62;">&quot;你好&quot;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;"># 写入  </span></span>
<span class="line"><span style="color:#24292E;">    f.flush()  </span><span style="color:#6A737D;"># 刷新</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="模块" tabindex="-1">模块 <a class="header-anchor" href="#模块" aria-label="Permalink to &quot;模块&quot;">​</a></h2><h4 id="模块的导入" tabindex="-1">模块的导入 <a class="header-anchor" href="#模块的导入" aria-label="Permalink to &quot;模块的导入&quot;">​</a></h4><ul><li><p>from可以省略，直接import</p></li><li><p>as别名可以省略</p></li><li><p>通过”.”来调用模块提供的功能</p></li><li><p>模块的导入一般写在代码文件的开头位置</p></li><li><p>常用的组合形式如：</p><ul><li><p>import 模块名</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 导入</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> 模块名</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> 模块名1，模块名2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使用</span></span>
<span class="line"><span style="color:#E1E4E8;">模块名.功能名()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 导入</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> 模块名</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> 模块名1，模块名2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使用</span></span>
<span class="line"><span style="color:#24292E;">模块名.功能名()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>from 模块名 import 类、变量、方法等</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 导入</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> 模块名 </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> 功能名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使用</span></span>
<span class="line"><span style="color:#E1E4E8;">功能名()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 导入</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> 模块名 </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> 功能名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使用</span></span>
<span class="line"><span style="color:#24292E;">功能名()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>from 模块名 import *</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"># 导入</span></span>
<span class="line"><span style="color:#e1e4e8;">from 模块名 import *</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"># 使用</span></span>
<span class="line"><span style="color:#e1e4e8;">功能名()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># 导入</span></span>
<span class="line"><span style="color:#24292e;">from 模块名 import *</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"># 使用</span></span>
<span class="line"><span style="color:#24292e;">功能名()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>import 模块名 as 别名</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 导入一：模块定义别名</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> 模块名 </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> 别名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使用一：</span></span>
<span class="line"><span style="color:#E1E4E8;">别名.功能名()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 导入一：模块定义别名</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> 模块名 </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> 别名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使用一：</span></span>
<span class="line"><span style="color:#24292E;">别名.功能名()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>from 模块名 import 功能名 as 别名</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"># 导入二：功能定义别名</span></span>
<span class="line"><span style="color:#e1e4e8;">from 模块名 import 功能 as 别名</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"># 使用二：</span></span>
<span class="line"><span style="color:#e1e4e8;">别名()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># 导入二：功能定义别名</span></span>
<span class="line"><span style="color:#24292e;">from 模块名 import 功能 as 别名</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"># 使用二：</span></span>
<span class="line"><span style="color:#24292e;">别名()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul></li></ul><h4 id="包" tabindex="-1">包 <a class="header-anchor" href="#包" aria-label="Permalink to &quot;包&quot;">​</a></h4><h5 id="自定义包" tabindex="-1">自定义包 <a class="header-anchor" href="#自定义包" aria-label="Permalink to &quot;自定义包&quot;">​</a></h5><p>创建包，文件</p><ul><li>导入包与导入模块几种方式类似，例如：</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> 包名.模块名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">包名.模块名.功能名()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> 包名.模块名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">包名.模块名.功能名()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>限制导入</p><ul><li>可以在<code>__init__.py</code>文件中添加<code>__all__ = [&#39;模块名&#39;]</code>，控制允许导入的模块列表</li><li>与导入模块类似<code>__all__</code>只针对<code>from 包名.模块名 import *</code>而对其他方式无效</li></ul><h5 id="安装第三方包-pip" tabindex="-1">安装第三方包 pip <a class="header-anchor" href="#安装第三方包-pip" aria-label="Permalink to &quot;安装第三方包 pip&quot;">​</a></h5>`,19),e=[o];function r(t,c,i,y,E,d){return n(),a("div",null,e)}const h=s(p,[["render",r]]);export{b as __pageData,h as default};
